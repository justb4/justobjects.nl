<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software on Clarity</title>
    <link>https://justobjects.nl/categories/software/</link>
    <description>Recent content in Software on Clarity</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Tue, 04 Jan 2022 13:24:25 +0000</lastBuildDate><atom:link href="https://justobjects.nl/categories/software/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Adiós 2021</title>
      <link>https://justobjects.nl/adios-2021/</link>
      <pubDate>Tue, 04 Jan 2022 13:24:25 +0000</pubDate>
      
      <guid>https://justobjects.nl/adios-2021/</guid>
      <description>
        
          &lt;p&gt;Overview of my professional life in 2021. Highlights of living and working in the Open Source Geospatial and OSGeo(&lt;a href=&#34;https://osgeo.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;.nl&lt;/a&gt;
|.&lt;a href=&#34;https://www.osgeo.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;org&lt;/a&gt;
)-world in 2021.
Organized by &amp;quot;Theme&amp;quot;.&lt;/p&gt;
&lt;p&gt;Like 2020, 2021 was again a &amp;quot;special year&amp;quot; in pandemic terms. How to cope?
Like Paul Ramsey writes: &lt;a href=&#34;http://blog.cleverelephant.ca/2022/01/things.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;I feel like sharing some of my favourite things&lt;/a&gt;
.
Will do in a later post: &lt;a href=&#34;https://waarneming.nl/users/146535/observations/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Bird-watching&lt;/a&gt;
, &lt;a href=&#34;https://www.weylintracking.nl/workshop-wolvensporen/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Wolf-tracking workshop&lt;/a&gt;
, &#39;catching&#39; big game on new wildcam, developed outdoor GPS-game (Veluwe Big Five), some progress on guitar-playing,
discovering The Netherlands outback, becoming
a &lt;a href=&#34;https://www.billystrings.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Billy Strings&lt;/a&gt;
 fan. These are a few of my favourite things, so more later....&lt;/p&gt;
&lt;p&gt;TL;DR Main three 2021 highlights:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Organizing and attending an in-real-life &lt;a href=&#34;https://foss4g.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FOSS4G-NL&lt;/a&gt;
 with OSGeo.nl&lt;/li&gt;
&lt;li&gt;Attending, presenting, moderating, online &lt;a href=&#34;https://2021.foss4g.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FOSS4G Buenos Aires&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Deep-diving into &lt;a href=&#34;https://www.redhat.com/en/topics/devops/what-is-gitop&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GitOps&lt;/a&gt;
.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Below follow 2021-highlights organized by theme and/or project.&lt;/p&gt;
&lt;h2 id=&#34;1-fun-home-automation-projects&#34;&gt;1. Fun Home Automation Projects&lt;/h2&gt;
&lt;p&gt;Some of my 2022 fun resolutions resolved in 2021:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Installed an &lt;a href=&#34;https://www.froggit.de/product_info.php?language=en&amp;amp;info=p436_hp1000se-pro-wi-fi-internet-wireless-weather-station.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;HP1000SE PRO Wi-Fi Internet Wireless Weather Station&lt;/a&gt;
. Using &lt;a href=&#34;https://github.com/justb4/weatherstation&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;weewx on Raspberry Pi&lt;/a&gt;
. Publishing a.o. to &lt;a href=&#34;https://www.wunderground.com/dashboard/pws/IGELDERL153&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Weather Underground&lt;/a&gt;
.&lt;/li&gt;
&lt;li&gt;Wildcam&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2022/wildcam.jpg&#34;
      alt=&#34;Some mammals on the Wildcam&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;More on these later.&lt;/p&gt;
&lt;h2 id=&#34;2-new-website&#34;&gt;2. New Website&lt;/h2&gt;
&lt;p&gt;For years my website/blog &lt;a href=&#34;https://justobjects.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;justobjects.nl&lt;/a&gt;
 ran on Wordpress at the famous, and first (est. 1993),
Dutch internet/hosting provider &lt;a href=&#34;https://en.wikipedia.org/wiki/XS4ALL&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;XS4ALL&lt;/a&gt;
. XS4ALL was sold to KPN (1998), remained an independent brand,
but was finally dismantled in 2021.&lt;/p&gt;
&lt;p&gt;So in early 2021 a new hosting provider was needed.
This was also a good moment to migrate my website to &lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Hugo&lt;/a&gt;
.
With the great effort by &lt;a href=&#34;https://github.com/peter-govind&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;@peter-govind&lt;/a&gt;
 (via &lt;a href=&#34;https://freelance.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;freelance.com&lt;/a&gt;
), we converted the complete site (about 20 years of blogs)
to &lt;a href=&#34;https://github.com/justb4/justobjects.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Hugo&amp;#43;Github&lt;/a&gt;
, using GitHub Workflows to &amp;quot;deploy-on-commit&amp;quot;. My first piece of GitOps, more to follow, in 2021.
Though there are still some fixes to do, very happy with the result. Maintaining is now a breeze.&lt;/p&gt;
&lt;h2 id=&#34;3-gitops&#34;&gt;3. GitOps&lt;/h2&gt;
&lt;p&gt;Gradually &lt;a href=&#34;https://www.weave.works/technologies/gitops/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GitOps&lt;/a&gt;
 became my main theme in 2021.
Discovered that there was actually a name (GitOps) for CI/CD practices I (you) have been doing over the past years.
For example, in 2019 I worked on the &lt;a href=&#34;https://github.com/geopython/demo.pygeoapi.io&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;pygeoapi demo server&lt;/a&gt;
. GitOps can always be taken further
until reaching the phase: &amp;quot;look ma, no hands!&amp;quot;. No more &amp;quot;Box Hugging&amp;quot;, i.e. no more SSH-ing, manual actions on VMs etc.&lt;/p&gt;
&lt;p&gt;So what is GitOps? Many definitions are available. Often &lt;a href=&#34;https://www.manning.com/books/gitops-and-kubernetes&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;tied to Kubernetes&lt;/a&gt;
 (K8s), but GitOps is broader than K8s.
The most concise I found at &lt;a href=&#34;https://www.redhat.com/en/topics/devops/what-is-gitops&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;RedHat&lt;/a&gt;
:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&amp;quot;GitOps is a set of practices to manage infrastructure and application configurations using Git, an open source version control system. GitOps works by using Git as a single source of truth for declarative infrastructure and applications.&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I often quote here: &lt;strong&gt;&amp;quot;The Truth is in Git!&amp;quot;&lt;/strong&gt;. Especially now in times of fake-news, I love speaking those words in presentations.
The quest of humanity is over: We Found The Truth, It Is In Git :-).
Pun aside, it takes effort to have 100% of your deployment sources and configs in Git. In particular all required credentials
(passwords, keys etc). Think of storing credentials in a public GitHub repo, how? Did some amazing discoveries in that area like
(combining) GitHub Secrets and &lt;a href=&#34;https://docs.ansible.com/ansible/latest/cli/ansible-vault.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ansible Vault&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;I was very lucky that my main three contracts in 2021 involved GitOps. One project sort of followed the other.&lt;/p&gt;
&lt;h3 id=&#34;geonovum&#34;&gt;Geonovum&lt;/h3&gt;
&lt;p&gt;It all began in June at &lt;a href=&#34;https://www.geonovum.nl/themas/testbed-ogc-apis&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Geonovum&lt;/a&gt;
 who started an OGC API Testbed as part of
their ongoing &lt;a href=&#34;https://www.geonovum.nl/themas/kennisplatform-apis&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Dutch API Strategy&lt;/a&gt;
 theme.&lt;/p&gt;
&lt;p&gt;Together with &lt;a href=&#34;https://geocat.net&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoCat&lt;/a&gt;
 &lt;a href=&#34;https://www.linkedin.com/in/paulvangenuchten/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Paul van Genuchten&lt;/a&gt;
, developed a full-stack deployment for several &lt;a href=&#34;https://ogcapi.ogc.org/features/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OGC API Features&lt;/a&gt;
 implementations.
The picture below depicts the stack elements:&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://apitestdocs.geonovum.nl/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2022/gitops/services-stack.png&#34;
      alt=&#34;GitOps Deployment - Operational Stack&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;The challenge was to provide a testbed environment where third parties could further extend and experiment.
Eventually we developed a deployment fully based on &lt;a href=&#34;https://github.com/Geonovum/ogc-api-testbed&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GitOps within GitHub&lt;/a&gt;
 as a GitHub Template repo.
You can read details in the &lt;a href=&#34;https://apitestdocs.geonovum.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;documentation&lt;/a&gt;
.
The picture below depicts the GitOps workflow:&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://apitestdocs.geonovum.nl/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2022/gitops/schema.png&#34;
      alt=&#34;GitOps Workflow&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;These results were presented at several occasions in 2021. See the Presentations below.&lt;/p&gt;
&lt;h3 id=&#34;geocat&#34;&gt;Geocat&lt;/h3&gt;
&lt;p&gt;For GeoCat (again with Paul van Genuchten), exploring and setting out how to further migrate to full GitOps
for the &lt;a href=&#34;https://www.geocat.net/live/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoCat Live&lt;/a&gt;
 environment.&lt;/p&gt;
&lt;h3 id=&#34;european-commission---joint-research-center&#34;&gt;European Commission - Joint Research Center&lt;/h3&gt;
&lt;p&gt;Was already working on a contract with &lt;a href=&#34;https://ec.europa.eu/info/departments/joint-research-centre_en&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;EC-JRC&lt;/a&gt;

for pan-EU data sharing as a member of the &amp;quot;EU JRC ELISE Pool of Experts&amp;quot;.
An honour to be (still) working with all these great minds from the international geospatial world!&lt;/p&gt;
&lt;p&gt;My focus within the team was/is on data services deployment. My pitch and first deliverable, was called
&lt;em&gt;&amp;quot;The Power of Orchestrated Containerisation for Data Services&amp;quot;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The full outcome of the project will be published (publicly) as a JRC Technical Report (JRC127730?) titled:
&lt;em&gt;&amp;quot;Emerging approaches for data-driven innovation in Europe&amp;quot;&lt;/em&gt;. For this report, wrote the
chapter &lt;em&gt;&amp;quot;Deployment of an OGC API Features web service using GitOps&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Apart from reporting in text, also provided a full-stack OGC API Features service based on &lt;a href=&#34;https://pygeoapi.io&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;pygeoapi&lt;/a&gt;
.
Using the &lt;a href=&#34;https://github.com/Geonovum/ogc-api-testbed&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Geonovum OGC API GitHub Template&lt;/a&gt;

on a fresh Ubuntu VM provided by JRC, this was a great Proof-of-Concept: took just 2 hours to
get the complete stack, including stuff like SSL-certificates, &lt;a href=&#34;https://traefik.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Traefik&lt;/a&gt;
 proxy (love Traefik!), OS-hardening etc, &lt;a href=&#34;https://jrc.map5.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;up and running&lt;/a&gt;
.
For now the GitHub repo is at &lt;a href=&#34;https://github.com/justb4/ogc-api-jrc/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;github.com/justb4/ogc-api-jrc/&lt;/a&gt;
.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://apitestdocs.geonovum.nl/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2022/gitops/pygeoapi-jrc.png&#34;
      alt=&#34;pygeoapi for EC JRC&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;h2 id=&#34;4-osgeonl&#34;&gt;4. OSGeo.nl&lt;/h2&gt;
&lt;h3 id=&#34;foss4g-nl-2021---irl&#34;&gt;FOSS4G-NL 2021 - IRL&lt;/h3&gt;
&lt;p&gt;Yes, it happened! Inbetween COVID-Waves a LOC lead by the great &lt;a href=&#34;https://www.linkedin.com/in/erikmeerburg/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Erik Meerburg&lt;/a&gt;
 achieved to organize
an in-real-life (IRL) &lt;a href=&#34;https://foss4g.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;4th OSGeo.nl FOSS4G-NL conference&lt;/a&gt;
.
Abiding with COVID-regulations at the time. At ITC Enschede on October 19-20 2021. Using 2G access.
Zero COVID-cases after.&lt;/p&gt;
&lt;p&gt;One day of Workshops followed by a one-day conference with great international keynotes
by &lt;a href=&#34;https://www.linkedin.com/in/amelieagagnon/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Amelie A Gagnon from UNESCO-IIEP&lt;/a&gt;
 and
&lt;a href=&#34;https://www.linkedin.com/in/kurtmenke&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Kurt Menke from Septima DK&lt;/a&gt;
, plus three parallel sessions.
We are still preparing the website to publish all presentations.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://foss4g.nl/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2022/foss4gnl/group-photo.jpg&#34;
      alt=&#34;Group Photo FOSS4G 2021&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;Looks unreal this group photo, but this was in 2021!
Thanks to all who made this event a success!&lt;/p&gt;
&lt;h3 id=&#34;the-big-geo-show&#34;&gt;The Big Geo Show&lt;/h3&gt;
&lt;p&gt;This was already my 2020 highlight. You can watch back all shows via &lt;strong&gt;&lt;a href=&#34;https://tv.osgeo.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;tv.osgeo.nl&lt;/a&gt;
&lt;/strong&gt; or directly on
the &lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCvSAN6ur4RoGUqxtvmgsb8g&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSGeo.nl YouTube Channel&lt;/a&gt;
&lt;/strong&gt;. Hell, you can even &lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLJMEnRQpAfZqCkhGh3lb3KUnXssK7Sk6C&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;binge-watch all episodes&lt;/a&gt;
&lt;/strong&gt;!&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://youtu.be/nhlIqMyBIig&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2022/dggs/osm.jpg&#34;
      alt=&#34;Episode 15 - OpenStreetMap Special with Ilya Zverev&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;In 2021 we did six shows, each a Special:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Episode 14: &lt;a href=&#34;https://tv.osgeo.nl/episode/episode-0014/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Newyear with QGIS-NL and OpenStreetMap-NL communities&lt;/a&gt;
.&lt;/li&gt;
&lt;li&gt;Episode 15: &lt;a href=&#34;https://tv.osgeo.nl/episode/episode-0015/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenStreetMap Special&lt;/a&gt;
. Special guest: Ilya Zverev a.k.a. &lt;a href=&#34;https://wiki.openstreetmap.org/wiki/User:Zverik&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Zverik&lt;/a&gt;
!&lt;/li&gt;
&lt;li&gt;Episode 16: &lt;a href=&#34;https://tv.osgeo.nl/episode/episode-0016/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GIS with your Keyboard&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Episode 17: &lt;a href=&#34;https://tv.osgeo.nl/episode/episode-0017/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;On Geospatial Databases&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Episode 18: &lt;a href=&#34;https://tv.osgeo.nl/episode/episode-0018/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Cartography Special&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Episode 19: &lt;a href=&#34;https://tv.osgeo.nl/episode/episode-0019/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ten Years of OSGeo.nl - Story in Pictures&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://tv.osgeo.nl/episode/episode-0016/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2022/dggs/gis-keyboard.jpg&#34;
      alt=&#34;Episode 16 - GIS with your Keyboard&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;With a real instant-music-composer-performer, &lt;a href=&#34;https://www.muziektaal.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Luciën Greefkes&lt;/a&gt;

in our team, we together made a &lt;a href=&#34;https://www.youtube.com/watch?v=ZrfrcpWR29s&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;new DGGS leader video&lt;/a&gt;
.&lt;/p&gt;
&lt;h3 id=&#34;osgeonl---ten-year-anniversary&#34;&gt;OSGeo.nl - Ten Year Anniversary&lt;/h3&gt;
&lt;p&gt;OSGeo.nl was established on Dec 2, 2011. So 10 years, still going strong!
On dec 2, 2021 we were in a new wave, so a small online event. Below the epic picture (by Arnulf Christl)
taken at the GIN Congres Utrecht 2011 where we got together to start OSGeo.nl.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://osgeo.nl/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2022/osgeonl-founding.jpg&#34;
      alt=&#34;OSGeo.nl Founding Mothers and Fathers - 2011&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;A special episode of the Big Geo Show presents: &lt;a href=&#34;https://youtu.be/yMAxQEg0fSw&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ten Years of OSGeo.nl - Story in Pictures&lt;/a&gt;
.&lt;/p&gt;
&lt;h2 id=&#34;5-geospatial-cloud-services&#34;&gt;5. Geospatial Cloud Services&lt;/h2&gt;
&lt;p&gt;Moved into providing Geospatial Cloud Services last few years,
both as a source of income and to support/strengthen underlying open source
projects with which they are developed. Warning: shameless ads below. All below was ongoing in 2021.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.map5.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;map5.nl&lt;/a&gt;
&lt;/strong&gt; is a subscription service for Dutch topographic, historical- and embellished hill-shade and arial maps I started to host in 2015. In 2021 work started for a map5.nl user portal.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://www.map5.nl/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2020/01/map5.nl_.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://geoqos.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoQoS.com&lt;/a&gt;
&lt;/strong&gt; is a hosted &lt;strong&gt;&lt;a href=&#34;https://geohealthcheck.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoHealthCheck&lt;/a&gt;
&lt;/strong&gt; (GHC) service on a subscription basis. GHC is an uptime and QoS monitor for (OGC) web services. Customers get their own GHC instance. &lt;strong&gt;&lt;a href=&#34;https://geoqos.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoQoS.com&lt;/a&gt;
&lt;/strong&gt; saves the burden of self-hosting GHC. In 2021 started work on a GHC API, using &lt;a href=&#34;https://fastapi.tiangolo.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FastAPI&lt;/a&gt;
, and a new GHC-UI.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://geoqos.com/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2020/01/geoqos.com_.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://geotoko.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;geotoko.nl&lt;/a&gt;
&lt;/strong&gt;, in short GeoToko, is basically a webshop to download Dutch open geo-datasets. One may ask: Dutch geospatial data like Topography, Addresses and Buildings, is already open and publicly available, mainly via &lt;strong&gt;&lt;a href=&#34;https://pdok.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Kadaster-PDOK&lt;/a&gt;
&lt;/strong&gt;. So why bother reselling? Explanation follows.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://geotoko.nl/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2021/01/opentopo-keyreg.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;Most Dutch Open geospatial datasets, available from governmental institutions like Kadaster, are provided in a neutral exchange-format. In practice: GML (Application Schema). Most users are not able to directly digest complex GML in their applications (or don&#39;t want to spend time on that). For over 10 years we run the Open Source project &lt;strong&gt;&lt;a href=&#34;https://github.com/nlextract/NLExtract&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;NLExtract&lt;/a&gt;
&lt;/strong&gt; to convert these datasets into formats like PostGIS and CSV that can be directly used in applications. NLExtract itself builds on &lt;strong&gt;&lt;a href=&#34;https://www.stetl.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Stetl&lt;/a&gt;
&lt;/strong&gt;, an Open Source geospatial ETL-library in Python. NLExtract/Stetl is used a lot, but still will require users to install/maintain an NLExtract/Stetl installation, download datasets, run the ETL, check results etc. That may also be a bridge too far, if e.g. all a customer needs is a one-time CSV of say, all 10 million addresses in The Netherlands. So GeoToko taps into this niche, providing ready-to-use, often enriched Dutch datasets. Pricing is reasonable, compared to other providers, plus organizations and individuals may get highly reduced pricing when they work on Open data applications like OpenStreetMap.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://geotoko.nl/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2021/01/bigpicture.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;As for development: the &lt;strong&gt;&lt;a href=&#34;https://geotoko.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoToko webshop&lt;/a&gt;
&lt;/strong&gt; was developed with Django, Flask/nginx (Download management), Stripe (backend payments) and &lt;strong&gt;&lt;a href=&#34;https://ckan.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;CKAN&lt;/a&gt;
&lt;/strong&gt;. The latter to provide a product-catalogue, sample data and metadata in general, all via &lt;strong&gt;&lt;a href=&#34;https://geocatalogus.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoCatalogus.nl&lt;/a&gt;
&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://geotoko.nl&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2021/01/geofabriek-keten.png&#34;
      alt=&#34;GeoFabriek - Production Chain&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;Further development concerned automating the NLExtract/Stetl ETL-processes.
For this a framework called GeoFabriek, &amp;quot;GeoFactory&amp;quot;, was developed. This automates the entire chain from checking new dataset versions at Kadaster, through downloading, conversions, packing for download and updating the metadata (in GeoCatalogus.nl).&lt;/p&gt;
&lt;h2 id=&#34;6-open-source-contributions&#34;&gt;6. Open Source Contributions&lt;/h2&gt;
&lt;p&gt;Continuous work as a contributor. Apart from some GitLab Projects, you can find/follow me best on &lt;a href=&#34;https://github.com/justb4/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GitHub&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2022/github-contribs-2021.png&#34; alt=&#34;GitHub contributions&#34;&gt;&lt;/p&gt;
&lt;p&gt;New in 2021:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/fastapi-users-starter&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FastAPI-Users starter Template repo&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nlextract.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;NLExtract&lt;/a&gt;
 - added ETL for BAG version 2, my first PRs for GDAL!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ongoing in 2021:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.stetl.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Stetl&lt;/a&gt;
 - Geospatial ETL in Python, maintaining since 2011.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://geohealthcheck.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoHealthCheck&lt;/a&gt;
 - Service Status and QoS Checker for OGC Web Services.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pygeoapi.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;pygeoapi&lt;/a&gt;
 - a Python server implementation of the &lt;a href=&#34;https://www.opengeospatial.org/blog/2996&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OGC API suite of standards&lt;/a&gt;
 - joined this great project in 2019. Also in PSC.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://demo.pygeoapi.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;pygeoapi demo server&lt;/a&gt;
 - provided the (auto-)deployment stack for the pygeoapi demo server (&lt;a href=&#34;https://github.com/geopython/demo.pygeoapi.io&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;code at GitHub&lt;/a&gt;
). Added &lt;a href=&#34;https://demo.pygeoapi.io/covid-19&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;COVID-19 NL data provider&lt;/a&gt;
.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nlextract.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;NLExtract&lt;/a&gt;
 - ETL for Dutch geospatial datasets.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/meggsimum/wegue&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Wegue&lt;/a&gt;
 - geo-webclient framework based on &lt;a href=&#34;https://vuejs.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Vue.js&lt;/a&gt;
 with OpenLayers started by &lt;a href=&#34;https://github.com/chrismayer&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Christian Mayer&lt;/a&gt;
. Joined this great project in 2019. Unfortunately hardly contribs in 2021.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://heron-mc.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Heron MC&lt;/a&gt;
 - Web Mapping Client based on &lt;a href=&#34;https://www.geoext.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoExt&lt;/a&gt;
 and OpenLayers. Yes, old tech but still in wide use. In time hope to migrate to &lt;a href=&#34;https://github.com/meggsimum/wegue&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Wegue&lt;/a&gt;
 (see above). Migrating Heron to Wegue, see first example below.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;more-contributions---handy-docker-images&#34;&gt;More Contributions - Handy Docker Images&lt;/h3&gt;
&lt;p&gt;To support many of the Cloud services and Open Source projects, I develop and maintain &lt;a href=&#34;https://github.com/search?q=user%3Ajustb4&amp;#43;docker-&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;handy Docker Images&lt;/a&gt;
, also available from &lt;a href=&#34;https://hub.docker.com/u/justb4&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;my DockerHub&lt;/a&gt;
.
Ongoing in 2021. In the progress of moving all to Github Workflows build/push, replacing DockerHub Autobuild (still awaiting DockerHub Open Source waiver...):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-awstats&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-awstats&lt;/a&gt;
 - AWStats in Docker, oldie, but very effective webstats. Deploy multiple instances in single Docker container. Highly configurable, e.g. also for &lt;a href=&#34;https://docs.traefik.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Traefik&lt;/a&gt;
 access logs.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-jmeter&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-jmeter&lt;/a&gt;
 - &lt;a href=&#34;https://jmeter.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Apache JMeter&lt;/a&gt;
 wrapped in Docker. Over 10 million pulls at end of 2021. And 180 stars, but still &lt;a href=&#34;https://www.paypal.com/donate/?cmd=_s-xclick&amp;amp;hosted_button_id=3QZW9SNGCWBM4&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;zero donations&lt;/a&gt;
! C&#39;mon people, not even using JMeter myself...&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-mapfish-print&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-mapfish-print&lt;/a&gt;
 - for MapFish Print &lt;strong&gt;version 3&lt;/strong&gt;. MapFish Print allows printing maps as PDFs.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-mapfish-print2&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-mapfish-print2&lt;/a&gt;
 - for MapFish Print &lt;strong&gt;version 2&lt;/strong&gt; - This version is still used in quite some contexts, at least for &lt;a href=&#34;https://heron-mc.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Heron&lt;/a&gt;
 and &lt;a href=&#34;https://kadviewer.map5.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;KadViewer&lt;/a&gt;
.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-rclone&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-rclone&lt;/a&gt;
 - Docker image to perform a &lt;a href=&#34;http://rclone.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;rclone&lt;/a&gt;
 sync based on a cron schedule, with &lt;a href=&#34;https://healthchecks.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;healthchecks.io&lt;/a&gt;
 monitoring.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-pgbackup&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-pgbackup&lt;/a&gt;
 - automated/scheduled PostgreSQL/PostGIS backups for all PostgreSQL-based Docker Containers in its Docker-network. I think it is nifty: just run and forget: your Postgres backups are taken care of. Inspired by: &lt;a href=&#34;https://github.com/kartoza/docker-pg-backup&#34;&gt;https://github.com/kartoza/docker-pg-backup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-mapserver&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-mapserver&lt;/a&gt;
 - Slim Docker Image for MapServer with Lighttpd FastCGI.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-mapproxy&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-mapproxy&lt;/a&gt;
 - MapProxy Docker Image adapted, slimmed, from the &lt;a href=&#34;https://yagajs.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;YAGA Development-Team&lt;/a&gt;
. &lt;a href=&#34;https://github.com/yagajs/docker-mapproxy/pull/18&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Awaiting PR merge&lt;/a&gt;
.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-mapproxy-mapserver&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-mapproxy-mapserver&lt;/a&gt;
 - Docker Image for MapProxy service with built-in MapServer binaries accessed directly (no MapServer service).&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-cron&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-cron&lt;/a&gt;
 - Runs Unix cron, includes docker (compose) client for running remote Docker Images.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;7-conferences---attended&#34;&gt;7. Conferences - Attended&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Feb 6-7 &lt;a href=&#34;https://archive.fosdem.org/2021/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FOSSDEM 2021&lt;/a&gt;
 - Virtual&lt;/li&gt;
&lt;li&gt;Sept 27- Oct 22 - &lt;a href=&#34;http://2020.geopython.net/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FOSS4G Buenos Aires&lt;/a&gt;
 - Virtual&lt;/li&gt;
&lt;li&gt;Oct 19-20 - &lt;a href=&#34;https://info.crunchydata.com/en/postgis-day-2020-crunchy-data&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FOSS4G-NL at ITC Enschede&lt;/a&gt;
 - In Real Life&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;http://2020.geopython.net/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FOSS4G Buenos Aires&lt;/a&gt;
 needs special mention. As an online conference, apart from amazing content, I was very impressed with the
technical and organizational setup. Even the social events were fun to join. Folks are tired of Zoom, Teams, etc but
the FOSS4G LOC had introduced tools like &lt;a href=&#34;https://workadventu.re/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Work Adventure&lt;/a&gt;
 and &lt;a href=&#34;https://streamyard.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;StreamYard&lt;/a&gt;
 (also used by OSgeo.nl in Big Geo Show) to enable more &amp;quot;cozyness&amp;quot;.
Offcourse nothing can replace a real event, but this came close. The Gala Dinner was really fun!&lt;/p&gt;
&lt;p&gt;Jody Garnett words it very well in his Tweet:&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://mobile.twitter.com/jodygarnett/status/1444022337968295938&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2022/foss4g/thankyou.png&#34;
      alt=&#34;Thank You!&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;Never forget, always in our hearts: Malena Libman (1983-2021).
FOSS4G 2021 was also a conference dedicated to, and in memory of, Malena Libman.
She was a pillar of the FOSS4G community and a leading organizer of this conference.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://mappery.org/malena-libman/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2022/foss4g/malena.png&#34;
      alt=&#34;Malena - Photo from mappery.org&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;Malena was the right and truthful winner of the Sol Katz Award 2021.
As the &lt;a href=&#34;https://www.osgeo.org/foundation-news/malena-libman-receives-the-2021-sol-katz-award/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSGeo.org website states&lt;/a&gt;
:
&lt;em&gt;&amp;quot;Malena Libman is the Sol Katz Award winner 2021. The prize was presented at the FOSS4G closing session and handed over to her friends &amp;amp; family who accepted the award on her behalf since we sadly lost Malena in April 2021 to COVID-19.&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;8-talks--workshops---provided&#34;&gt;8. Talks &amp;amp; Workshops - Provided&lt;/h2&gt;
&lt;p&gt;Below talks and workshops I provided in 2021. A complete list of &lt;a href=&#34;https://justobjects.nl/presentations/&#34;&gt;presentations&lt;/a&gt;
 is available.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;&amp;quot;Ten Years of OSGeo.nl - A Story in Pictures&amp;quot; - De Grote Geo Show - Episode 19 (video) - December 2, 2021 - Online&lt;/em&gt;&lt;/strong&gt; - &lt;a href=&#34;https://www.youtube.com/watch?v=yMAxQEg0fSw&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;[Video recording on YouTube]&lt;/a&gt;
 - &lt;a href=&#34;https://tv.osgeo.nl/episode/episode-0019/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;[Episode Info]&lt;/a&gt;
.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;&amp;quot;OGC API Features&amp;quot; - Geonovum - Kennisplatform APIs - &lt;a href=&#34;https://www.geonovum.nl/over-geonovum/agenda/werkgroep-nederlandse-api-strategie-geo-extensie&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Dutch API Strategy - Geo-extension WG&lt;/a&gt;
 - November 24, 2021 - Online&lt;/em&gt;&lt;/strong&gt; - &lt;a href=&#34;https://files.justobjects.nl/presentation/geonovum-2021-api-strategie/OGC-API-Features.pdf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;[PDF Slides by OGC]&lt;/a&gt;
.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;&amp;quot;FOSS4G-NL 2021 - Closing Words&amp;quot; - FOSS4G-NL 2021 - Oktober 20, 2021 - Enschede&lt;/em&gt;&lt;/strong&gt; - &lt;a href=&#34;https://files.justobjects.nl/presentation/foss4gnl-2021/foss4gnl-2021-slot-just.pdf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;[PDF Slides]&lt;/a&gt;
.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;&amp;quot;Zo gemakkelijk kun je geo-webdiensten uitrollen!&amp;quot; - FOSS4G-NL 2021 - Oktober 20, 2021 - Enschede&lt;/em&gt;&lt;/strong&gt; - On GitOps for OSGeo Software -  &lt;a href=&#34;https://files.justobjects.nl/presentation/foss4gnl-2021/foss4gnl-deploy-2021-just.pdf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;[PDF Slides]&lt;/a&gt;
.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;&amp;quot;GeoHealthCheck - A Quality of Service Monitor for Geospatial Web Services&amp;quot; - &lt;a href=&#34;https://2021.foss4g.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FOSS4G 2021&lt;/a&gt;
 - September 30, 2021&lt;/em&gt;&lt;/strong&gt; - &lt;a href=&#34;https://geohealthcheck.org/presentation/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;[HTML Slides]&lt;/a&gt;
 - &lt;a href=&#34;https://callforpapers.2021.foss4g.org/foss4g2021/talk/9NBETK/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;[Abstract]&lt;/a&gt;
 - &lt;a href=&#34;https://www.youtube.com/watch?v=t7Y8FuaE-_M&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;[Video recording on YouTube]&lt;/a&gt;
.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;&amp;quot;Doing Geospatial in Python&amp;quot; - &lt;a href=&#34;https://2021.foss4g.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FOSS4G 2021&lt;/a&gt;
 - September 28, 2021&lt;/em&gt;&lt;/strong&gt; - Workshop (4h): introduction to performing common GIS/geospatial tasks using Python geospatial tools such as OWSLib, Shapely, Fiona/Rasterio, and common geospatial libraries like GDAL, PROJ, pycsw, as well as other tools from the geopython toolchain. -  &lt;a href=&#34;https://geopython.github.io/geopython-workshop/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;[HTML Startpage]&lt;/a&gt;
 - &lt;a href=&#34;https://callforpapers.2021.foss4g.org/foss4g-2021-workshop/talk/7N3G3N/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;[Abstract]&lt;/a&gt;
.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;&amp;quot;Geonovum OGC API Testbed&amp;quot; - Open Geodag 2021 - September 14, 2021&lt;/em&gt;&lt;/strong&gt; - &lt;a href=&#34;https://www.youtube.com/watch?v=rl4-tPbfxOE&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;[PDF Slides]&lt;/a&gt;
 - &lt;a href=&#34;https://youtu.be/apVe6dA5rqs?t=386&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;[Video Recording]&lt;/a&gt;
.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;&amp;quot;Geonovum OGC API Testbed&amp;quot; - DiS Online: OGC en toegankelijke APIs - September 7, 2021&lt;/em&gt;&lt;/strong&gt; - &lt;a href=&#34;https://www.geobasisregistraties.nl/basisregistraties/documenten/publicatie/2021/09/07/dis-online-ogc-en-toegankelijke-apis&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;[Event en PDF Slides]&lt;/a&gt;
.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;&amp;quot;Read BAG (Dutch Buildings &amp;amp; Addresses dataset) with Docker in 5 minutes&amp;quot; - 2021-04-08 - De Grote Geo Show, a live-streaming webshow by OSGeo.nl. Ep. 16 &amp;quot;GIS met je Toetsenbord&amp;quot;. Aired on april 8, 2021. &lt;a href=&#34;https://youtu.be/iOiliIAorD4?t=3542&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Video recording on YouTube&lt;/a&gt;
.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;&amp;quot;OSGeo.nl New Year&#39;s Party - Slides OSGeo.nl&amp;quot; - 2021-01-24 - Presentation I gave on behalf of OSGeo.nl on the online joint QGIS-NL, OpenStreetMap-NL and OSGeo.nl New Year&#39;s party on January 24, 2021.&lt;/em&gt;&lt;/strong&gt;- &lt;a href=&#34;https://www.slideshare.net/justb4/osgeonl-new-years-party-slides-osgeonl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;[Slideshare]&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://callforpapers.2021.foss4g.org/foss4g-2021-workshop/talk/7N3G3N/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2022/foss4g/geopython-workshop-group.jpg&#34;
      alt=&#34;Geopython Workshop at FOSS4G Buenos Aires &#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;Not as much fun as in 2019 Bukarest, but providing the Geopython Workshop at FOSS4G Buenos Aires with those great minds
is still a 2021-highlight.&lt;/p&gt;
&lt;h2 id=&#34;9-resolutions-for-2022&#34;&gt;9. Resolutions for 2022&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Customer portal for &lt;a href=&#34;https://map5.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;map5.nl&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Get back into Kubernetes&lt;/li&gt;
&lt;li&gt;Advance further into full-lifecycle GitOps&lt;/li&gt;
&lt;li&gt;Advance further into Vector Tiling&lt;/li&gt;
&lt;li&gt;More effort into &lt;a href=&#34;https://github.com/meggsimum/wegue&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Wegue&lt;/a&gt;
 project&lt;/li&gt;
&lt;li&gt;Revive old GeoTracing projects  like &lt;a href=&#34;http://georambling.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;georambling.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;More favourite things&lt;/li&gt;
&lt;li&gt;Whatever comes around.&lt;/li&gt;
&lt;/ul&gt;

        
      </description>
    </item>
    
    <item>
      <title>Terraform - First Steps on Hetzner Cloud</title>
      <link>https://justobjects.nl/terraform-first-steps/</link>
      <pubDate>Mon, 13 Sep 2021 13:24:25 +0000</pubDate>
      
      <guid>https://justobjects.nl/terraform-first-steps/</guid>
      <description>
        
          &lt;p&gt;I use &lt;a href=&#34;https://www.ansible.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ansible&lt;/a&gt;
 already for years to provision server
instances and for subsequent CI/CD.
A recent example is the &lt;a href=&#34;https://apitestdocs.geonovum.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Geonovum OGC API Testbed&lt;/a&gt;
.
Here (selective) Docker Containers are automatically deployed on GitHub pushes using Ansible called
from within a GitHub Workflows.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://apitestdocs.geonovum.nl/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2021/09/ogcapi-testbed.png&#34;
      alt=&#34;Geonovum OGC API Testbed CI/CD Architecture&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;Now investigating how  &lt;a href=&#34;https://www.terraform.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Terraform&lt;/a&gt;

could play a key role in (Cloud) infrastructure management.
There is a small overlap between Ansible and Terraform but that is a matter of how they are applied in concert.&lt;/p&gt;
&lt;p&gt;Ansible is more geared towards maintaining the OS and its running components e.g. Docker Containers on VM-instances.
Terraform is more geared to maintaining a Cloud infrastructure,
&amp;quot;in the large&amp;quot;: acquiring VM-instances, networks, DNS.
If you are familiar with AWS, Google Cloud Platform, or in our case &lt;a href=&#34;https://www.hetzner.com/cloud&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Hetzner Cloud&lt;/a&gt;
,
it is what you can do by clicking in their respective UIs or
via their APIs like Hetzner&#39;s &lt;a href=&#34;https://github.com/hetznercloud/cli&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;hcloud&lt;/a&gt;
.
And btw: both Ansible and Terraform are Open Source.&lt;/p&gt;
&lt;p&gt;Quote from
&lt;a href=&#34;https://www.cprime.com/resources/blog/terraform-and-ansible-tutorial-integrating-terraform-managed-instances-with-ansible-control-nodes/#:%5c~:text=Terraform%20and%20Ansible,-So%2C%20why%20do&amp;amp;text=Terraform%20is%20designed%20to%20provision,necessary%20applications%20on%20that%20machine.&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;random web-search&lt;/a&gt;
:
&lt;em&gt;&amp;quot;&lt;strong&gt;Terraform&lt;/strong&gt; is designed to provision different infrastructure components. &lt;strong&gt;Ansible&lt;/strong&gt; is a
configuration-management and application-deployment tool. It means that you&#39;ll use &lt;strong&gt;Terraform&lt;/strong&gt; first
to create, for example, a virtual machine and then use &lt;strong&gt;Ansible&lt;/strong&gt; to install necessary applications on that machine.&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Both Ansible and Terraform are &amp;quot;declarative&amp;quot;, i.e. configuration-based, where the configuration describes a desired state.
ctions are &amp;quot;idempotent&amp;quot;, i.e. the same action can be applied multiple times, but when the desired state is reached it won&#39;t have effect.&lt;/p&gt;
&lt;p&gt;As I plan to apply Terraform in other projects as well, I took a deep dive, following hands-on tutorials from the Terraform website.
&lt;em&gt;&lt;strong&gt;In a very short time I was amazed by Terraform&#39;s power and elegance!&lt;/strong&gt;&lt;/em&gt;
My ultimate goal was to manage (acquire, configure, access, destroy) the lifecycle of &lt;a href=&#34;https://www.hetzner.com/cloud&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Hetzner Cloud&lt;/a&gt;

Virtual Machines (VMs, VPS&#39;s).
This all took about less than two hours, documenting my steps along the way.&lt;/p&gt;
&lt;p&gt;I started at the &lt;a href=&#34;https://learn.hashicorp.com/collections/terraform/aws-get-started&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Getting Started&lt;/a&gt;
 page.
While there is a lot of stuff on AWS, Terraform Cloud, I basically stuck to these four steps.
You may even skip the third (GCP) step. Important is to learn the terminology and config conventions.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Installation&lt;/li&gt;
&lt;li&gt;Using Docker Provider&lt;/li&gt;
&lt;li&gt;Using GCP Provider&lt;/li&gt;
&lt;li&gt;Using Hetzner Cloud Provider
&lt;br&gt;
&lt;em&gt;Tip: in IntelliJ IDEA install the Terraform plugin. It will recognise/help with Terraform files!&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;step-1---installation&#34;&gt;Step 1 - Installation&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://learn.hashicorp.com/tutorials/terraform/install-cli&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;learn.hashicorp.com/tutorials/terraform/install-cli &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;On a Mac with Homebrew install the Terraform CLI:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;$ brew tap hashicorp/tap
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;$ brew install hashicorp/tap/terraform
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;$ terraform -version
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;Terraform v1.0.2
&lt;span class=&#34;ln&#34;&gt;8&lt;/span&gt;on darwin_amd64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That&#39;s it!&lt;/p&gt;
&lt;h3 id=&#34;step-2---using-docker-provider&#34;&gt;Step 2 - Using Docker Provider&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://learn.hashicorp.com/collections/terraform/docker-get-started&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;learn.hashicorp.com/collections/terraform/docker-get-started&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;I started project dirs under &lt;code&gt;~/project/terraform/learn/.&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;$ mkdir -p ~/project/terraform/learn/terraform-docker-container
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create a file called main.tf:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;terraform {
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;  required_providers {
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;    docker = {
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;      source  = &amp;#34;kreuzwerker/docker&amp;#34;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;      version = &amp;#34;~ 2.13.0&amp;#34;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;    }
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;  }
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;}
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;provider &amp;#34;docker&amp;#34; {}
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;resource &amp;#34;docker_image&amp;#34; &amp;#34;nginx&amp;#34; {
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;  name         = &amp;#34;nginx:latest&amp;#34;
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;  keep_locally = false
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;}
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;resource &amp;#34;docker_container&amp;#34; &amp;#34;nginx&amp;#34; {
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;  image = docker_image.nginx.latest
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;  name  = &amp;#34;tutorial&amp;#34;
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;  ports {
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;    internal = 80
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;    external = 8000
&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;  }
&lt;span class=&#34;ln&#34;&gt;24&lt;/span&gt;}
&lt;span class=&#34;ln&#34;&gt;25&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This defines that we will use the Terraform Provider plugin named
&amp;quot;docker&amp;quot; with source &lt;a href=&#34;https://registry.terraform.io/providers/kreuzwerker/docker/latest/docs&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;kreuzwerker/docker&lt;/a&gt;
. `Terraform has a registry of official (Provider) plugins.&lt;/p&gt;
&lt;p&gt;Now initialize and install the plugin:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;$ terraform init
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt; **Initializing the backend...**
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt; **Initializing provider plugins...**
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;- Finding kreuzwerker/docker versions matching &amp;#34;~ 2.13.0&amp;#34;...
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;- Installing kreuzwerker/docker v2.13.0...
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;- Installed kreuzwerker/docker v2.13.0 (self-signed, key ID **24E54F214569A8A5**)
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;. etc
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You may validate your config:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;$ terraform validate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Moment of truth: create the resources:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;$ terraform apply
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Verify the existence of the NGINX container
by visiting &lt;a href=&#34;http://localhost:8000/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;localhost:8000&lt;/a&gt;

in your web browser or running docker ps to see the container.&lt;/p&gt;
&lt;p&gt;That&#39;s it for Docker. Next is to use a real Cloud Provider.&lt;/p&gt;
&lt;h3 id=&#34;step-3---using-gcp-provider&#34;&gt;Step 3 - Using GCP Provider&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://learn.hashicorp.com/collections/terraform/gcp-get-started&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;learn.hashicorp.com/collections/terraform/gcp-get-started&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;This was actually more elaborate than the Hetzner Cloud exercise.
I had a GCP account, so this went smooth: first creating a Network and later a VM Instance.
In this step also learned about using Terraform Providers, Resources, Variables(-files.)
I leave this as an option and skip to Hetzner Cloud which is the goal of this post.&lt;/p&gt;
&lt;h3 id=&#34;step-4---using-hetzner-cloud-provider&#34;&gt;Step 4 - Using Hetzner Cloud Provider&lt;/h3&gt;
&lt;p&gt;The Hetzner Cloud plugin provider was not in the tutorials,
but it was still not too hard to extrapolate from Step 3,
from various Hetzner tutorials and from the &lt;code&gt;hetznercloud/hcloud&lt;/code&gt; Terraform Provider.&lt;/p&gt;
&lt;p&gt;Links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hcloud Provider: &lt;a href=&#34;https://registry.terraform.io/providers/hetznercloud/hcloud/latest&#34;&gt;https://registry.terraform.io/providers/hetznercloud/hcloud/latest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://community.hetzner.com/tutorials/howto-hcloud-terraform&#34;&gt;https://community.hetzner.com/tutorials/howto-hcloud-terraform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://maddevs.io/blog/terraform-hetzner/&#34;&gt;https://maddevs.io/blog/terraform-hetzner/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;using TF-hcloud with Docker: &lt;a href=&#34;https://github.com/insekticid/docker-terraform-hcloud-example/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;github.com/insekticid/docker-terraform-hcloud-example&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Prerequisite is to have a Hetzner Cloud account and
thus login access to &lt;a href=&#34;https://console.hetzner.cloud&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;console.hetzner.cloud&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;Steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;create a new Project in &lt;a href=&#34;https://console.hetzner.cloud/projects,&#34;&gt;https://console.hetzner.cloud/projects,&lt;/a&gt; e.g. &lt;code&gt;TerraformLearn&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;add your SSH public key to this project via &amp;quot;Security&amp;quot; menu link left&lt;/li&gt;
&lt;li&gt;generate and copy an API Token for the project&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My goal was to create a Debian VM, login there with root and SSH key and destroy it afterwards.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;$ mkdir -p ~/project/terraform/learn/terraform-hetzner
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create &lt;code&gt;main.tf&lt;/code&gt; as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;terraform {
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;   required_providers {
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;     hcloud = {
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;       source  = &amp;#34;hetznercloud/hcloud&amp;#34;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;       version = &amp;#34;1.27.2&amp;#34;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;     }
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;   }
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt; }
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt; provider &amp;#34;hcloud&amp;#34; {
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;   token = var.hcloud_token
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt; }
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt; resource &amp;#34;hcloud_server&amp;#34; &amp;#34;node1&amp;#34; {
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;   name        = &amp;#34;node1&amp;#34;
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;   image       = &amp;#34;debian-9&amp;#34;
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;   server_type = &amp;#34;cx11&amp;#34;
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;   ssh_keys = [&amp;#34;just@sunda.lan&amp;#34;]
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt; }
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create a file &lt;code&gt;variables.tf&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt; # Set the variable value in *.tfvars file
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt; # or using the -var=&amp;#34;hcloud_token=...&amp;#34; CLI option
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt; variable &amp;#34;hcloud_token&amp;#34; {
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;   sensitive = true # Requires terraform = 0.14
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt; }
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then a file called &lt;code&gt;terraform.tfvars&lt;/code&gt;.
This is a file with &amp;quot;secrets&amp;quot; normally not checked-in a repo but there are
many other possiblities to deal with secrets/credentials:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt; hcloud_token = &amp;#34;the token string from Hetzner Cloud API Token&amp;#34;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Moment of truth: apply!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;$ terraform init
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;$ terraform apply -auto-approve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Using &lt;code&gt;-auto-approve&lt;/code&gt; you skip the interactive approval-step.&lt;/p&gt;
&lt;p&gt;Next check the Hetzner Cloud Console project page and see the new VM running!&lt;/p&gt;
&lt;p&gt;Try to login on your new VM (IP may also be gotten from &lt;code&gt;output.tf&lt;/code&gt;, another exercise):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;$ ssh root@&amp;lt;Your VM IP&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then destroy your VM:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;$ terraform destroy -auto-approve`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There is much more one can do with the Hetzner Provider:
basically everything that is available in the console
UI and &lt;code&gt;hcloud&lt;/code&gt; API: creating Volumes, managing networks,
adding SSH-keys, snapshots, using &lt;code&gt;cloud-init&lt;/code&gt; etc.
See the manpage in particular the Resources drop-down menu:
&lt;a href=&#34;https://registry.terraform.io/providers/hetznercloud/hcloud/latest/docs&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;registry.terraform.io/providers/hetznercloud/hcloud/latest/docs&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Beware that some Terraform actions are destructive: e.g. upgrading the OS
will destroy the existing VM and create a new.
For those cases Floating IPs and auto-provisioning with Ansible will help.
But in that case Ansible would be more suited to upgrade the OS.
One can always execute &lt;code&gt;terraform plan&lt;/code&gt; first to see the execution plan.
My recommendation is to let Terraform handle the basics, and have Ansible manage the details on VMs.&lt;/p&gt;
&lt;p&gt;Alternatives: TF with DigitalOcean using the DO Provider:
&lt;a href=&#34;https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;registry.terraform.io/providers/digitalocean/digitalocean/latest/docs&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;All in all: Terraform can form a nice partnership with Ansible.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>That Was 2020</title>
      <link>https://justobjects.nl/that-was-2020/</link>
      <pubDate>Wed, 20 Jan 2021 13:24:25 +0000</pubDate>
      
      <guid>https://justobjects.nl/that-was-2020/</guid>
      <description>
        
          &lt;p&gt;Overview of my professional life in 2020. Highlights of living and working in the Open Source Geospatial and OSGeo(&lt;a href=&#34;https://osgeo.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;.nl&lt;/a&gt;
|.&lt;a href=&#34;https://www.osgeo.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;org&lt;/a&gt;
)-world in 2020. Organized by “Theme”.&lt;/p&gt;
&lt;p&gt;Yes, 2020 was a “special year” in pandemic and political terms. So much has been written and opinions expressed, that I don’t see a need to add to more here. Some of my activities below may make clear how I and we (OSGeo.nl community) dealt.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://tv.osgeo.nl&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2021/01/various-4eps.jpg&#34;
      alt=&#34;Screenshots of De Grote Geo Show&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;!--
&lt;div id=&#34;attachment_947&#34; style=&#34;width: 796px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://tv.osgeo.nl&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-947&#34; loading=&#34;lazy&#34; class=&#34;size-full wp-image-947&#34; src=&#34;../uploads/2021/01/various-4eps.jpg&#34; alt=&#34;Screenshots of De Grote Geo Show&#34; width=&#34;786&#34; height=&#34;432&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2021/01/various-4eps.jpg 786w, https://justobjects.nl/wp-content/uploads/2021/01/various-4eps-300x165.jpg 300w, https://justobjects.nl/wp-content/uploads/2021/01/various-4eps-768x422.jpg 768w, https://justobjects.nl/wp-content/uploads/2021/01/various-4eps-150x82.jpg 150w&#34; sizes=&#34;(max-width: 786px) 100vw, 786px&#34; /&gt;&lt;/a&gt;

  &lt;p id=&#34;caption-attachment-947&#34; class=&#34;wp-caption-text&#34;&gt;
    Screenshots of De Grote Geo Show
  &lt;/p&gt;
&lt;/div&gt;
--&gt;
&lt;p&gt;TL;DR. My absolute 2020-highlight was initiating and working on &lt;strong&gt;&lt;a href=&#34;https://tv.osgeo.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;De Grote Geo Show&lt;/a&gt;
&lt;/strong&gt; (“DGGS, The Big Geo Show”), a live-streamed webshow in “De Wereld Draait Door”-style. This was/is a great team-effort by Dutch Open Source Geo/OSGeo.nl community members. Kudos to Erik, Niene, Mariëlle, Jonna, Willem, Hans and many many more (about 30+ folks)! We streamed 13 shows in 2020 with a huge range of subjects and (international) guests. And we’re still going strong with a &lt;strong&gt;&lt;a href=&#34;https://tv.osgeo.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;DGGS New Year’s Show/Socializer&lt;/a&gt;
&lt;/strong&gt; on Sunday, Jan. 24, 2021.&lt;/p&gt;
&lt;p&gt;Below follow 2020-highlights by theme.&lt;/p&gt;
&lt;h3 id=&#34;the-big-geo-show&#34;&gt;The Big Geo Show&lt;/h3&gt;
&lt;p&gt;Let’s start with the absolute 2020 highlight. It became clear in March 2020 that we had to cancel or virtualize our planned (June 2020, ITC Enschede) FOSS4G-NL conference and other OSGeo.nl events. I invested some time into “webinar streaming software”: Zoom, Jitsi, Teams WebEx etc. Those did not really appeal to me for what I had in mind.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://tv.osgeo.nl&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2021/01/backstage-view-by-niene.jpg&#34;
      alt=&#34;StreamYard - Backstage View&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;!--
&lt;div id=&#34;attachment_999&#34; style=&#34;width: 830px&#34; class=&#34;wp-caption alignnone&#34;&gt;
  &lt;a href=&#34;https://tv.osgeo.nl&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-999&#34; loading=&#34;lazy&#34; class=&#34;size-large wp-image-999&#34; src=&#34;../uploads/2021/01/backstage-view-by-niene-1024x522.jpg&#34; alt=&#34;StreamYard - Backstage View&#34; width=&#34;820&#34; height=&#34;418&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2021/01/backstage-view-by-niene-1024x522.jpg 1024w, https://justobjects.nl/wp-content/uploads/2021/01/backstage-view-by-niene-300x153.jpg 300w, https://justobjects.nl/wp-content/uploads/2021/01/backstage-view-by-niene-768x391.jpg 768w, https://justobjects.nl/wp-content/uploads/2021/01/backstage-view-by-niene-1536x783.jpg 1536w, https://justobjects.nl/wp-content/uploads/2021/01/backstage-view-by-niene-150x76.jpg 150w, https://justobjects.nl/wp-content/uploads/2021/01/backstage-view-by-niene.jpg 1902w&#34; sizes=&#34;(max-width: 820px) 100vw, 820px&#34; /&gt;&lt;/a&gt;

  &lt;p id=&#34;caption-attachment-999&#34; class=&#34;wp-caption-text&#34;&gt;
    &lt;strong&gt;&lt;em&gt;StreamYard &amp;#8211; Backstage View&lt;/em&gt;&lt;/strong&gt;
  &lt;/p&gt;
&lt;/div&gt;
--&gt;
&lt;p&gt;For personal streaming, I was testing &lt;strong&gt;&lt;a href=&#34;https://obsproject.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OBS Studio&lt;/a&gt;
&lt;/strong&gt;, streaming to Twitch.tv and YouTube. I then stumbled on &lt;strong&gt;&lt;a href=&#34;https://www.learnwithjason.dev/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;“Learn with Jason”&lt;/a&gt;
&lt;/strong&gt;. Very entertaining and deeply technical at the same time. I liked the format of having guests in the stream. That triggered me to do something similar with the Open Source Geo community in the Netherlands. Long story short: I had the idea to do a short, 1 hour webshow with various subjects and guests. Before I knew we had a Telegram group of now around 30 folks with a kernel of about 6-8 and started brainstorming. The other element which added to the success was my discovery of &lt;strong&gt;&lt;a href=&#34;https://streamyard.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;StreamYard.com&lt;/a&gt;
&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://tv.osgeo.nl&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2021/01/combined2.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;!--
&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter size-full wp-image-997&#34; src=&#34;../uploads/2021/01/combined2.png&#34; alt=&#34;&#34; width=&#34;800&#34; height=&#34;214&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2021/01/combined2.png 800w, https://justobjects.nl/wp-content/uploads/2021/01/combined2-300x80.png 300w, https://justobjects.nl/wp-content/uploads/2021/01/combined2-768x205.png 768w, https://justobjects.nl/wp-content/uploads/2021/01/combined2-150x40.png 150w&#34; sizes=&#34;(max-width: 800px) 100vw, 800px&#34; /&gt;
--&gt;
&lt;p&gt;Now &lt;strong&gt;&lt;a href=&#34;https://streamyard.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;StreamYard&lt;/a&gt;
&lt;/strong&gt; is a whole story by itself. In short it differs from all the well-known video-conf programs that it is a Cloud-based Broadcast Studio. Conceptually it is like making a real TV-show. There is a Stage (main screen) which can be “branded” in all sorts of creative, interactive ways: backgrounds, overlays, banners/tickers, video clips (e.g. for intro/outro or soapboxes), screen layouts, chat messages from viewers. All is controlled by one or more “hosts” (Dutch: “regisseurs”). Guests join “backstage” first and can be added to the “stage” when their item starts. And last but not least: the entire Stage can be streamed to multiple destinations at the same time like YouTube, Twitch.tv, LinkedIn etc. but also to custom RTMP servers. Viewers who missed the show could watch back later. StreamYard works completely in the browser, no installs needed. Ok, StreamYard is not Open Source, but their registration is very minimal: one only needs to provide an email adres to which a temporary login code is sent, no profile-filling etc.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://tv.osgeo.nl&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2021/01/combined.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;!--
&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter wp-image-993&#34; src=&#34;../uploads/2021/01/combined.png&#34; alt=&#34;&#34; width=&#34;800&#34; height=&#34;232&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2021/01/combined.png 1024w, https://justobjects.nl/wp-content/uploads/2021/01/combined-300x87.png 300w, https://justobjects.nl/wp-content/uploads/2021/01/combined-768x223.png 768w, https://justobjects.nl/wp-content/uploads/2021/01/combined-150x44.png 150w&#34; sizes=&#34;(max-width: 800px) 100vw, 800px&#34; /&gt;
--&gt;
&lt;p&gt;So we just started, all of us not really familiar with providing online events and being first-timers in StreamYard. One learns quickest by just jumping into the deep, learning by doing, not bother about mistakes. We quickly adopted a format for a weekly one-hour show, always at the same time, Thursdays 4-5 PM. A central website &lt;strong&gt;&lt;a href=&#34;https://tv.osgeo.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;tv.osgeo.nl&lt;/a&gt;
&lt;/strong&gt; was quickly online (with GitHub and &lt;strong&gt;&lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Hugo&lt;/a&gt;
&lt;/strong&gt;!), so we can refer to a single, short URL.&lt;/p&gt;
&lt;p&gt;The format of each show was basically to have 5-6 items in an hour. An “item” could be an interview with a guest, a technical presentation (or mixed interview/presentation), a column, community updates, a (hands-on) tutorial, a poem, or last but least a live-quiz (via Kahoot) where viewers can participate! After the first show (where we looked a bit like rabbits in headlights!), we quickly realized we need a presenter-host for the entire show. So all subsequent shows had one of us, well mainly Niene, being the talkshow-host. We also decided to do the show in Dutch, except with international guests, as to engage our local communities (OSGeo-NL, QGIS-NL, OpenStreetMap-NL).&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://www.youtube.com/playlist?list=PLJMEnRQpAfZqCkhGh3lb3KUnXssK7Sk6C&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2021/01/episode-1-10.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;!--
&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter size-full wp-image-1001&#34; src=&#34;../uploads/2021/01/episode-1-10.png&#34; alt=&#34;&#34; width=&#34;808&#34; height=&#34;267&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2021/01/episode-1-10.png 808w, https://justobjects.nl/wp-content/uploads/2021/01/episode-1-10-300x99.png 300w, https://justobjects.nl/wp-content/uploads/2021/01/episode-1-10-768x254.png 768w, https://justobjects.nl/wp-content/uploads/2021/01/episode-1-10-150x50.png 150w&#34; sizes=&#34;(max-width: 808px) 100vw, 808px&#34; /&gt;
--&gt;
&lt;p&gt;Enough theory, show me the show! As said you can watch back all shows via &lt;strong&gt;&lt;a href=&#34;https://tv.osgeo.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;tv.osgeo.nl&lt;/a&gt;
&lt;/strong&gt; or directly on the &lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCvSAN6ur4RoGUqxtvmgsb8g&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSGeo.nl YouTube Channel&lt;/a&gt;
&lt;/strong&gt;. Hell, you can even &lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLJMEnRQpAfZqCkhGh3lb3KUnXssK7Sk6C&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;binge-watch all episodes&lt;/a&gt;
&lt;/strong&gt;!&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://tv.osgeo.nl&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2021/01/combined3.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;!--
&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter size-full wp-image-1004&#34; src=&#34;../uploads/2021/01/combined3.png&#34; alt=&#34;&#34; width=&#34;906&#34; height=&#34;324&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2021/01/combined3.png 906w, https://justobjects.nl/wp-content/uploads/2021/01/combined3-300x107.png 300w, https://justobjects.nl/wp-content/uploads/2021/01/combined3-768x275.png 768w, https://justobjects.nl/wp-content/uploads/2021/01/combined3-150x54.png 150w&#34; sizes=&#34;(max-width: 906px) 100vw, 906px&#34; /&gt;
--&gt;
&lt;p&gt;Many shows were organized around a theme, like 3D (&lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=UViczA8pvJs&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;ep. 3 offcourse&lt;/a&gt;
&lt;/strong&gt;), Heaven&amp;amp;Outer Space, Corona of the Sun (&lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=8qSTPE8Gkoc&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;ep. 6 on Ascension Day&lt;/a&gt;
&lt;/strong&gt;). We had some great guests in the show, also international guests, to name a few: Nadieh Bremer and Christian Mayer (&lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=zXIfCLbuVlI&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;ep. 7 – Visualization Special&lt;/a&gt;
&lt;/strong&gt;), Hugo Ledoux (TU Delft on 3D), Linda van den Brink (Geonovum) and Tom Kralidis (&lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=3l_a5Up8Rgc&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;ep 11 – on OGC API Special&lt;/a&gt;
&lt;/strong&gt;), Anita Graser (&lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=lkfVQcp3bpI&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;ep. 9 – QGIS Special&lt;/a&gt;
&lt;/strong&gt;),  Naomi Bueno de Mesquita and Topi Tjukanov (&lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=rl4-tPbfxOE&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;ep 12. MapTime Special&lt;/a&gt;
&lt;/strong&gt;). The last show of 2020, &lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HTgdEN3nb24&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;ep. 13 Christmas Edition, was one big PubQuiz&lt;/a&gt;
&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://tv.osgeo.nl&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2021/01/grote-geo-eiland-screenshot.jpg&#34;
      alt=&#34;NewYear on &amp;#8220;Grote Geo Eiland&amp;#8221;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;!--
&lt;div id=&#34;attachment_1006&#34; style=&#34;width: 830px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://tv.osgeo.nl&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-1006&#34; loading=&#34;lazy&#34; class=&#34;size-large wp-image-1006&#34; src=&#34;../uploads/2021/01/grote-geo-eiland-screenshot-1024x658.jpg&#34; alt=&#34;&#34; width=&#34;820&#34; height=&#34;527&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2021/01/grote-geo-eiland-screenshot-1024x658.jpg 1024w, https://justobjects.nl/wp-content/uploads/2021/01/grote-geo-eiland-screenshot-300x193.jpg 300w, https://justobjects.nl/wp-content/uploads/2021/01/grote-geo-eiland-screenshot-768x494.jpg 768w, https://justobjects.nl/wp-content/uploads/2021/01/grote-geo-eiland-screenshot-150x96.jpg 150w, https://justobjects.nl/wp-content/uploads/2021/01/grote-geo-eiland-screenshot.jpg 1249w&#34; sizes=&#34;(max-width: 820px) 100vw, 820px&#34; /&gt;&lt;/a&gt;

  &lt;p id=&#34;caption-attachment-1006&#34; class=&#34;wp-caption-text&#34;&gt;
    &lt;em&gt;&lt;strong&gt;NewYear on &amp;#8220;Grote Geo Eiland&amp;#8221;&lt;/strong&gt;&lt;/em&gt;
  &lt;/p&gt;
&lt;/div&gt;
--&gt;
&lt;p&gt;All in all we did 13 shows in 2020. And 2021? We’ll start with a Newyear Special with OSGeo-NL, QGIS-NL and OpenStreetMap-NL communities. Only the plenary first half-hour in StreamYard, then next a new platform where all can participate and mingle. Just watch and participate on sun, jan 24, 2021, 3 PM (GMT+1) via &lt;strong&gt;&lt;a href=&#34;https://tv.osgeo.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;tv.osgeo.nl&lt;/a&gt;
&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&#34;geospatial-cloud-services&#34;&gt;Geospatial Cloud Services&lt;/h3&gt;
&lt;p&gt;Moving into providing Geospatial Cloud Services last few years, both as a source of income and to support/strengthen underlying open source projects with which they are developed. Warning: shameless ads below.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.map5.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;map5.nl&lt;/a&gt;
&lt;/strong&gt; is a subscription service for Dutch topographic, historical- and embellished hill-shade and arial maps I started to host in 2015. In 2020 the entire map5.nl server-infrastructure was moved from custom Ubuntu-installs to a complete &lt;strong&gt;&lt;a href=&#34;https://www.ansible.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ansible&lt;/a&gt;
&lt;/strong&gt;/Docker-based setup.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://www.map5.nl/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2020/01/map5.nl_.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;!--
&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter size-full wp-image-917&#34; src=&#34;../uploads/2020/01/map5.nl_.png&#34; alt=&#34;&#34; width=&#34;800&#34; height=&#34;592&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2020/01/map5.nl_.png 800w, https://justobjects.nl/wp-content/uploads/2020/01/map5.nl_-300x222.png 300w, https://justobjects.nl/wp-content/uploads/2020/01/map5.nl_-768x568.png 768w, https://justobjects.nl/wp-content/uploads/2020/01/map5.nl_-150x111.png 150w&#34; sizes=&#34;(max-width: 800px) 100vw, 800px&#34; /&gt;
--&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://geoqos.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoQoS.com&lt;/a&gt;
&lt;/strong&gt; is a hosted &lt;strong&gt;&lt;a href=&#34;https://geohealthcheck.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoHealthCheck&lt;/a&gt;
&lt;/strong&gt; (GHC) service on a subscription basis. GHC is an uptime and QoS monitor for (OGC) web services. Customers get their own GHC instance. &lt;strong&gt;&lt;a href=&#34;https://geoqos.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoQoS.com&lt;/a&gt;
&lt;/strong&gt; saves the burden of self-hosting GHC. Launch was in 2019, growing steady in 2020. Expect to work more on API and new UI for GeoHealthCheck (below) in 2021.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://geoqos.com/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2020/01/geoqos.com_.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;!--
&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter wp-image-915 size-full&#34; src=&#34;../uploads/2020/01/geoqos.com_.png&#34; alt=&#34;&#34; width=&#34;952&#34; height=&#34;563&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2020/01/geoqos.com_.png 952w, https://justobjects.nl/wp-content/uploads/2020/01/geoqos.com_-300x177.png 300w, https://justobjects.nl/wp-content/uploads/2020/01/geoqos.com_-768x454.png 768w, https://justobjects.nl/wp-content/uploads/2020/01/geoqos.com_-150x89.png 150w&#34; sizes=&#34;(max-width: 952px) 100vw, 952px&#34; /&gt;
--&gt;
&lt;ul&gt;
&lt;li&gt;Feb 2020 – launched &lt;strong&gt;&lt;a href=&#34;https://geotoko.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;geotoko.nl&lt;/a&gt;
&lt;/strong&gt;. geotoko.nl, in short GeoToko, is basically a webshop to download Dutch open geo-datasets. Here one may ask: Dutch geospatial data like Topography, Addresses and Buildings, is already open and publicly available, mainly via &lt;strong&gt;&lt;a href=&#34;https://pdok.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Kadaster-PDOK&lt;/a&gt;
&lt;/strong&gt;. So why bother reselling? This needs some explanation.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://geotoko.nl/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2021/01/opentopo-keyreg.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;!--
&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter size-full wp-image-953&#34; src=&#34;../uploads/2021/01/opentopo-keyreg.png&#34; alt=&#34;&#34; width=&#34;558&#34; height=&#34;188&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2021/01/opentopo-keyreg.png 558w, https://justobjects.nl/wp-content/uploads/2021/01/opentopo-keyreg-300x101.png 300w, https://justobjects.nl/wp-content/uploads/2021/01/opentopo-keyreg-150x51.png 150w&#34; sizes=&#34;(max-width: 558px) 100vw, 558px&#34; /&gt;
--&gt;
&lt;p&gt;Most Dutch Open geospatial datasets, as available from governmental institutions like Kadaster, are provided in a neutral exchange-format. In practice: GML (Application Schema). Most users are not able to directly digest complex GML in their applications (or don’t want to spend time on that). For over 10 years we run the Open Source project &lt;strong&gt;&lt;a href=&#34;https://github.com/nlextract/NLExtract&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;NLExtract&lt;/a&gt;
&lt;/strong&gt; to convert these datasets into formats like PostGIS and CSV that can be directly used in applications. NLExtract itself builds on &lt;strong&gt;&lt;a href=&#34;https://www.stetl.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Stetl&lt;/a&gt;
&lt;/strong&gt;, an Open Source geospatial ETL-library in Python. NLExtract/Stetl is used a lot, but still will require users to install/maintain an NLExtract/Stetl installation, download datasets, run the ETL, check results etc. That may also be a bridge too far, if e.g. all a customer needs is a one-time CSV of say, all 10 million addresses in The Netherlands. So GeoToko taps into this niche, providing ready-to-use, often enriched Dutch datasets. Pricing is reasonable, compared to other providers, plus organizations and individuals may get highly reduced pricing when they work on Open data applications like OpenStreetMap.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://geotoko.nl/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2021/01/bigpicture.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;!--
&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter wp-image-954 size-full&#34; src=&#34;../uploads/2021/01/bigpicture.png&#34; alt=&#34;GeoToko High-level Architecture&#34; width=&#34;500&#34; height=&#34;310&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2021/01/bigpicture.png 500w, https://justobjects.nl/wp-content/uploads/2021/01/bigpicture-300x186.png 300w, https://justobjects.nl/wp-content/uploads/2021/01/bigpicture-150x93.png 150w&#34; sizes=&#34;(max-width: 500px) 100vw, 500px&#34; /&gt;
--&gt;
&lt;p&gt;As for development: the &lt;strong&gt;&lt;a href=&#34;https://geotoko.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoToko webshop&lt;/a&gt;
&lt;/strong&gt; was developed with Django, Flask/nginx (Download management), Stripe (backend payments) and &lt;strong&gt;&lt;a href=&#34;https://ckan.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;CKAN&lt;/a&gt;
&lt;/strong&gt;. The latter to provide a product-catalogue, sample data and metadata in general, all via &lt;strong&gt;&lt;a href=&#34;https://geocatalogus.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoCatalogus.nl&lt;/a&gt;
&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://geotoko.nl&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2021/01/geofabriek-keten.png&#34;
      alt=&#34;GeoFabriek &amp;#8211; Production Chain&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;!--
&lt;div id=&#34;attachment_956&#34; style=&#34;width: 924px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://geotoko.nl&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-956&#34; loading=&#34;lazy&#34; class=&#34;size-full wp-image-956&#34; src=&#34;../uploads/2021/01/geofabriek-keten.png&#34; alt=&#34;&#34; width=&#34;914&#34; height=&#34;287&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2021/01/geofabriek-keten.png 914w, https://justobjects.nl/wp-content/uploads/2021/01/geofabriek-keten-300x94.png 300w, https://justobjects.nl/wp-content/uploads/2021/01/geofabriek-keten-768x241.png 768w, https://justobjects.nl/wp-content/uploads/2021/01/geofabriek-keten-150x47.png 150w&#34; sizes=&#34;(max-width: 914px) 100vw, 914px&#34; /&gt;&lt;/a&gt;

  &lt;p id=&#34;caption-attachment-956&#34; class=&#34;wp-caption-text&#34;&gt;
    &lt;strong&gt;GeoFabriek &amp;#8211; Production Chain&lt;/strong&gt;
  &lt;/p&gt;
&lt;/div&gt;
--&gt;
&lt;p&gt;Further development concerned automating the NLExtract/Stetl ETL-processes. For this a framework called GeoFabriek, “GeoFactory”, was developed. This automates the entire chain from checking new dataset versions at Kadaster, through downloading, conversions, packing for download and updating the metadata (in GeoCatalogus.nl).&lt;/p&gt;
&lt;h3 id=&#34;contract-work&#34;&gt;Contract Work&lt;/h3&gt;
&lt;p&gt;As my focus is more and more on providing “Geospatial Cloud Services” (see above), did not take not too much contract work in 2020, though I am always open for offerings (but may say ‘no’)!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For &lt;strong&gt;&lt;a href=&#34;https://www.geolicious.de/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Geolicious (Germany)&lt;/a&gt;
&lt;/strong&gt;. Developed a Wegue &lt;strong&gt;&lt;a href=&#34;https://map.naturpark-lueneburger-heide.de/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;interactive map for the German National Park Luneburger Heide&lt;/a&gt;
&lt;/strong&gt;. This also gave a boost to the &lt;strong&gt;&lt;a href=&#34;https://github.com/meggsimum/wegue&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Wegue Open Source project&lt;/a&gt;
&lt;/strong&gt; (see below). Was an honour to work together with the great &lt;strong&gt;&lt;a href=&#34;https://www.opengeospatial.org/blog/2996&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Steve Bennett&lt;/a&gt;
&lt;/strong&gt; a.k.a. @stevage.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://map.naturpark-lueneburger-heide.de/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2021/01/screenshot-1.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;!--
&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter size-full wp-image-971&#34; src=&#34;../uploads/2021/01/screenshot-1.png&#34; alt=&#34;&#34; width=&#34;800&#34; height=&#34;524&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2021/01/screenshot-1.png 800w, https://justobjects.nl/wp-content/uploads/2021/01/screenshot-1-300x197.png 300w, https://justobjects.nl/wp-content/uploads/2021/01/screenshot-1-768x503.png 768w, https://justobjects.nl/wp-content/uploads/2021/01/screenshot-1-150x98.png 150w&#34; sizes=&#34;(max-width: 800px) 100vw, 800px&#34; /&gt;
--&gt;
&lt;p&gt;Various new Widgets for Wegue were developed. To name a few: Enhanced Layer Tree, Enhanced Feature Info (see picture), Share Button, Routing, Multi-language, PDF Print, Download Features, Layout Improvements. Also introduced a “create-app” to have a starter app. We are in the process of merging back these new features into the Wegue core.&lt;/p&gt;
&lt;h3 id=&#34;open-source-contributions&#34;&gt;Open Source Contributions&lt;/h3&gt;
&lt;p&gt;Continuous work as a contributor. Apart from some GitLab Projects, you can find/follow me best on &lt;a href=&#34;https://github.com/justb4/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GitHub&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2021/01/contribs-2020.png&#34; alt=&#34;GitHub contributions&#34;&gt;&lt;/p&gt;
&lt;!--
&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter size-full wp-image-965&#34; src=&#34;../uploads/2021/01/contribs-2020.png&#34; alt=&#34;&#34; width=&#34;773&#34; height=&#34;206&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2021/01/contribs-2020.png 773w, https://justobjects.nl/wp-content/uploads/2021/01/contribs-2020-300x80.png 300w, https://justobjects.nl/wp-content/uploads/2021/01/contribs-2020-768x205.png 768w, https://justobjects.nl/wp-content/uploads/2021/01/contribs-2020-150x40.png 150w&#34; sizes=&#34;(max-width: 773px) 100vw, 773px&#34; /&gt;
--&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.stetl.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Stetl&lt;/a&gt;
 – Geospatial ETL in Python, maintaining since 2011.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://geohealthcheck.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoHealthCheck&lt;/a&gt;
 – Service Status and QoS Checker for OGC Web Services.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pygeoapi.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;pygeoapi&lt;/a&gt;
 – a Python server implementation of the &lt;a href=&#34;https://www.opengeospatial.org/blog/2996&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OGC API suite of standards&lt;/a&gt;
 – joined this great project in 2019. Also in PSC.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://demo.pygeoapi.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;pygeoapi demo server&lt;/a&gt;
 – provided the (auto-)deployment stack for the pygeoapi demo server (&lt;a href=&#34;https://github.com/geopython/demo.pygeoapi.io&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;code at GitHub&lt;/a&gt;
). Added &lt;a href=&#34;https://demo.pygeoapi.io/covid-19&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;COVID-19 NL data provider&lt;/a&gt;
.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nlextract.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;NLExtract&lt;/a&gt;
 – ETL for Dutch geospatial datasets.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/meggsimum/wegue&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Wegue&lt;/a&gt;
 – geo-webclient framework based on &lt;a href=&#34;https://vuejs.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Vue.js&lt;/a&gt;
 with OpenLayers started by &lt;a href=&#34;https://github.com/chrismayer&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Christian Mayer&lt;/a&gt;
. Joined this great project in 2019.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://heron-mc.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Heron MC&lt;/a&gt;
 – Web Mapping Client based on &lt;a href=&#34;https://www.geoext.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoExt&lt;/a&gt;
 and OpenLayers. Yes, old tech but still in wide use. In time hope to migrate to &lt;a href=&#34;https://github.com/meggsimum/wegue&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Wegue&lt;/a&gt;
 (see above). Migrating Heron to Wegue, see first example below.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://wegue.heron-mc.org/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2021/01/screenshot-heron-wegue-1.jpg&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;!--
&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter size-full wp-image-974&#34; src=&#34;../uploads/2021/01/screenshot-heron-wegue-1.jpg&#34; alt=&#34;&#34; width=&#34;800&#34; height=&#34;568&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2021/01/screenshot-heron-wegue-1.jpg 800w, https://justobjects.nl/wp-content/uploads/2021/01/screenshot-heron-wegue-1-300x213.jpg 300w, https://justobjects.nl/wp-content/uploads/2021/01/screenshot-heron-wegue-1-768x545.jpg 768w, https://justobjects.nl/wp-content/uploads/2021/01/screenshot-heron-wegue-1-150x107.jpg 150w, https://justobjects.nl/wp-content/uploads/2021/01/screenshot-heron-wegue-1-285x201.jpg 285w&#34; sizes=&#34;(max-width: 800px) 100vw, 800px&#34; /&gt;
--&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mapproxy.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;MapProxy&lt;/a&gt;
 – joined Program Steering Committee (PSC)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://access.crunchydata.com/documentation/pg_tileserv/latest/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;pg_tileserv&lt;/a&gt;
 Vector Tiles directly  from PostGIS!&lt;br&gt;
Contributed &lt;a href=&#34;https://github.com/CrunchyData/pg_tileserv/blob/master/Dockerfile.alpine&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Dockerfile&lt;/a&gt;
 and &lt;a href=&#34;https://github.com/CrunchyData/pg_tileserv/tree/master/examples/docker&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Docker-example&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;more-contributions-8211-handy-docker-images&#34;&gt;More Contributions – Handy Docker Images&lt;/h3&gt;
&lt;p&gt;To support many of the Cloud services and Open Source projects, I develop and maintain &lt;a href=&#34;https://github.com/search?q=user%3Ajustb4&amp;#43;docker-&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;handy Docker Images&lt;/a&gt;
, also available from &lt;a href=&#34;https://hub.docker.com/u/justb4&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;my DockerHub&lt;/a&gt;
.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-awstats&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-awstats&lt;/a&gt;
 – AWStats in Docker, oldie, but very effective webstats. Deploy multiple instances in single Docker container. Highly configurable, e.g. also for &lt;a href=&#34;https://docs.traefik.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Traefik&lt;/a&gt;
 access logs.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-jmeter&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-jmeter&lt;/a&gt;
 – &lt;a href=&#34;https://jmeter.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Apache JMeter&lt;/a&gt;
 wrapped in Docker. Over 1 million pulls!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-mapfish-print&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-mapfish-print&lt;/a&gt;
 – for MapFish Print &lt;strong&gt;version 3&lt;/strong&gt;. MapFish Print allows printing maps as PDFs.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-mapfish-print2&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-mapfish-print2&lt;/a&gt;
 – for MapFish Print &lt;strong&gt;version 2&lt;/strong&gt; – This version is still used in quite some contexts, at least for &lt;a href=&#34;https://heron-mc.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Heron&lt;/a&gt;
 and &lt;a href=&#34;https://kadviewer.map5.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;KadViewer&lt;/a&gt;
.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-rclone&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-rclone&lt;/a&gt;
 – Docker image to perform a &lt;a href=&#34;http://rclone.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;rclone&lt;/a&gt;
 sync based on a cron schedule, with &lt;a href=&#34;https://healthchecks.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;healthchecks.io&lt;/a&gt;
 monitoring.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-pgbackup&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-pgbackup&lt;/a&gt;
 – automated/scheduled PostgreSQL/PostGIS backups for all PostgreSQL-based Docker Containers in its Docker-network. I think it is nifty: just run and forget: your Postgres backups are taken care of. Inspired by: &lt;a href=&#34;https://github.com/kartoza/docker-pg-backup&#34;&gt;https://github.com/kartoza/docker-pg-backup&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;New Docker images developed in 2020:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-mapserver&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-mapserver&lt;/a&gt;
 – Slim Docker Image for MapServer with Lighttpd FastCGI.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-mapproxy&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-mapproxy&lt;/a&gt;
 – MapProxy Docker Image adapted, slimmed, from the &lt;a href=&#34;https://yagajs.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;YAGA Development-Team&lt;/a&gt;
. &lt;a href=&#34;https://github.com/yagajs/docker-mapproxy/pull/18&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Awaiting PR merge&lt;/a&gt;
.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-mapproxy-mapserver&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-mapproxy-mapserver&lt;/a&gt;
 – Docker Image for MapProxy service with built-in MapServer binaries accessed directly (no MapServer service).&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-cron&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-cron&lt;/a&gt;
 – Runs Unix cron, includes docker (compose) client for running remote Docker Images.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;osgeonl&#34;&gt;OSGeo.nl&lt;/h3&gt;
&lt;p&gt;As chair of the board, still involved in the OSGeo Dutch Local Chapter, &lt;a href=&#34;https://osgeo.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSGeo.nl&lt;/a&gt;
 since its establishment in 2011.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jan 12 – organizer – joint &lt;a href=&#34;https://geoforum.nl/t/osgeo-nl-en-openstreetmap-nl-nieuwjaarsborrel-zo-13-jan-2019-hilversum/2170&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSGeo.nl and OpenStreetMap NL new-years party&lt;/a&gt;
 at Cafe Dudok in Hilversum. Our last IRL event in 2020….&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;No FOSS4G-NL, plans are for okt 2021, but hey, 13 episodes of &lt;a href=&#34;https://tv.osgeo.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;De Grote Geo Show&lt;/a&gt;
 (see above)!&lt;/p&gt;
&lt;h3 id=&#34;conferences-8211-attended&#34;&gt;Conferences – Attended&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Feb 20-21 – &lt;a href=&#34;https://vuejs.amsterdam/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Vue.js Amsterdam&lt;/a&gt;
 – last physically attended conf in 2020&lt;/li&gt;
&lt;li&gt;Sept 21-22 – &lt;a href=&#34;http://2020.geopython.net/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoPython 2019&lt;/a&gt;
 – Virtual&lt;/li&gt;
&lt;li&gt;Nov 19 – &lt;a href=&#34;https://info.crunchydata.com/en/postgis-day-2020-crunchy-data&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;PostGIS Day 2020&lt;/a&gt;
 – by crunchydata.com&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Had planned: FOSSGIS-DE Freiburg (Germany), FOSS4G-EU Valmiera (Latvia), GeoPython 2020 Bilbao (Spain), FOSS4G 2020 Calgary (Canada) and OSGeo Code Sprint Athens (Greece). Was studying train-tables for all EU events…Oh well.&lt;/p&gt;
&lt;h3 id=&#34;talks--workshops-8211-provided&#34;&gt;Talks &amp;amp; Workshops – Provided&lt;/h3&gt;
&lt;p&gt;Most of my slides on &lt;a href=&#34;https://www.slideshare.net/justb4/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;slideshare.net/justb4&lt;/a&gt;
 . Below my 2020 talks.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sept 21-22 – &lt;a href=&#34;http://2020.geopython.net/schedule.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Python Machine Learning &amp;amp;amp; GeoPython 2020&lt;/a&gt;
 – presented pygeoapi with Francesco Bartoli – [&lt;a href=&#34;https://pygeoapi.io/presentations/default/#/frontpage&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;slides HTML&lt;/a&gt;
]&lt;/li&gt;
&lt;li&gt;Dec 7-9 – GeoNode Summit 2020 – &lt;a href=&#34;https://summit.geonode.org/schedule/#session-106&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;presented pygeoapi&lt;/a&gt;
 with Francesco Bartoli, Tom Kralidis, Angelos Tzotsos – [&lt;a href=&#34;https://pygeoapi.io/presentations/default/#/frontpage&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;slides HTML&lt;/a&gt;
]&lt;/li&gt;
&lt;li&gt;Nov 10 – GeoHealthCheck/&lt;a href=&#34;https://geoqos.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;geoqos.com&lt;/a&gt;
 workshop for &lt;a href=&#34;https://www.rivm.nl/en&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;RIVM&lt;/a&gt;
 (National Institute for Public Health and the Environment)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Probably some more, but cannot find back at this moment.&lt;/p&gt;
&lt;h3 id=&#34;resolutions-2021&#34;&gt;Resolutions 2021&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;More effort into &lt;a href=&#34;https://github.com/meggsimum/wegue&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Wegue&lt;/a&gt;
 project&lt;/li&gt;
&lt;li&gt;Get back into Kubernetes and containerism in general&lt;/li&gt;
&lt;li&gt;Revive old GeoTracing projects  like &lt;a href=&#34;http://georambling.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;georambling.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;HA projects: weather station, wildlife/bird cam, and AQ monitoring with &lt;a href=&#34;http://www.home-assistant.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Home Assistant&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;More hiking and rambling&lt;/li&gt;
&lt;li&gt;Whatever comes around.&lt;/li&gt;
&lt;/ul&gt;

        
      </description>
    </item>
    
    <item>
      <title>Cheers to 2019</title>
      <link>https://justobjects.nl/cheers-to-2019/</link>
      <pubDate>Fri, 17 Jan 2020 01:38:19 +0000</pubDate>
      
      <guid>https://justobjects.nl/cheers-to-2019/</guid>
      <description>
        
          &lt;p&gt;Overview of my professional life in 2019. Inspired by the concise bullet-point-style of Tom Kralidis’ &lt;a href=&#34;http://www.kralidis.ca/blog/2018/12/28/cheers-to-2018/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Cheers to 2018&lt;/a&gt;
,  on which I based &lt;a href=&#34;https://justobjects.nl/cheers-to-2018/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;my previous Cheers to 2018.&lt;/a&gt;
 Highlights of living and working in the Open Source Geospatial and OSGeo(&lt;a href=&#34;https://osgeo.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;.nl&lt;/a&gt;
|.&lt;a href=&#34;https://www.osgeo.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;org&lt;/a&gt;
)-world in 2019. Organized by “Theme” i.s.o. by month.&lt;/p&gt;
&lt;p&gt;TL;DR. My 2019 highlight was providing the &lt;a href=&#34;https://geopython.github.io/geopython-workshop/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoPython Workshop&lt;/a&gt;
 (“Doing Geospatial with Python”) at the &lt;a href=&#34;https://2019.foss4g.org/schedule/workshops/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FOSS4G in Bukarest&lt;/a&gt;
. A really great team-effort: first remote collaboration to get the content done. Then at the spot, despite network failures, providing a hopefully inspiring workshop on modern GeoPython. Kudos to Tom, Angelos, Francesco, Jachym, Luis and Jorge!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2020/01/geopython-workshop-team.jpg&#34; alt=&#34;The GeoPython Workshop Team at FOSS4G 2019 &amp;#8211; Bukarest&#34;&gt;&lt;/p&gt;
&lt;!--
&lt;div id=&#34;attachment_924&#34; style=&#34;width: 830px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img aria-describedby=&#34;caption-attachment-924&#34; loading=&#34;lazy&#34; class=&#34;size-large wp-image-924&#34; src=&#34;uploads/2020/01/geopython-workshop-team-1024x768.jpg&#34; alt=&#34;&#34; width=&#34;820&#34; height=&#34;615&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2020/01/geopython-workshop-team-1024x768.jpg 1024w, https://justobjects.nl/wp-content/uploads/2020/01/geopython-workshop-team-300x225.jpg 300w, https://justobjects.nl/wp-content/uploads/2020/01/geopython-workshop-team-768x576.jpg 768w, https://justobjects.nl/wp-content/uploads/2020/01/geopython-workshop-team-150x113.jpg 150w, https://justobjects.nl/wp-content/uploads/2020/01/geopython-workshop-team.jpg 1200w&#34; sizes=&#34;(max-width: 820px) 100vw, 820px&#34; /&gt;

  &lt;p id=&#34;caption-attachment-924&#34; class=&#34;wp-caption-text&#34;&gt;
    The GeoPython Workshop Team at FOSS4G 2019 &amp;#8211; Bukarest.
  &lt;/p&gt;
&lt;/div&gt;
--&gt;
&lt;p&gt;My second highlight was joining the &lt;a href=&#34;https://pygeoapi.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;pygeoapi&lt;/a&gt;
 project. Had a &lt;a href=&#34;https://justobjects.nl/2nd-time-around-wfs-v3-pygeoapi/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;love/hate relationship with WFS&lt;/a&gt;
, but the new &lt;a href=&#34;https://www.opengeospatial.org/standards/ogcapi-features&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenAPI direction in OGC&lt;/a&gt;
 and the great team behind the pygeoapi project made me want to be part of this. BTW pygeoapi &lt;span style=&#34;font-weight: 400;&#34;&gt;has just (Jan. 2020) received &lt;/span&gt;&lt;a href=&#34;https://www.opengeospatial.org/resource/products/details/?pid=1606&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&amp;lt;span style=&amp;#34;font-weight: 400;&amp;#34;&amp;gt;OGC Compliance Certification and Reference Implementation Status&amp;lt;/span&amp;gt;&lt;/a&gt;
 &lt;span style=&#34;font-weight: 400;&#34;&gt;for OGC API – Features specification.&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;geospatial-cloud-services&#34;&gt;Geospatial Cloud Services&lt;/h3&gt;
&lt;p&gt;Main focus. Seriously moving into hosting Geospatial Cloud Services, both as a source of income and to support/strengthen underlying open source projects. Warning: shameless ads below.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Throughout 2019 – expanded &lt;a href=&#34;https://map5.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;map5.nl&lt;/a&gt;
, a subscription service for Dutch topographic, historical- and embellished hill-shade and arial maps I started to host in 2015.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://map5.nl/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2020/01/map5.nl_.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;!--
&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter size-full wp-image-917&#34; src=&#34;uploads/2020/01/map5.nl_.png&#34; alt=&#34;&#34; width=&#34;800&#34; height=&#34;592&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2020/01/map5.nl_.png 800w, https://justobjects.nl/wp-content/uploads/2020/01/map5.nl_-300x222.png 300w, https://justobjects.nl/wp-content/uploads/2020/01/map5.nl_-768x568.png 768w, https://justobjects.nl/wp-content/uploads/2020/01/map5.nl_-150x111.png 150w&#34; sizes=&#34;(max-width: 800px) 100vw, 800px&#34; /&gt;
--&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;January – launched &lt;a href=&#34;https://geoqos.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoQoS.com&lt;/a&gt;
 , a Cloud-hosted &lt;a href=&#34;https://geohealthcheck.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoHealthCheck&lt;/a&gt;
 (GHC) service on a subscription basis. GHC is is an uptime and QoS monitor for (OGC) web services. Customers get their own GHC instance. &lt;a href=&#34;https://geoqos.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoQoS.com&lt;/a&gt;
 saves the burden of self-hosting GHC. Truly, I can’t do without GHC for any of my geospatial web-services (like &lt;a href=&#34;https://map5.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;map5.nl&lt;/a&gt;
). Developed with &lt;a href=&#34;https://www.djangoproject.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Python Django&lt;/a&gt;
 and &lt;a href=&#34;https://stripe.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Stripe&lt;/a&gt;
, deployed with &lt;a href=&#34;https://www.ansible.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ansible&lt;/a&gt;
 (can’t do without) and off course &lt;a href=&#34;https://www.docker.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Docker&lt;/a&gt;
.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://geoqos.com/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2020/01/geoqos.com_.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;!--
[&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter wp-image-915 size-full&#34; src=&#34;uploads/2020/01/geoqos.com_.png&#34; alt=&#34;&#34; width=&#34;952&#34; height=&#34;563&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2020/01/geoqos.com_.png 952w, https://justobjects.nl/wp-content/uploads/2020/01/geoqos.com_-300x177.png 300w, https://justobjects.nl/wp-content/uploads/2020/01/geoqos.com_-768x454.png 768w, https://justobjects.nl/wp-content/uploads/2020/01/geoqos.com_-150x89.png 150w&#34; sizes=&#34;(max-width: 952px) 100vw, 952px&#34; /&gt;][13]
--&gt;
&lt;ul&gt;
&lt;li&gt;Dec+ into 2020 – something big – more to be announced.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;contract-work&#34;&gt;Contract Work&lt;/h3&gt;
&lt;p&gt;As my focus is more and more on providing “Geospatial Cloud Services” (see above), not too much contract work in 2019, though I am always open for offerings!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For the &lt;a href=&#34;https://ec.europa.eu/jrc/en&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;European Commission Joint Research Center&lt;/a&gt;
 (Ispra, Italy)  -deployed five &lt;a href=&#34;https://airsenseur.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;AirSensEUR&lt;/a&gt;
 air-quality sensor-stations (NO2, NO, CO, O3) within the Netherlands, connecting these to the &lt;a href=&#34;https://data.smartemission.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Smart Emission Platform&lt;/a&gt;
.  &lt;a href=&#34;https://justobjects.nl/emit-5-assembling-and-deploying-5-airsenseurs/&#34;&gt;This blog-post&lt;/a&gt;
 describes the overall setup and this &lt;a href=&#34;https://justobjects.nl/emit-6-airsenseur-calibration&#34;&gt;post the really good calibration results&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2019/02/breuk-sw-no2-ASE_NL_All-2018-09-10-2018-10-09.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!--
&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter size-large wp-image-880&#34; src=&#34;uploads/2019/02/breuk-sw-no2-ASE_NL_All-2018-09-10-2018-10-09-1024x340.png&#34; alt=&#34;&#34; width=&#34;820&#34; height=&#34;272&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2019/02/breuk-sw-no2-ASE_NL_All-2018-09-10-2018-10-09-1024x340.png 1024w, https://justobjects.nl/wp-content/uploads/2019/02/breuk-sw-no2-ASE_NL_All-2018-09-10-2018-10-09-300x100.png 300w, https://justobjects.nl/wp-content/uploads/2019/02/breuk-sw-no2-ASE_NL_All-2018-09-10-2018-10-09-768x255.png 768w, https://justobjects.nl/wp-content/uploads/2019/02/breuk-sw-no2-ASE_NL_All-2018-09-10-2018-10-09-150x50.png 150w&#34; sizes=&#34;(max-width: 820px) 100vw, 820px&#34; /&gt;
--&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For &lt;a href=&#34;https://www.nijmegen.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Gemeente Nijmegen&lt;/a&gt;
 – integrated &lt;a href=&#34;https://luftdaten.info/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Luftdaten.info&lt;/a&gt;
 finedust  (PM10, PM25)  measurements within the &lt;a href=&#34;https://data.smartemission.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Smart Emission Platform&lt;/a&gt;
 via Harvesting.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://data.smartemission.nl/smartapp/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2020/01/luftdaten-smartapp.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;!--
&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter size-full wp-image-904&#34; src=&#34;uploads/2020/01/luftdaten-smartapp.png&#34; alt=&#34;&#34; width=&#34;400&#34; height=&#34;294&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2020/01/luftdaten-smartapp.png 400w, https://justobjects.nl/wp-content/uploads/2020/01/luftdaten-smartapp-300x221.png 300w, https://justobjects.nl/wp-content/uploads/2020/01/luftdaten-smartapp-150x110.png 150w&#34; sizes=&#34;(max-width: 400px) 100vw, 400px&#34; /&gt;
--&gt;
&lt;ul&gt;
&lt;li&gt;For &lt;a href=&#34;https://www.stantec.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Stantec&lt;/a&gt;
 NL – custom &lt;a href=&#34;https://geohealthcheck.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoHealthCheck&lt;/a&gt;
 Plugins (Probes/Checks) for ESRI ArcGIS Feature services, plus several Auth-facilities (Basic, Token) for auth-based web-services.&lt;/li&gt;
&lt;li&gt;For &lt;a href=&#34;https://coin.nl/nl/home&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;COIN NL&lt;/a&gt;
 – &lt;a href=&#34;https://nlextract.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;NLExtract Project&lt;/a&gt;
 – added shortened streetname (&lt;span style=&#34;color: #993300;&#34;&gt;verkorteopenbareruimtenaam&lt;/span&gt;, a Scrabble-winner, yes!) to &lt;a href=&#34;https://zakelijk.kadaster.nl/bag&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;BAG&lt;/a&gt;
 (Dutch Adresses and Buildings Dataset) Postgres Dump and Address CSV.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;open-source-contributions&#34;&gt;Open Source Contributions&lt;/h3&gt;
&lt;p&gt;Continuous work as a contributor on several Open Source Projects. Apart from some GitLab Projects, you can find/follow me best on &lt;a href=&#34;https://github.com/justb4/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GitHub&lt;/a&gt;
.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://github.com/justb4?tab=overview&amp;amp;from=2019-01-01&amp;amp;to=2019-12-31&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2020/01/gh-contribs-2019-justb4.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;!--
&lt;img loading=&#34;lazy&#34; class=&#34;size-full wp-image-901&#34; src=&#34;uploads/2020/01/gh-contribs-2019-justb4.png&#34; alt=&#34;GitHub Contribitions 2019&#34; width=&#34;784&#34; height=&#34;202&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2020/01/gh-contribs-2019-justb4.png 784w, https://justobjects.nl/wp-content/uploads/2020/01/gh-contribs-2019-justb4-300x77.png 300w, https://justobjects.nl/wp-content/uploads/2020/01/gh-contribs-2019-justb4-768x198.png 768w, https://justobjects.nl/wp-content/uploads/2020/01/gh-contribs-2019-justb4-150x39.png 150w&#34; sizes=&#34;(max-width: 784px) 100vw, 784px&#34; /&gt;
--&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.stetl.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Stetl&lt;/a&gt;
 – Geospatial ETL in Python, maintaining since 2011. Highlight: Py2 to Py3 migration, many thanks:  &lt;a href=&#34;https://github.com/borrob&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Rob van Loon&lt;/a&gt;
.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://geohealthcheck.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoHealthCheck&lt;/a&gt;
 – Service Status and QoS Checker for OGC Web Services – &lt;a href=&#34;https://github.com/geopython/GeoHealthCheck/pulls?q=is%3Apr&amp;#43;is%3Aclosed&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;39 PRs&lt;/a&gt;
 went in! Highlight: Py2 to Py3 migration, again many thanks:  &lt;a href=&#34;https://github.com/borrob&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Rob van Loon&lt;/a&gt;
. Even added ESRI Feature Server plugin!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pygeoapi.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;pygeoapi&lt;/a&gt;
 – a Python server implementation of the &lt;a href=&#34;https://www.opengeospatial.org/blog/2996&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OGC API suite of standards&lt;/a&gt;
 – joined this great project in 2019. Several contributions: a.o. the &lt;a href=&#34;https://github.com/geopython/pygeoapi/blob/master/pygeoapi/provider/ogr.py&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GDAL/OGR backend Provider&lt;/a&gt;
.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://demo.pygeoapi.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;pygeoapi demo server&lt;/a&gt;
 – provided the (auto-)deployment stack for the pygeoapi demo server (&lt;a href=&#34;https://github.com/geopython/demo.pygeoapi.io&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;code at GitHub&lt;/a&gt;
).&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nlextract.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;NLExtract&lt;/a&gt;
 – ongoing development – data downloads attract quite some attention.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/meggsimum/wegue&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Wegue&lt;/a&gt;
 – geo-webclient framework based on &lt;a href=&#34;https://vuejs.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Vue.js&lt;/a&gt;
 with OpenLayers started by &lt;a href=&#34;https://github.com/chrismayer&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Christian Mayer&lt;/a&gt;
. Joined this great project in 2019 with some small patches, adding &lt;a href=&#34;https://github.com/meggsimum/wegue/blob/master/Dockerfile&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Dockerfile&lt;/a&gt;
, &lt;a href=&#34;https://github.com/meggsimum/wegue/pull/82&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;projection-support&lt;/a&gt;
 and still working on &lt;a href=&#34;https://github.com/meggsimum/wegue/pull/95&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoCoder PR&lt;/a&gt;
.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://heron-mc.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Heron MC&lt;/a&gt;
 – Web Mapping Client based on &lt;a href=&#34;https://www.geoext.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoExt&lt;/a&gt;
 and OpenLayers. Yes, old tech but still in wide use. For one thing the &lt;a href=&#34;https://kadviewer.map5.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;KadViewer&lt;/a&gt;
 within map5.nl attracts many customers. In time hope to migrate to &lt;a href=&#34;https://github.com/meggsimum/wegue&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Wegue&lt;/a&gt;
 (see above).&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/stademo&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SensorThings API demo server&lt;/a&gt;
 – Geonovum organized a &lt;a href=&#34;https://www.geonovum.nl/over-geonovum/agenda/hackathon-sensorthings-api&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SensorThings API Hackathon&lt;/a&gt;
 in oct 2019. See &lt;a href=&#34;https://github.com/Geonovum/SensorthingsAPI&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;results here&lt;/a&gt;
. Used the &lt;a href=&#34;https://www.gostserver.xyz/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Geodan GOST&lt;/a&gt;
 STA server. Also added a &lt;a href=&#34;https://github.com/Geonovum/SensorthingsAPI/blob/master/sta-data-upload/postman-mqtt/README.md&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;workflow/pipeline&lt;/a&gt;
 for adding data for the &lt;a href=&#34;https://www.sensemakers.sda-projects.nl/projects/mijnomgeving/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Amsterdam Sensemakers Water “mijnomgeving”&lt;/a&gt;
 measurements. This used a MQTT-NodeRed-STA mapping.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://geopython.github.io/OWSLib/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OWSLib&lt;/a&gt;
 – various &lt;a href=&#34;https://github.com/geopython/OWSLib/commits?author=justb4&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;small contributions&lt;/a&gt;
.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;more-contributions-8211-handy-docker-images&#34;&gt;More Contributions – Handy Docker Images&lt;/h3&gt;
&lt;p&gt;To support many of the Cloud services and Open Source projects, I developed several handy Docker Images, also available from &lt;a href=&#34;https://hub.docker.com/u/justb4&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;my DockerHub&lt;/a&gt;
.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/justb4/docker-awstats&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-awstats&lt;/a&gt;
 – AWStats in Docker, oldie, but very effective webstats. Deploy multiple instances in single Docker container. Highly configurable, e.g. also for &lt;a href=&#34;https://docs.traefik.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Traefik&lt;/a&gt;
 access logs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/justb4/docker-jmeter&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-jmeter&lt;/a&gt;
 – &lt;a href=&#34;https://jmeter.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Apache JMeter&lt;/a&gt;
 wrapped in Docker.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://hub.docker.com/u/justb4&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2020/01/justb4-docker-images.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;!--
&lt;a href=&#34;https://hub.docker.com/u/justb4&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter wp-image-906 size-full&#34; title=&#34;https://hub.docker.com/u/justb4&#34; src=&#34;uploads/2020/01/justb4-docker-images.png&#34; alt=&#34;&#34; width=&#34;648&#34; height=&#34;805&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2020/01/justb4-docker-images.png 648w, https://justobjects.nl/wp-content/uploads/2020/01/justb4-docker-images-241x300.png 241w, https://justobjects.nl/wp-content/uploads/2020/01/justb4-docker-images-121x150.png 121w&#34; sizes=&#34;(max-width: 648px) 100vw, 648px&#34; /&gt;&lt;/a&gt;
--&gt;
&lt;p&gt;Not too many Docker Image downloads, but look at &lt;a href=&#34;https://github.com/justb4/docker-jmeter&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-jmeter,&lt;/a&gt;
 over 1 million! Glad to give to &lt;a href=&#34;https://en.wikipedia.org/wiki/Commons&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;The Commons&lt;/a&gt;
.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-mapfish-print&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-mapfish-print&lt;/a&gt;
 – for MapFish Print &lt;strong&gt;version 3&lt;/strong&gt;. MapFish Print allows printing maps as PDFs.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-mapfish-print2&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-mapfish-print2&lt;/a&gt;
 – for MapFish Print &lt;strong&gt;version 2&lt;/strong&gt; – This version is still used in quite some contexts, at least for &lt;a href=&#34;https://heron-mc.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Heron&lt;/a&gt;
 and &lt;a href=&#34;https://kadviewer.map5.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;KadViewer&lt;/a&gt;
.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-rclone&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-rclone&lt;/a&gt;
 – Docker image to perform a &lt;a href=&#34;http://rclone.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;rclone&lt;/a&gt;
 sync based on a cron schedule, with &lt;a href=&#34;https://healthchecks.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;healthchecks.io&lt;/a&gt;
 monitoring.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/justb4/docker-pgbackup&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;docker-pgbackup&lt;/a&gt;
 – automated/scheduled PostgreSQL/PostGIS backups for all PostgreSQL-based Docker Containers in its Docker-network. I think it is nifty: just run and forget: your Postgres backups are taken care of. Inspired by: &lt;a href=&#34;https://github.com/kartoza/docker-pg-backup&#34;&gt;https://github.com/kartoza/docker-pg-backup&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;osgeonl&#34;&gt;OSGeo.nl&lt;/h3&gt;
&lt;p&gt;Now as chair of the board, still involved in the OSGeo Dutch Local Chapter, &lt;a href=&#34;https://osgeo.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSGeo.nl&lt;/a&gt;
 since its establishment in 2011. Thanks to our wonderful volunteers, we were able to organize several events.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jan 13 – organizer – joint &lt;a href=&#34;https://www.meetup.com/OSGeoNL/events/256712195/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSGeo.nl and OpenStreetMap NL new-years party&lt;/a&gt;
 at Cafe Dudok in Hilversum.&lt;/li&gt;
&lt;li&gt;April – Docker (for geospatial) Workshop by &lt;a href=&#34;https://www.merkator.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Merkator&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;June 20 – &lt;a href=&#34;https://foss4g.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FOSS4GNL&lt;/a&gt;
 – our yearly conference&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;conferences-8211-attended&#34;&gt;Conferences – Attended&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Jan 31-Feb 1 –  &lt;a href=&#34;https://www.thethingsnetwork.org/conference/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;TheThingsNetwork Conference&lt;/a&gt;
. About &lt;a href=&#34;https://en.wikipedia.org/wiki/LoRa&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Lora(WAN)&lt;/a&gt;
.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Feb 21 – GeoDocker Workshop Merkator&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Feb 14-15 – &lt;a href=&#34;https://vuejs.amsterdam/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Vue.js Amsterdam&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;June 20 – &lt;a href=&#34;https://foss4g.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FOSS4G-NL&lt;/a&gt;
.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;June 24-25 – &lt;a href=&#34;http://2019.geopython.net/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoPython 2019&lt;/a&gt;
 – Basel.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;August 25-31 – &lt;a href=&#34;https://2019.foss4g.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FOSS4G – Bukarest&lt;/a&gt;
.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sept 20 – Sensemakers Amsterdam&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Okt 2 – Geo Gebruikers festival by Geonovum – Amersfoort&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;hackathons--code-sprints&#34;&gt;Hackathons &amp;amp; Code Sprints&lt;/h3&gt;
&lt;p&gt;I always love to go to hackathons. From software to hardware-hacking with the &lt;a href=&#34;https://www.sensemakersams.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Sensemakers Amsterdam&lt;/a&gt;
.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;April 5 – OGG Hackathon by &lt;a href=&#34;https://www.opengeogroep.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenGeoGroep&lt;/a&gt;
. Random hacking day where I got involved in &lt;a href=&#34;https://pygeoapi.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;pygeoapi&lt;/a&gt;
 the first time.&lt;/li&gt;
&lt;li&gt;May 14-17 – OSGeo Codesprint (attended remotely).&lt;/li&gt;
&lt;li&gt;June 3-6 – OGC API Features – “WFS3 Werkweek” by Geonovum – &lt;a href=&#34;https://geonovum.github.io/wfs3-experiments/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;report (HTML)&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;SensorThings API Hackathon by Geonovum – &lt;a href=&#34;https://github.com/Geonovum/SensorthingsAPI/blob/master/wrapup/hackathon_results_justvandenbroecke.pdf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;my contributions (PDF slides)&lt;/a&gt;
 – &lt;a href=&#34;https://github.com/Geonovum/SensorthingsAPI/tree/master/sta-data-upload/postman-mqtt&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;How to upload data to STA&lt;/a&gt;
 – &lt;a href=&#34;https://sta.map5.nl/gost/v1.0&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;STA Demo Server&lt;/a&gt;
. And &lt;a href=&#34;https://github.com/justb4/stademo&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;its setup in GitHub&lt;/a&gt;
.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;talks--workshops-8211-provided&#34;&gt;Talks &amp;amp; Workshops – Provided&lt;/h3&gt;
&lt;p&gt;On several of the above events I gave some presence with presentations and workshops. Most of my slides can be found on &lt;a href=&#34;https://www.slideshare.net/justb4/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;slideshare.net/justb4&lt;/a&gt;
 Below some links.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;June 20 – &lt;a href=&#34;https://foss4g.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FOSS4G-NL&lt;/a&gt;
. Presented &lt;a href=&#34;https://pygeoapi.io/presentations/default/#/frontpage&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;pygeoapi&lt;/a&gt;
.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;June 25 – GeoPython Basel – presented &lt;a href=&#34;https://submit.geopython.net/geopython2019/talk/FYMUDV/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoHealthCheck&lt;/a&gt;
 .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;August 25-31 – &lt;a href=&#34;https://2019.foss4g.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FOSS4G – Bukarest&lt;/a&gt;
. Provided GeoPython workshop. All together with the great GeoPython team as in picture above.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2020/01/geopython-ws-foss4g19.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!--
&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter size-medium wp-image-923&#34; src=&#34;uploads/2020/01/geopython-ws-foss4g19-143x300.png&#34; alt=&#34;&#34; width=&#34;143&#34; height=&#34;300&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2020/01/geopython-ws-foss4g19-143x300.png 143w, https://justobjects.nl/wp-content/uploads/2020/01/geopython-ws-foss4g19-72x150.png 72w, https://justobjects.nl/wp-content/uploads/2020/01/geopython-ws-foss4g19.png 402w&#34; sizes=&#34;(max-width: 143px) 100vw, 143px&#34; /&gt;
--&gt;
&lt;ul&gt;
&lt;li&gt;August 25-31 – &lt;a href=&#34;https://2019.foss4g.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FOSS4G – Bukarest&lt;/a&gt;
. Presented &lt;a href=&#34;https://submit.geopython.net/geopython2019/talk/FYMUDV/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoHealthCheck&lt;/a&gt;
 . With &lt;a href=&#34;https://www.linkedin.com/in/tomkralidis/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Tom Kralidis&lt;/a&gt;
.&lt;/li&gt;
&lt;li&gt;Sept 20 – &lt;a href=&#34;https://www.sensemakersams.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Sensemakers Amsterdam&lt;/a&gt;
 – on Open Sensor Networks – &lt;a href=&#34;https://www.slideshare.net/justb4/open-sensor-networks-173718779&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;slides.&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Okt 3 – at Stantec – GeoHealthCheck/GeoQoS workshop – &lt;a href=&#34;https://geohealthcheck.org/presentation/index.html#/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;slides&lt;/a&gt;
.&lt;/li&gt;
&lt;li&gt;Nov 1 – Odijk – Dutch Rentmeesters (steward: a person who manages an estate or farm for another person) – presented &lt;a href=&#34;https://map5.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;map5.nl&lt;/a&gt;
.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;logo-design&#34;&gt;Logo Design&lt;/h3&gt;
&lt;p&gt;I don’t consider myself as a designer, but with a little help from online logo-creation platforms and feedback from my co-workers, I created the following in 2019:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For &lt;a href=&#34;https://geoqos.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoQoS.com&lt;/a&gt;
 – hosted GeoHealthCheck in the Cloud.&lt;br&gt;
&lt;img src=&#34;https://justobjects.nl/uploads/2020/01/geoqos-logo.png&#34; alt=&#34; &#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!--
&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter  wp-image-929&#34; src=&#34;uploads/2020/01/geoqos-logo.png&#34; alt=&#34;&#34; width=&#34;433&#34; height=&#34;93&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2020/01/geoqos-logo.png 765w, https://justobjects.nl/wp-content/uploads/2020/01/geoqos-logo-300x64.png 300w, https://justobjects.nl/wp-content/uploads/2020/01/geoqos-logo-150x32.png 150w&#34; sizes=&#34;(max-width: 433px) 100vw, 433px&#34; /&gt;
--&gt;
&lt;ul&gt;
&lt;li&gt;For the &lt;a href=&#34;https://pygeoapi.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;pygeoapi&lt;/a&gt;
 (OGC API Features, “WFS3”,  in Python) Project&lt;br&gt;
&lt;img src=&#34;https://justobjects.nl/uploads/2020/01/final-s.png&#34; alt=&#34; &#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!--
&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter size-full wp-image-930&#34; src=&#34;uploads/2020/01/final-s.png&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;82&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2020/01/final-s.png 300w, https://justobjects.nl/wp-content/uploads/2020/01/final-s-150x41.png 150w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;
--&gt;
&lt;ul&gt;
&lt;li&gt;For the &lt;a href=&#34;https://geohealthcheck.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoHealthCheck&lt;/a&gt;
 project&lt;br&gt;
&lt;img src=&#34;https://justobjects.nl/uploads/2020/01/medium.png&#34; alt=&#34; &#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!--
&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter  wp-image-931&#34; src=&#34;uploads/2020/01/medium.png&#34; alt=&#34;&#34; width=&#34;419&#34; height=&#34;73&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2020/01/medium.png 918w, https://justobjects.nl/wp-content/uploads/2020/01/medium-300x52.png 300w, https://justobjects.nl/wp-content/uploads/2020/01/medium-768x134.png 768w, https://justobjects.nl/wp-content/uploads/2020/01/medium-150x26.png 150w, https://justobjects.nl/wp-content/uploads/2020/01/medium-900x160.png 900w&#34; sizes=&#34;(max-width: 419px) 100vw, 419px&#34; /&gt;
--&gt;
&lt;h3 id=&#34;resolutions-2020&#34;&gt;Resolutions 2020&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;More effort into &lt;a href=&#34;https://github.com/meggsimum/wegue&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Wegue&lt;/a&gt;
 project&lt;/li&gt;
&lt;li&gt;Further expanding hosted Geospatial Cloud Services&lt;/li&gt;
&lt;li&gt;Improve on and provide the GeoPython Workshop&lt;/li&gt;
&lt;li&gt;Whatever comes around.&lt;/li&gt;
&lt;/ul&gt;

        
      </description>
    </item>
    
    <item>
      <title>Second Time Around – WFS v3 and pygeoapi</title>
      <link>https://justobjects.nl/2nd-time-around-wfs-v3-pygeoapi/</link>
      <pubDate>Fri, 31 May 2019 23:33:35 +0000</pubDate>
      
      <guid>https://justobjects.nl/2nd-time-around-wfs-v3-pygeoapi/</guid>
      <description>
        
          &lt;p&gt;TLDR;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tired of the OGC WFS/GML/INSPIRE complexity mess&lt;/li&gt;
&lt;li&gt;new spirit from &lt;a href=&#34;https://github.com/opengeospatial/WFS_FES&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;WFS v3 standard&lt;/a&gt;
 and OGC REST API movement&lt;/li&gt;
&lt;li&gt;title of this blog refers (YouTube): &lt;a href=&#34;https://www.youtube.com/watch?v=xz4YQZ01Q_A&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Shalamar, The Second Time Around&lt;/a&gt;
.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pygeoapi.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;pygeoapi&lt;/a&gt;
 implements OGC REST APIs in Python&lt;/li&gt;
&lt;li&gt;I joined &lt;a href=&#34;https://pygeoapi.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;pygeoapi&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pygeoapi.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;pygeoapi&lt;/a&gt;
 can unlock/proxy existing WFS v1,v2 and any OGR Source!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;About 10 years ago, working on my first serious geospatial contract at &lt;a href=&#34;https://www.kadaster.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Dutch Kadaster&lt;/a&gt;
, I was asked to investigate an emerging &lt;a href=&#34;http://www.opengeospatial.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OGC&lt;/a&gt;
 standard called “WFS”, &lt;a href=&#34;https://en.wikipedia.org/wiki/Web_Feature_Service&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Web Feature Service&lt;/a&gt;
. Providing a matrix of client-server interoperability was one of the expected outcomes. That is: which WFS-clients will happily fetch data from WFS server-products. I don’t have the actual outcome anymore, but I can recall: it was a very empty table: there were a few WFS server-implementations at the time: GeoServer, MapServer and deegree and some WFS clients, both Open Source and proprietary. In my recollection, only OpenLayers would interwork with the above three WFS servers. The rest had various interworking issues: around &lt;a href=&#34;https://epsg.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;EPSG&lt;/a&gt;
-encoding (three possible encodings!) and other vague GML issues. In short, it was a mess: remember, all we wanted to exchange were flat, table-like &lt;a href=&#34;https://www.opengeospatial.org/standards/sfa&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Simple Features:&lt;/a&gt;
 records with attributes and a single geometry (Point, Line, Polygon).&lt;/p&gt;
&lt;p&gt;Later on, things became even worse: multiple WFS and GML versions. And not to mention &lt;a href=&#34;https://en.wikipedia.org/wiki/Geography_Markup_Language&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GML Application Schemas&lt;/a&gt;
 like for &lt;a href=&#34;http://inspire.ec.europa.eu/applicationschema&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;INSPIRE&lt;/a&gt;
. Plenty of work for WFS/GML experts, which I was considered one, but I felt cynical at some point. From my background as a software engineer at &lt;a href=&#34;https://en.wikipedia.org/wiki/Bell_Labs&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;AT&amp;amp;amp;T/Lucent/Bell Labs&lt;/a&gt;
, where I developed embedded software for the public &lt;a href=&#34;https://en.wikipedia.org/wiki/5ESS_Switching_System&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;5ESS telephone exchange&lt;/a&gt;
, &lt;strong&gt;&lt;em&gt;over-engineering was considered bad practice&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Also from the perspective of the emerging &lt;a href=&#34;https://agilemanifesto.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Agile movement&lt;/a&gt;
: &lt;strong&gt;&lt;em&gt;“make the simplest thing that could possibly work”&lt;/em&gt;&lt;/strong&gt;, this WFS/GML ‘beast’ seemed untamable, driven by theoreticians who modeled the geospatial world from behind UML tools like &lt;a href=&#34;https://sparxsystems.com/products/ea/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Enterprise Architect&lt;/a&gt;
. I attended numerous meetings between Dutch government organizations that had WFS/GML interworking problems. At some point I gave up: the intellectual challenges (and contracts!) were alluring, but the (geospatial) world wouldn’t progress like this. Though I used WFS and GML in many of my apps, I had a love-hate relationship with them, as a rule-of-thumb only the lowest denominator, WFS v1 and GLM2 had the most chances to interwork.&lt;/p&gt;
&lt;p&gt;Until…back to the title of this blog. I grew up in the 70-s/80-s, so want to introduce this song. I hope the YouTube video below is embedded ok. Otherwise check out &lt;a href=&#34;https://www.youtube.com/watch?v=xz4YQZ01Q_A&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;this link from Shalamar, The Second Time Around&lt;/a&gt;
.&lt;/p&gt;

&lt;div class=&#34;video&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/xz4YQZ01Q_A?controls=1&amp;rel=0&#34; loading=&#34;lazy&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Fast forward to 2019: we live in an API-world: REST, &lt;a href=&#34;https://swagger.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Swagger&lt;/a&gt;
, OpenApi. OGC became wiser: both in process and technology. Folks from the OSGeo Community, I must mention &lt;a href=&#34;https://medium.com/@cholmes&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Chris Holmes&lt;/a&gt;
 here, advocated/pushed for a more collaborative/development-like standardization process, e.g. using GitHub over Word documents. A landmark OGC/W3C study called &lt;a href=&#34;https://www.w3.org/TR/sdw-bp/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;“Spatial Data on the Web Best Practices”&lt;/a&gt;
 recommended a more web-friendly approach.&lt;/p&gt;
&lt;p&gt;Fast-fast forward, the above issues resulted in a brand new &lt;a href=&#34;https://github.com/opengeospatial/WFS_FES&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;WFS version 3 standard&lt;/a&gt;
 under development: using both GitHub and the latest REST (Open)API technologies. Forget about WFS v1 and v2, GML v.whatever, and OWS in general with their &lt;strong&gt;&lt;em&gt;tired GetCapabilities&lt;/em&gt;&lt;/strong&gt;, this is a new road taken. Kudos to &lt;a rel=&#34;noreferrer noopener&#34; aria-label=&#34; (opens in a new tab)&#34; href=&#34;https://medium.com/@cholmes&#34; target=&#34;_blank&#34;&gt;Chris Holmes&lt;/a&gt;, he words this better than me in this &lt;a href=&#34;https://medium.com/@cholmes/wfs-3-0-get-excited-yes-8e904fdbcc0&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Medium Article on WFS3&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;So yes, what about this &lt;strong&gt;&lt;em&gt;Second Time Around?&lt;/em&gt;&lt;/strong&gt; Well I got attracted to WFS again (“in love” is not really appropriate for technology IMHO), for two reasons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;the &lt;a href=&#34;https://github.com/opengeospatial/WFS_FES&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;WFS spec&lt;/a&gt;
 and the folks/energy around it&lt;/li&gt;
&lt;li&gt;Open Source implementation of this standard in Python: &lt;a href=&#34;https://pygeoapi.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;pygeoapi&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Python IMHO makes much much sense within the Open Source geospatial domain. For similar reasons as described above, like over-engineering (and Oracle!), I abandoned Java about 8 years ago.&lt;/p&gt;
&lt;p&gt;So I joined the &lt;a href=&#34;https://pygeoapi.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;pygeoapi&lt;/a&gt;
 project. Not out of any commercial interest, but mainly out of an developer’s itch: this is useful, let’s see how this works out, a now small, but great community, several from my country, to work with.&lt;/p&gt;
&lt;p&gt;About &lt;a href=&#34;https://pygeoapi.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;pygeoapi&lt;/a&gt;
: currently the project is focused on WFS v3, but in general we attempt to implement multiple OGC REST APIs. Also, the project provides a plugin architecture: via &lt;strong&gt;&lt;em&gt;Providers&lt;/em&gt;&lt;/strong&gt;, where data can be fetched from any backend: remote services or local files. Check out our &lt;a href=&#34;https://demo.pygeoapi.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;demo server&lt;/a&gt;
 which is updated constantly via the &lt;a href=&#34;https://github.com/geopython/pygeoapi&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;pygeoapi GitHub repo&lt;/a&gt;
 and &lt;a href=&#34;https://cloud.docker.com/u/geopython/repository/docker/geopython/pygeoapi/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;DockerHub&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2019/05/image.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;!--
&lt;figure class=&#34;wp-block-image&#34;&gt;
&lt;img loading=&#34;lazy&#34; width=&#34;1024&#34; height=&#34;578&#34; src=&#34;https://justobjects.nl/wp-content/uploads/2019/05/image-1024x578.png&#34; alt=&#34;&#34; class=&#34;wp-image-886&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2019/05/image-1024x578.png 1024w, https://justobjects.nl/wp-content/uploads/2019/05/image-300x169.png 300w, https://justobjects.nl/wp-content/uploads/2019/05/image-768x433.png 768w, https://justobjects.nl/wp-content/uploads/2019/05/image-150x85.png 150w, https://justobjects.nl/wp-content/uploads/2019/05/image.png 1200w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; /&gt; &lt;/figure&gt;
--&gt;
&lt;p&gt;Diving a bit deeper, one of my first contributions to this project was to add an &lt;a href=&#34;https://github.com/geopython/pygeoapi/blob/master/pygeoapi/provider/ogr.py&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OGRProvider&lt;/a&gt;
 that would fetch from any &lt;a href=&#34;https://gdal.org/drivers/vector/index.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GDAL/OGR Vector source&lt;/a&gt;
, in particular a backend WFS. Partly from a vision: &lt;strong&gt;&lt;em&gt;“Let’s free all those tired WFS-es out there”&lt;/em&gt;&lt;/strong&gt;, but also practically: the Python GDAL/OGR bindings are so powerful, performant and reusable, saving lots of development time over developing specific Providers for GeoJSON, GeoPackage, SpatialLite, PostGIS, and even ESRI Shapefiles and FeatureServers. In theory, any OGR (Vector) Source can now be exposed via WFS v3 in &lt;a href=&#34;https://pygeoapi.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;pygeoapi&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;There’s lots of movement around WFS v3 and OGC REST APIs in general, where both standards makers and implementors interact. Like the &lt;a href=&#34;https://www.opengeospatial.org/OGCAPI_Hack2019&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OGC API Hackathon&lt;/a&gt;
 in June 2019, London (sold out now!). If you ever abandoned WFS v1/v2 it is time to reconcile now!&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Emit #6 – AirSensEUR Calibration</title>
      <link>https://justobjects.nl/emit-6-airsenseur-calibration/</link>
      <pubDate>Tue, 19 Feb 2019 16:23:52 +0000</pubDate>
      
      <guid>https://justobjects.nl/emit-6-airsenseur-calibration/</guid>
      <description>
        
          &lt;p&gt;This is Emit #6, in a &lt;a href=&#34;https://justobjects.nl/categories/smartemission/&#34;&gt;series of blog-posts around the Smart Emission Platform&lt;/a&gt;
, an Open Source software component framework that facilitates the acquisition, processing and (OGC web-API) unlocking of spatiotemporal sensor-data, mainly for Air Quality and other environmental sensor-data like noise.&lt;/p&gt;
&lt;p&gt;In &lt;a href=&#34;https://justobjects.nl/emit-5-assembling-and-deploying-5-airsenseurs/&#34;&gt;Emit #5 – Assembling and Deploying 5 AirSensEURs…&lt;/a&gt;
, I described how , with the great help of Jan Vonk from RIVM, we placed five &lt;a href=&#34;https://airsenseur.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;AirSensEUR&lt;/a&gt;
 (ASE) air quality stations at the RIVM reference site near the A2 Highway at Breukelen. For about 2.5 months raw data was gathered there while the RIVM station was gathering its data to be used as reference for calibration.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2019/02/airsenseur-deploy-combined-s.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;!--
&lt;img loading=&#34;lazy&#34; class=&#34;aligncenter  wp-image-864&#34; src=&#34;uploads/2019/02/airsenseur-deploy-combined-s-1024x537.jpg&#34; alt=&#34;&#34; width=&#34;555&#34; height=&#34;291&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2019/02/airsenseur-deploy-combined-s.jpg 1024w, https://justobjects.nl/wp-content/uploads/2019/02/airsenseur-deploy-combined-s-300x157.jpg 300w, https://justobjects.nl/wp-content/uploads/2019/02/airsenseur-deploy-combined-s-768x403.jpg 768w, https://justobjects.nl/wp-content/uploads/2019/02/airsenseur-deploy-combined-s-150x79.jpg 150w&#34; sizes=&#34;(max-width: 555px) 100vw, 555px&#34; /&gt;
--&gt;
&lt;p&gt;Now “calibration” is a huge and increasingly important topic when using inexpensive sensors for measuring Air Quality. Within the Smart Emission project we have been applying &lt;a href=&#34;https://en.wikipedia.org/wiki/Artificial_neural_network&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Artificial Neural Networks&lt;/a&gt;
 to calibrate the gas-sensors within the Josene stations. See also the &lt;a href=&#34;https://smartplatform.readthedocs.io/en/latest/calibration.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SE documentation&lt;/a&gt;
. These sensors were so called &lt;a href=&#34;https://sgx.cdistore.com/products/sgx-sensortech/metaloxide-gas-sensor&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;metaloxide (MICS) sensors from SGX Sensortech Limited&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;The AirSensEURs contain &lt;a href=&#34;http://www.alphasense.com/index.php/safety/products/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;electrochemical sensors from AlphaSense&lt;/a&gt;
. Several sources like &lt;a href=&#34;https://www.samenmetenaanluchtkwaliteit.nl/sensoren-voor-no2&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;RIVM&lt;/a&gt;
, state that these sensors are more accurate (than metaloxide sensors), but at the same time need per-sensor calibration.&lt;/p&gt;
&lt;p&gt;Within the ASE boxes the following four gas-sensors were applied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NO2 (Nitrogen Dioxide): the &lt;a href=&#34;http://www.alphasense.com/index.php/products/nitrogen-dioxide/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;NO2-B43F&lt;/a&gt;
, see &lt;a href=&#34;http://www.alphasense.com/WEB1213/wp-content/uploads/2018/12/NO2B43F.pdf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;datasheet&lt;/a&gt;
.&lt;/li&gt;
&lt;li&gt;NO (Nitric Oxide): the &lt;a href=&#34;http://www.alphasense.com/index.php/products/nitric-oxide-safety/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;NO-B4&lt;/a&gt;
, see &lt;a href=&#34;http://www.alphasense.com/WEB1213/wp-content/uploads/2015/03/NO-B4.pdf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;datasheet&lt;/a&gt;
.&lt;/li&gt;
&lt;li&gt;O3 (Ozone): the &lt;a href=&#34;http://www.alphasense.com/index.php/products/ozone-2/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OX_A431&lt;/a&gt;
, see &lt;a href=&#34;http://www.alphasense.com/WEB1213/wp-content/uploads/2018/12/OXA431.pdf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;datasheet&lt;/a&gt;
.&lt;/li&gt;
&lt;li&gt;CO (Carbon Monoxide): the &lt;a href=&#34;http://www.alphasense.com/index.php/products/carbon-monoxide-safety/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;CO-A4&lt;/a&gt;
, see &lt;a href=&#34;http://www.alphasense.com/WEB1213/wp-content/uploads/2017/01/COA4.pdf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;datasheet&lt;/a&gt;
.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/08/asenl-unbox-assemble-deploy-12.jpg&#34; alt=&#34;The Gang of Four Sensors&#34;&gt;&lt;/p&gt;
&lt;!--
&lt;div id=&#34;attachment_790&#34; style=&#34;width: 358px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img aria-describedby=&#34;caption-attachment-790&#34; loading=&#34;lazy&#34; class=&#34; wp-image-790&#34; src=&#34;uploads/2018/08/asenl-unbox-assemble-deploy-12-300x243.jpg&#34; alt=&#34;&#34; width=&#34;348&#34; height=&#34;282&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-12-300x243.jpg 300w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-12-768x623.jpg 768w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-12.jpg 1024w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-12-150x122.jpg 150w&#34; sizes=&#34;(max-width: 348px) 100vw, 348px&#34; /&gt;
  &lt;p id=&#34;caption-attachment-790&#34; class=&#34;wp-caption-text&#34;&gt;
    The Gang of Four Sensors
  &lt;/p&gt;
&lt;/div&gt;
--&gt;
&lt;p&gt;The calibration to be applied is based on &lt;a href=&#34;https://en.wikipedia.org/wiki/Regression_analysis&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Regression Analysis&lt;/a&gt;
. This and other calibration-methods have been investigated and evaluated for many types/brands of sensors by the EC-JRC team. Read all in this &lt;a href=&#34;https://www.sciencedirect.com/science/article/pii/S092540051500355X&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;landmark article&lt;/a&gt;
 and other references there.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2019/02/field-calibration-article.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;!--
&lt;img loading=&#34;lazy&#34; class=&#34;wp-image-862 aligncenter&#34; src=&#34;uploads/2019/02/field-calibration-article.png&#34; alt=&#34;&#34; width=&#34;404&#34; height=&#34;251&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2019/02/field-calibration-article.png 665w, https://justobjects.nl/wp-content/uploads/2019/02/field-calibration-article-300x186.png 300w, https://justobjects.nl/wp-content/uploads/2019/02/field-calibration-article-150x93.png 150w&#34; sizes=&#34;(max-width: 404px) 100vw, 404px&#34; /&gt;
--&gt;
&lt;p&gt;The complete timeline was as follows. Each phase will be expanded below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Aug 1, 2018 – Okt 9, 2018&lt;br&gt;
Raw ASE and RIVM reference data collection (Breukelen site)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Okt 10, 2018 – Nov 2, 2018&lt;br&gt;
All ASEs deployed at their target locations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nov/dec 2018&lt;br&gt;
Calibration performed by Michel Gerboles at the EC-JRC lab&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jan 2019&lt;br&gt;
Calibration formulas implemented in Smart Emission (SE) platform&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Feb 2019&lt;br&gt;
All ASE calibrated gas-data continuously available via SE viewers/APIs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Feb 2019&lt;br&gt;
Analysis of the calibration (&lt;a href=&#34;https://github.com/smartemission/docker-se-stetl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SE Python Stetl&lt;/a&gt;
) implementation results&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;ad 1)&lt;/strong&gt; The five ASE Boxes were mounted on a horizontal pole and connected to WIFI and current. As end-result all boxes were publishing their raw data to the SE InfluxDB Data Collector and were visible in the &lt;a href=&#34;https://data.smartemission.nl/grafana-dc/d/HVSBmbHmz/airsenseur-netherlands-deploy&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SE Grafana raw data viewer&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/08/asenl-unbox-assemble-deploy-1.jpg&#34; alt=&#34;Configured for InfluxDB Data Push visualized via Grafana&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ad 2)&lt;/strong&gt; The picture below shows ASE_NL_01 (left above) through _05 clockwise at their deployment sites. ASE_03 and 04 (right below) were at a single location.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2019/02/ase-nl-1-5-deployed.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;ASE_NL 01 was deployed at an RIVM site in Nijmegen. This allowed us to verify its calibration with different reference data as with which it was calibrated! See below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2019/02/deployment-map-s.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ad 3)&lt;/strong&gt; The calibration was performed by EC-JRC (M. Gerboles) using R and ShinyR webapp. All sources can be found in this &lt;a href=&#34;https://github.com/ec-jrc/airsenseur-calibration&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;EC-JRC GitHub repo&lt;/a&gt;
. This process is quite intricate and a bit hard to explain in the context of a blog-post paragraph. I’ll try a summary:&lt;/p&gt;
&lt;p&gt;Sensor values are digital readings (0..65535). This is effected by the electrical circuitry within each ASE, for optimal gain. To calculate back to mV and nA a per-sensor (brand+type) calculation is required first before applying any regression formula. A bit is explained in the image below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2019/02/readings-vref.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;The second outcome is a per-individual-sensor regression formula. This is for most sensors a linear equation. For O3 (OX_A431) the formula is polynomial, as O3 readings are influenced by NO2 concentration. Below is an example as later implemented in Python using &lt;a href=&#34;https://github.com/smartemission/docker-se-stetl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SE Stetl ETL&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2019/02/calibration-formulae.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;The main three outcomes of the calibration are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the parameters for digital to nA calculation (per sensor brand+type)&lt;/li&gt;
&lt;li&gt;the linear (polynomial) equations for nA to concentration (ug/m3)&lt;/li&gt;
&lt;li&gt;the per-individual-sensor parameters (a0-a3)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2019/02/scatterplots-asenl03.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;Above some scatterplots made for ASE Box 3 NO2 and O3.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ad 4)&lt;/strong&gt; Knowing all equations and their parameters from step 3 above, I attempted to integrate this in the continuous ETL within the Smart Emission Platform. Up to now the platform supported only a single sensor station type: the Intemo Jose(ne). As the platform is fed by harvesting raw data from a set of remote APIs provided by Data Collectors, it was relatively easy to add sensor(-station)-metadata and extend the Refiner ETL to apply calibration algorithms driven by that metadata.&lt;/p&gt;
&lt;p&gt;So for Josene stations the existing ANN calibration would still be applied, while for ASE stations per-sensor linear equations would be performed. All parameterization was already configurable using the &lt;a href=&#34;https://github.com/smartemission/docker-se-stetl/tree/mast&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Device, DeviceDefs, DeviceFuncs&lt;/a&gt;
 abstractions in the &lt;a href=&#34;https://github.com/smartemission/docker-se-stetl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SE Stetl implementation&lt;/a&gt;
. Recently, to allow stations that already send calibrated values, I introduced the &lt;a href=&#34;https://github.com/smartemission/docker-se-stetl/blob/master/smartem/devices/vanilla.py&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Vanilla Device&lt;/a&gt;
 starting with harvesting &lt;a href=&#34;https://luftdaten.info&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Luftdaten.info&lt;/a&gt;
 stations (more in a later post).&lt;/p&gt;
&lt;p&gt;The formula’s as applied in Python SE Stetl are as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;STEP 1a - Digital to Voltage (V)
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;V = (Ref - RefAD) + (Digital+1) /2^16 x 2 x RefAD
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;STEP 1b - Voltage (V) to Ampere (I) as Ri
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;I = 10^9 V/(Gain x Rload)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;STEP 2 - Ampere (I) to concentration (ug/m3) - Example
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;I=a0+a1*NO2+a2*T
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;==&amp;gt; NO2 = (I - a0 - a2 * T) / a1
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;a0-a2 has specific values for each NO2-B43F sensor.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now that these formulas and their parameters were implemented, near-realtime values could be made visible in all SE apps (viewers) and APIs such as the &lt;a href=&#34;https://data.smartemission.nl/smartapp/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SmartApp&lt;/a&gt;
 and the &lt;a href=&#34;https://data.smartemission.nl/heron/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Heron Viewer&lt;/a&gt;
.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://data.smartemission.nl/smartapp/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2019/02/smartapp-ase01-nijmegen.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;Within the Heron Viewer we can compare for example NO2, not only with Josene measurements, but also with official RIVM values.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2019/02/heron1.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;Also the data is available through all &lt;a href=&#34;https://data.smartemission.nl/data&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SE OGC APIs&lt;/a&gt;
, for example the &lt;a href=&#34;https://en.wikipedia.org/wiki/SensorThings_API&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SensorThings API&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ad 6)&lt;/strong&gt; The moment of truth! How well does the SE-based SE Stetl Python calibration results fit with the original RIVM values? One of the advantages of Data Harvesting (opposed to data push) is that we can switch back in time, i.e. restart harvesting from a given date. Harvesting and continuous calibration was restarted from august 1, 2018, the start of the calibration period at the RIVM station. Using a Grafana panel that displays both RIVM and SE-calculated values we can graphically see how well the data aligns.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2019/02/breukelen-grafana.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;What we can see from the above image, is that visually the data aligns very well, here for NO2. The purple graph is the official RIVM measurement. Only station ASE NL 02 is not completely aligned.&lt;/p&gt;
&lt;p&gt;To also have some numeric proof and a more objective comparison, I dived in scatterplot and numerical analysis in Python. Apart from scatterplots that show calculated (Y) agains RIVM ref values (X) I calculated the &lt;a href=&#34;https://en.wikipedia.org/wiki/Coefficient_of_determination&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;“R-squared”&lt;/a&gt;
 and “slope” for fitting indicator values. This was also my first serious use of Python libs like Scipy, Pandas, Seaborn and Numpy (you’re never too old to become a data-scientist!).&lt;/p&gt;
&lt;p&gt;As all SE calibrated data is also stored in InfluxDB with RIVM refdata harvested from their SOS, it was easy to fetch values for the plots/calculations.&lt;/p&gt;
&lt;p&gt;Objectivity could be effected since station ASE NL 01 was finally deployed (okt 2018) in Nijmegen, also next to an RIVM station. So the calibration calculations from RIVM refdata in Breukelen could be compared to “Nijmegen”. The implementation for making these scatterplots can be found &lt;a href=&#34;https://github.com/smartemission/smartemission/tree/master/etl/calibration&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;here&lt;/a&gt;
. Lets look at some results, mainly for NO2, as I consider this one of the most important AQ indicator gasses.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2019/02/nijm-ruy-no2-ASE_NL01-2018-12-25-2019-01-24.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;I like this image a lot as it shows an almost ideal alignment with an R2 of 0.976 and slope of almost 1. Mind: calibration was thus done at a very different site (about 80 km west) and AQ condition (highway) as the deployment (city street).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2019/02/asenl01-se-pycal-plots.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;Above are plots for the other gasses as well. First row in Breukelen (no ref CO available in RIVM SOS), front row in Nijmegen. Only NO in Nijmegen is a bit problematic.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2019/02/breuk-sw-no2-ASE_NL_All-2018-09-10-2018-10-09.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;To close off: this last image above shows NO2 fit at the Breukelen station for all five ASE boxes. Also quite good.&lt;/p&gt;
&lt;p&gt;What to conclude? First of all AirSensEUR is a major step forward in affordable accurate AQ sensing. We hope to expand the community.&lt;/p&gt;
&lt;p&gt;AlphaSense NO2 electrochemical sensors appear quite accurate, but calibration requires quite some effort, plus calibration formulas apply per individual sensor. Would automatic per-sensor ANN be less time-consuming and still accurate? Something I would like to investigate.&lt;/p&gt;
&lt;p&gt;The Smart Emission project and platform is still going strong, running within a Kubernetes Cloud maintained by Dutch Kadaster.&lt;/p&gt;
&lt;p&gt;Next emit will discuss how I integrated data from the amazing Luftdaten.info project for the municipality of Nijmegen.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Cheers to 2018</title>
      <link>https://justobjects.nl/cheers-to-2018/</link>
      <pubDate>Fri, 11 Jan 2019 02:04:54 +0000</pubDate>
      
      <guid>https://justobjects.nl/cheers-to-2018/</guid>
      <description>
        
          &lt;p&gt;Never too late to look back. Inspired by the concise bullet-point-style of Tom Kralidis’ &lt;a href=&#34;http://www.kralidis.ca/blog/2018/12/28/cheers-to-2018/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Cheers to 2018&lt;/a&gt;
,  my personal highlights of living and working in the Open Source Geospatial and OSGeo(.nl|org)-world in 2018. I’ll post 2019 reso’s later. Not just personal projects, but also events from the &lt;a href=&#34;https://osgeo.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSGeo.nl Local Chapter&lt;/a&gt;
 in which I am involved since its beginnings.&lt;/p&gt;
&lt;h3 id=&#34;january&#34;&gt;January&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;One of my 2018-resolutions was to focus more on SensorWeb/Spatiotemporal inspired by working since 2015 on the &lt;a href=&#34;https://data.smartemission.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Smart Emission project&lt;/a&gt;
. Started a &lt;a href=&#34;https://justobjects.nl/category/smartemission/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;blog-post-series “Emits”&lt;/a&gt;
.&lt;/li&gt;
&lt;li&gt;With &lt;a href=&#34;https://osgeo.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSGeo.nl&lt;/a&gt;
 we always start the year (since 2011) with a joint &lt;a href=&#34;https://osgeo.nl/2018/02/verslag-nieuwjaarsborrel-2018/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSGeo.nl and OpenStreetMap NL new-years party&lt;/a&gt;
 at Cafe Dudok in Hilversum. Many of the 2018-plans discussed there became reality. Not at least the two QGIS-Days and FOSS4G-NL 2018 conference (see below).&lt;/li&gt;
&lt;li&gt;The first Dutch QGIS Day hosted by the &lt;a href=&#34;https://www.un-ihe.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;IHE Delft Institute for Water Education&lt;/a&gt;
. Very well attended (160?) by both regular QGIS-users and IHE-students. Big thanks to &lt;a href=&#34;https://geo-academie.nl/erik/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Erik Meerburg&lt;/a&gt;
 (what would OSGeo.nl be without Erik?) and &lt;a href=&#34;https://www.un-ihe.org/hans-van-der-kwast&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Hans van der Kwast&lt;/a&gt;
 (IHE).&lt;/li&gt;
&lt;li&gt;Started working on a contract for the &lt;a href=&#34;https://ec.europa.eu/jrc/en&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;European Commission Joint Research Center&lt;/a&gt;
 (Ispra, Italy)  to deploy five &lt;a href=&#34;https://airsenseur.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;AirSensEUR&lt;/a&gt;
 air-quality stations within the Netherlands, connecting these to the &lt;a href=&#34;https://data.smartemission.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Smart Emission Platform&lt;/a&gt;
. More in &lt;a href=&#34;https://justobjects.nl/emit-5-assembling-and-deploying-5-airsenseurs/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;this blog-post&lt;/a&gt;
.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;february&#34;&gt;February&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;As first-timer went to &lt;a href=&#34;https://www.thethingsnetwork.org/conference/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;TheThingsNetwork Conference&lt;/a&gt;
. What an amazing event! For some years already into &lt;a href=&#34;https://en.wikipedia.org/wiki/LoRa&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Lora(WAN)&lt;/a&gt;
 and maintaining a TTN Gateway, I learned so much, also from the workshops there, that I wrote a &lt;a href=&#34;https://justobjects.nl/emit-3/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;separate blog-post about this event&lt;/a&gt;
.&lt;/li&gt;
&lt;li&gt;Started contracting (eventually until sept 30, 2018) at Dutch Kadaster to migrate the entire Smart Emission (SE) Platform to Kadaster infrastructure. Initially just migrating the &lt;a href=&#34;https://cloud.docker.com/u/smartemission/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SE Docker Images&lt;/a&gt;
, normally two-weeks (to be honest, a day’s) work, BUT, as a (nice) surprise learned we had to move SE “To The Cloud”, that is to &lt;a href=&#34;https://azure.microsoft.com/en-us/services/kubernetes-service/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Azure Kubernetes (AKS)&lt;/a&gt;
, well that kept me and one Kadaster-colleague (learned a lot from you Gerwin!) busy till end of september at least  2-3 days a week!&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;march&#34;&gt;March&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;As first-timer went to the &lt;a href=&#34;https://wiki.osgeo.org/wiki/OSGeo_Code_Sprint_2018&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSGeo 2018 Code Sprint in Bonn&lt;/a&gt;
. Mainly to work on &lt;a href=&#34;https://geohealthcheck.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoHealthCheck&lt;/a&gt;
. (GHC). Another highlight! Not the least since I finally met the great &lt;a href=&#34;https://www.osgeo.org/member/tom-kralidis/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Tom Kralidis&lt;/a&gt;
! I had been working on GHC with Tom a couple of years but we somehow never met IRL. Spent most of week on a single PR (&lt;a href=&#34;https://github.com/geopython/GeoHealthCheck/pull/222&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;per-Resource scheduling&lt;/a&gt;
) which required a re-architecture of GHC. But more importantly socializing with Tom and other folks there, well, Bonn, need I say more…Thanks organizers: &lt;a href=&#34;https://wiki.osgeo.org/wiki/Astrid_Emde&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Astrid Emde&lt;/a&gt;
 et al. for this great week!&lt;/li&gt;
&lt;li&gt;In that same codesprint week I also attended several talks at the yearly &lt;a href=&#34;https://fossgis-konferenz.de/2018/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FOSSGIS Conference&lt;/a&gt;
  there. The FOSSGIS Conference is a major event in Europe as it involves all German-speaking (DACH) countries, plus their OpenStreetMap communities. Even with my high-school German language knowledge very well to follow.  As an exception to the rule I was grateful to be allowed to give a &lt;a href=&#34;https://geohealthcheck.org/presentation/#/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoHealthCheck presentation&lt;/a&gt;
 in English. Thanks to &lt;a href=&#34;https://www.ccc.de&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;CCC&lt;/a&gt;
, FOSSGIS always videotapes all talks, so you can &lt;a href=&#34;https://media.ccc.de/v/2018-5294-geohealthcheck&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;watch some of my stuttering here&lt;/a&gt;
.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;april&#34;&gt;April&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;With OSGeo.nl we and our community-members more and more try to organize small, hands-on events that are lightweight to organize. The &lt;a href=&#34;https://osgeo.nl/2018/04/verslag-nlextract-hacking-day/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;NLExtract Hacking Day&lt;/a&gt;
 was a success! Thanks to organizer Frank Steggink (who also wrote the report), and a great space offered by &lt;a href=&#34;https://www.webmapper.net/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;WebMapper&lt;/a&gt;
 (Edward MacGillavry) in the &lt;a href=&#34;https://sifutrecht.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Social Impact Factory Utrecht.&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;may&#34;&gt;May&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;What happened in this month? Luckily GitHub tracks my activity. Many commits for the Smart Emission Kubernetes challenge. I see a week without commits in May: made a great hiking trip with friends in Ireland: the &lt;a href=&#34;http://www.kerryway.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Kerry Way&lt;/a&gt;
. Rain? Only one evening when walking to the pub (always live music there)!&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://github.com/justb4?tab=overview&amp;amp;from=2018-01-01&amp;amp;to=2018-12-31&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2019/01/github-2018-just.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;h3 id=&#34;june&#34;&gt;June&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;More work on &lt;a href=&#34;https://map5.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;map5.nl&lt;/a&gt;
, a subscription service for Dutch topographic, historical- and embellished hillshade and arial maps I started to host in 2015. Plus ongoing Smart Emission stuff.&lt;/li&gt;
&lt;li&gt;Gradually, a heat-wave was overtaking The Netherlands. Climate change?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;july&#34;&gt;July&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Heat-wave more and more building up.. But that did not stop the great OSGeo.nl organizing team to host the second &lt;a href=&#34;https://foss4g.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FOSS4G-NL in Almere&lt;/a&gt;
. July 10-11. Kudos to Erik Meerburg and team for two great days of workshops and conf!&lt;/li&gt;
&lt;li&gt;At the FOSS4G-NL I had the honor to &lt;a href=&#34;https://www.slideshare.net/justb4/osgeonlopeningfoss4gnl2018&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;open the conference&lt;/a&gt;
 and  present the &lt;a href=&#34;https://geoforum.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;national Dutch GeoForum: geoforum.nl.&lt;/a&gt;
 We jointly (Kadaster, WebMapper, OSGeo.nl) extended the existing Dutch Kadaster PDOK Forum. As OSGeo.nl we did not want to launch yet another forum but to bundle forces.  Since that launch hundreds of folks registered.&lt;/li&gt;
&lt;li&gt;Week after: off to &lt;a href=&#34;https://foss4g-europe.osgeopt.pt/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FOSS4G-EU&lt;/a&gt;
 in &lt;a href=&#34;https://en.wikipedia.org/wiki/Guimar%C3%A3es&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Guimarães&lt;/a&gt;
,Portugal. FOSS4G-EU is always something special. Folks gather from literally every country in Europe. From the Baltic States to Croatia. In a cosy atmosphere &lt;a href=&#34;https://wiki.osgeo.org/wiki/Jorge_Gustavo_Rocha&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Jorge Gustavo Rocha&lt;/a&gt;
 and the LOC made this into a great event. Great talks during the day and every evening (and sometimes nights) in this small-town university city it was easy to find and gather with the OSGeo-folks on the main square &lt;a href=&#34;https://en.wikipedia.org/wiki/Historic_Centre_of_Guimar%C3%A3es&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Largo da Oliveira&lt;/a&gt;
.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;august&#34;&gt;August&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Started to seriously deploy the five AirSensEUR (ASE) stations. First at an RIVM air quality station in Breukelen next to the main A2 highway. With the great help of Jan Vonk of RIVM we managed to attach and digitally connect these stations at their premises. To have an idea, read &lt;a href=&#34;https://justobjects.nl/emit-5-assembling-and-deploying-5-airsenseurs/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;my blog post on this effort&lt;/a&gt;
. The ASE stations will gather raw, uncalibrated, Air Quality data there for two months and use the onsite RIVM measurements as reference for later calibration.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://justobjects.nl/emit-5-assembling-and-deploying-5-airsenseurs/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2019/01/ase-rivm-breukelen.jpg&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;h3 id=&#34;september&#34;&gt;September&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Again a small gap in my GitHub commit history: two weeks with my family (and our great Labrador Jamie) in rural France: Auvergne and Ardeche. I always love to set out GPS-hikes at home, hacking some of the French IGN topo-maps for personal use, and see how these turn out on the spot.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2019/01/ign-trails.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;oktober&#34;&gt;Oktober&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Contract with Dutch Kadaster ended on sept 30. Just in time we migrated the entire Smart Emission stack to Azure Kubernetes (AKS). Well, IMHO Kubernetes is just awesome, especially after a few years of ad-hoc Docker deployment. Yes, a learning curve and devops-paradigm shift. Though for smaller projects in 2019 I am now combining &lt;a href=&#34;https://www.ansible.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ansible&lt;/a&gt;
 with Docker (Compose).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After two months of gathering data for calibration, deployed the five AirSensEUR (ASE) stations at their target locations within The Netherlands. At each location challenges: an ASE needs 3 things: 1) to be firmly/rain-protected mounted physically, 2) 220V current and 3) WIFI. That combination turned out to be a challenge at each spot. But finally all five ASEs are now humming at their spots.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://data.smartemission.nl/grafana-dc/d/HVSBmbHmz/airsenseur-netherlands-deploy&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2019/01/ases-o3.jpg&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And with OSGeo.nl we had the second 2018 QGIS-Day at &lt;a href=&#34;https://www.ordina.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ordina Utrecht&lt;/a&gt;
. Thanks to the LOC: Jonas, Coen et al. Observation: all hands-on workshops were overcrowded!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;november&#34;&gt;November&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;More work on &lt;a href=&#34;https://map5.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;map5.nl&lt;/a&gt;
 and working on a next SAAS: &lt;a href=&#34;https://geohealthcheck.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoHealthCheck&lt;/a&gt;
 in the Cloud, as a subscription service, under the name &lt;a href=&#34;https://geoqos.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;geoqos&lt;/a&gt;
 (“Geo-Cause”) on &lt;a href=&#34;https://geoqos.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;geoqos.com&lt;/a&gt;
. Hopefully that makes the GeoHealthCheck project sustainable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Presented Smart Emission at the &lt;a href=&#34;https://www.geonovum.nl/over-geonovum/agenda/geo-gebruikersfestival-2018-en-sdinext&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Geo Users Festival by Geonovum&lt;/a&gt;
. Bit of beamer issues, &lt;a href=&#34;https://www.slideshare.net/justb4/sensor-sdi-in-pdok-with-smart-emission-platform&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;my slides on Slideshare&lt;/a&gt;
.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://www.geonovum.nl/over-geonovum/agenda/geo-gebruikersfestival-2018-en-sdinext&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2019/01/geofestival-2018.jpg&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What’s that day after the &lt;a href=&#34;https://www.gisday.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GIS Day&lt;/a&gt;
? Yes, the &lt;a href=&#34;https://postgisdag.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;PostGIS Day&lt;/a&gt;
! That’s exactly what the LOC team (Steven M. Ottens and Tom van Tilburg) organized. Deliberately keeping it low-profile to attract high-profile PostGIS hackers. And how they did! The format was an &lt;a href=&#34;https://en.wikipedia.org/wiki/Unconference&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;unconference&lt;/a&gt;
. Even as a considered PostGIS veteran (starting with a PostGIS workshop from &lt;a href=&#34;http://2006.foss4g.org/contributionDisplay0b28.html?contribId=47&amp;amp;sessionId=61&amp;amp;confId=1&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Paul Ramsey in Lausanne 2006&lt;/a&gt;
) my  brain was crushing hearing stuff like from &lt;a href=&#34;http://www.gdmc.nl/martijn/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Martijn Meijers&lt;/a&gt;
 - &lt;em&gt;&lt;a href=&#34;https://www.google.com/search?q=Indexing&amp;#43;AIS&amp;#43;data&amp;#43;%2F&amp;#43;point&amp;#43;clouds&amp;#43;with&amp;#43;a&amp;#43;Space&amp;#43;Filling&amp;#43;Curve&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;aq=t&amp;amp;channel=rcs&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Indexing AIS data / point clouds with a Space Filling Curve&lt;/a&gt;
&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://postgisdag.nl/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2019/01/postgisday-2018.jpg&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;december&#34;&gt;December&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Through my various projects thinking: All GeoData is Spatio-Temporal. Presented in Eindhoven at a Ruimteschepper event: &lt;em&gt;LoRaWAN TheThingsNetwork makers event&lt;/em&gt;. &lt;a href=&#34;https://www.slideshare.net/justb4/open-sensor-networks-with-lora-ttn-and-sensorthings-api&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Slides are here&lt;/a&gt;
.  For one thing attempted to bridge the world of IoT with OGC SensorWeb via the &lt;a href=&#34;https://en.wikipedia.org/wiki/SensorThings_API&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SensorThings API&lt;/a&gt;
 in a PoC.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://www.slideshare.net/justb4/open-sensor-networks-with-lora-ttn-and-sensorthings-api&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2019/01/poc-ttn-sta.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;That’s almost it of 2018. A last brainwave on GeoHealthCheck usability made me to introduce interactive &lt;a href=&#34;https://plot.ly/javascript/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Plotly.js&lt;/a&gt;
 based interactive history Run-graphs. Together with and thanks to Tom Kralidis reviewing that was my final GitHub commit in 2018. Ok finalized on jan 3, 2019 but what a year!&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://geohealthcheck.org/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2019/01/plotly-ghc.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;

        
      </description>
    </item>
    
    <item>
      <title>Emit #5 – Assembling and Deploying 5 AirSensEURs – a Story in Pictures</title>
      <link>https://justobjects.nl/emit-5-assembling-and-deploying-5-airsenseurs/</link>
      <pubDate>Wed, 15 Aug 2018 21:01:46 +0000</pubDate>
      
      <guid>https://justobjects.nl/emit-5-assembling-and-deploying-5-airsenseurs/</guid>
      <description>
        
          &lt;p&gt;This is Emit #5, in a &lt;a href=&#34;https://justobjects.nl/category/smartemission/&#34;&gt;series of blog-posts around the Smart Emission Platform&lt;/a&gt;
, an Open Source software component framework that facilitates the acquisition, processing and (OGC web-API) unlocking of spatiotemporal sensor-data, mainly for Air Quality and other environmental sensor-data like noise.&lt;/p&gt;
&lt;p&gt;Summer holidays and a heat-wave strikes The Netherlands. Time for some lighter material mainly told in pictures. As highlighted in &lt;a href=&#34;https://justobjects.nl/emit-2/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Emit #2&lt;/a&gt;
, I have the honor of doing a project for the &lt;a href=&#34;https://ec.europa.eu/info/departments/joint-research-centre_en&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;European Union Joint Research Centre&lt;/a&gt;
  (EU JRC), to deploy five &lt;a href=&#34;https://airsenseur.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;AirSensEUR&lt;/a&gt;
 (ASE) boxes within The Netherlands, attaching these to the &lt;a href=&#34;http://data.smartemission.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Smart Emission Platform&lt;/a&gt;
 in cooperation with &lt;a href=&#34;https://www.rivm.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;RIVM&lt;/a&gt;
 (National Institute for Public Health and the Environment). The ASE boxes measure four Air Quality (AQ) indicators: NO2 (Nitrogen Dioxide), NO (Nitrogen Monoxide), O3 (Ozone) and CO (Carbon Monoxide) plus meteo (Temp, Humidity, Air Pressure) and GPS. Read more on ASE &lt;a href=&#34;http://publications.jrc.ec.europa.eu/repository/bitstream/JRC109337/jrc109337_airsenseur_part_c_jrc_technical_report_inspire.pdf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;in this article&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/08/ase-arch.jpg&#34; alt=&#34;ASE Architecture&#34;&gt;&lt;/p&gt;
&lt;!--
&lt;div id=&#34;attachment_801&#34; style=&#34;width: 996px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img aria-describedby=&#34;caption-attachment-801&#34; loading=&#34;lazy&#34; class=&#34;size-full wp-image-801&#34; src=&#34;uploads/2018/08/ase-arch.jpg&#34; alt=&#34;&#34; width=&#34;986&#34; height=&#34;771&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2018/08/ase-arch.jpg 986w, https://justobjects.nl/wp-content/uploads/2018/08/ase-arch-300x235.jpg 300w, https://justobjects.nl/wp-content/uploads/2018/08/ase-arch-768x601.jpg 768w, https://justobjects.nl/wp-content/uploads/2018/08/ase-arch-150x117.jpg 150w&#34; sizes=&#34;(max-width: 986px) 100vw, 986px&#34; /&gt;

  &lt;p id=&#34;caption-attachment-801&#34; class=&#34;wp-caption-text&#34;&gt;
    ASE Architecture
  &lt;/p&gt;
&lt;/div&gt;
--&gt;
&lt;p&gt;The ASE is an Open Hard/Software platform that can be configured with multiple brands/types of sensors. In the current case all four above mentioned AQ sensors are from &lt;a href=&#34;http://www.alphasense.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;AlphaSense&lt;/a&gt;
. As these are relatively cheap sensors (&amp;lt; $100,-), the challenge is to have these calibrated before final deployment. This calibration is done by placing the ASE boxes first at an RIVM station, gather data for a month or two and then calibrate these sensors from official RIVM reference measurements at the same location. Using both the raw ASE data and the RIVM reference data the calibration “formulae” can be determined, before placing the ASEs at their final deployment locations around The Netherlands and have the Smart Emission Platform assemble/publish the (calibrated) data for the next year or so. More info on AirSensEUR via &lt;a href=&#34;https://www.google.com/search?q=airsenseur&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;this Google Search&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;Ok, picture time!  Explanatory text is below each picture.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/08/asenl-unbox-assemble-deploy-9.jpg&#34; alt=&#34;1. ASEs unboxed&#34;&gt;&lt;/p&gt;
&lt;!--
&lt;div id=&#34;attachment_787&#34; style=&#34;width: 1034px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img aria-describedby=&#34;caption-attachment-787&#34; loading=&#34;lazy&#34; class=&#34;wp-image-787 size-full&#34; src=&#34;uploads/2018/08/asenl-unbox-assemble-deploy-9.jpg&#34; alt=&#34;&#34; width=&#34;1024&#34; height=&#34;768&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-9.jpg 1024w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-9-300x225.jpg 300w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-9-768x576.jpg 768w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-9-150x113.jpg 150w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; /&gt;

  &lt;p id=&#34;caption-attachment-787&#34; class=&#34;wp-caption-text&#34;&gt;
    1. ASEs unboxed
  &lt;/p&gt;
&lt;/div&gt;
--&gt;
&lt;p&gt;Picture 1: Boxes arrived from EU JRC Italy on June 12, 2018. Assembling: upper left shows the (total of 20) AlphaSense sensors like “blisters” (Dutch “doordrukstrips”), the ASE box (with screwdrivers on top) and the protecting metal outer shield on the right.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/08/asenl-unbox-assemble-deploy-11.jpg&#34; alt=&#34;2. placing AlphaSense sensors in sockets&#34;&gt;&lt;/p&gt;
&lt;!--
&lt;div id=&#34;attachment_788&#34; style=&#34;width: 1034px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img aria-describedby=&#34;caption-attachment-788&#34; loading=&#34;lazy&#34; class=&#34;wp-image-788 size-full&#34; src=&#34;uploads/2018/08/asenl-unbox-assemble-deploy-11.jpg&#34; alt=&#34;&#34; width=&#34;1024&#34; height=&#34;784&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-11.jpg 1024w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-11-300x230.jpg 300w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-11-768x588.jpg 768w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-11-150x115.jpg 150w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; /&gt;

  &lt;p id=&#34;caption-attachment-788&#34; class=&#34;wp-caption-text&#34;&gt;
    2. placing AlphaSense sensors in sockets
  &lt;/p&gt;
&lt;/div&gt;
--&gt;
&lt;p&gt;Picture 2: Very carefully placing the AlphaSense sensors in the ASE Sensor Shield (an Arduino-like board) without touching the top-membrane!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/08/asenl-unbox-assemble-deploy-12.jpg&#34; alt=&#34;3. All sensors firmly in their sockets&#34;&gt;&lt;/p&gt;
&lt;!--
&lt;div id=&#34;attachment_790&#34; style=&#34;width: 1034px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img aria-describedby=&#34;caption-attachment-790&#34; loading=&#34;lazy&#34; class=&#34;size-full wp-image-790&#34; src=&#34;uploads/2018/08/asenl-unbox-assemble-deploy-12.jpg&#34; alt=&#34;&#34; width=&#34;1024&#34; height=&#34;830&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-12.jpg 1024w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-12-300x243.jpg 300w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-12-768x623.jpg 768w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-12-150x122.jpg 150w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; /&gt;

  &lt;p id=&#34;caption-attachment-790&#34; class=&#34;wp-caption-text&#34;&gt;
    3. All sensors firmly in their sockets
  &lt;/p&gt;
&lt;/div&gt;
--&gt;
&lt;p&gt;Picture 3: all sensors placed, attach current and next to network and other configuring!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/08/asenl-unbox-assemble-deploy-2.jpg&#34; alt=&#34;4. Boxes humming and connected via WIFI to the LAN&#34;&gt;&lt;/p&gt;
&lt;!--
&lt;div id=&#34;attachment_791&#34; style=&#34;width: 1034px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img aria-describedby=&#34;caption-attachment-791&#34; loading=&#34;lazy&#34; class=&#34;size-full wp-image-791&#34; src=&#34;uploads/2018/08/asenl-unbox-assemble-deploy-2.jpg&#34; alt=&#34;&#34; width=&#34;1024&#34; height=&#34;771&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-2.jpg 1024w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-2-300x226.jpg 300w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-2-768x578.jpg 768w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-2-150x113.jpg 150w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; /&gt;

  &lt;p id=&#34;caption-attachment-791&#34; class=&#34;wp-caption-text&#34;&gt;
    4. Boxes humming and connected via WIFI to the LAN
  &lt;/p&gt;
&lt;/div&gt;
--&gt;
&lt;p&gt;Picture 4: On default startup (via touch buttons) the ASE will expose a default WIFI access point. This can be used to attach and to login at the “ASE Host Board”, a Raspberry Pi-like board running standard Linux Debian. SSH into each box and further configure e.g. the WIFI settings to become a WIFI client, first having all boxes connect to the local office WLAN.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/08/asenl-unbox-assemble-deploy-1.jpg&#34; alt=&#34;5. configured for InfluxDB Data Push visualized via Grafana&#34;&gt;&lt;/p&gt;
&lt;!--
&lt;div id=&#34;attachment_792&#34; style=&#34;width: 1034px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img aria-describedby=&#34;caption-attachment-792&#34; loading=&#34;lazy&#34; class=&#34;size-full wp-image-792&#34; src=&#34;uploads/2018/08/asenl-unbox-assemble-deploy-1.jpg&#34; alt=&#34;&#34; width=&#34;1024&#34; height=&#34;715&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-1.jpg 1024w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-1-300x209.jpg 300w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-1-768x536.jpg 768w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-1-150x105.jpg 150w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; /&gt;

  &lt;p id=&#34;caption-attachment-792&#34; class=&#34;wp-caption-text&#34;&gt;
    5. configured for InfluxDB Data Push visualized via Grafana
  &lt;/p&gt;
&lt;/div&gt;
--&gt;
&lt;p&gt;Picture 5. Each box runs a Data Aggregator and can be configured to push data to a remote InfluxDB database. In our case we have setup a Smart Emission InfluxDB Data Collector where the (raw) data is received. This InfluxDB datastore is visualized using a Grafana Panel shown in the picture. We see the five boxes ASE_NL_01-05 sensing and pushing data!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/08/asenl-unbox-assemble-deploy-4.jpg&#34; alt=&#34;6. All packed and in trunk of my car&#34;&gt;&lt;/p&gt;
&lt;!--
&lt;div id=&#34;attachment_795&#34; style=&#34;width: 1034px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img aria-describedby=&#34;caption-attachment-795&#34; loading=&#34;lazy&#34; class=&#34;wp-image-795 size-full&#34; src=&#34;uploads/2018/08/asenl-unbox-assemble-deploy-4.jpg&#34; alt=&#34;&#34; width=&#34;1024&#34; height=&#34;633&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-4.jpg 1024w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-4-300x185.jpg 300w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-4-768x475.jpg 768w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-4-150x93.jpg 150w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; /&gt;

  &lt;p id=&#34;caption-attachment-795&#34; class=&#34;wp-caption-text&#34;&gt;
    6. All packed and in trunk of my car
  &lt;/p&gt;
&lt;/div&gt;
--&gt;
&lt;p&gt;Picture 6. A good start, but next we need to go out and place the boxes at the RIVM station for a period of calibration. So tearing down, packing, all into the trunk of my car. Up to the RIVM station! July 30, 2018, Still 35 degrees C outside.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/08/asenl-unbox-assemble-deploy-3.jpg&#34; alt=&#34;7. The RIVM sensor station, right near the highway&#34;&gt;&lt;/p&gt;
&lt;!--
&lt;div id=&#34;attachment_796&#34; style=&#34;width: 1034px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img aria-describedby=&#34;caption-attachment-796&#34; loading=&#34;lazy&#34; class=&#34;size-full wp-image-796&#34; src=&#34;uploads/2018/08/asenl-unbox-assemble-deploy-3.jpg&#34; alt=&#34;&#34; width=&#34;1024&#34; height=&#34;613&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-3.jpg 1024w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-3-300x180.jpg 300w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-3-768x460.jpg 768w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-3-250x150.jpg 250w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-3-150x90.jpg 150w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; /&gt;

  &lt;p id=&#34;caption-attachment-796&#34; class=&#34;wp-caption-text&#34;&gt;
    7. The RIVM sensor station, right near the highway
  &lt;/p&gt;
&lt;/div&gt;
--&gt;
&lt;p&gt;Picture 7. July 30, 2018, 13:00. Arrived at the RIVM station. Now to figure out how to attach the five boxes. The lower horizontal iron pole seems the best option. Put all soft/hardware knowledge away, now real plumbing is required!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/08/asenl-unbox-assemble-deploy-5.jpg&#34; alt=&#34;8. Could not have made this without the great help of Jan Vonk (RIVM)&#34;&gt;&lt;/p&gt;
&lt;!--
&lt;div id=&#34;attachment_797&#34; style=&#34;width: 1034px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img aria-describedby=&#34;caption-attachment-797&#34; loading=&#34;lazy&#34; class=&#34;size-full wp-image-797&#34; src=&#34;uploads/2018/08/asenl-unbox-assemble-deploy-5.jpg&#34; alt=&#34;&#34; width=&#34;1024&#34; height=&#34;598&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-5.jpg 1024w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-5-300x175.jpg 300w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-5-768x449.jpg 768w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-5-150x88.jpg 150w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; /&gt;

  &lt;p id=&#34;caption-attachment-797&#34; class=&#34;wp-caption-text&#34;&gt;
    8. Could not have made this without the great help of Jan Vonk (RIVM)
  &lt;/p&gt;
&lt;/div&gt;
--&gt;
&lt;p&gt;Picture 8. Jan Vonk of RIVM, who also have deployed about 12 ASEs, placing the first boxes on the horizontal pole, so far so good.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/08/asenl-unbox-assemble-deploy-6-1.jpg&#34; alt=&#34;9. All five boxes attached!&#34;&gt;&lt;/p&gt;
&lt;!--
&lt;div id=&#34;attachment_798&#34; style=&#34;width: 1034px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img aria-describedby=&#34;caption-attachment-798&#34; loading=&#34;lazy&#34; class=&#34;size-full wp-image-798&#34; src=&#34;uploads/2018/08/asenl-unbox-assemble-deploy-6-1.jpg&#34; alt=&#34;&#34; width=&#34;1024&#34; height=&#34;596&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-6-1.jpg 1024w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-6-1-300x175.jpg 300w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-6-1-768x447.jpg 768w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-6-1-150x87.jpg 150w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; /&gt;

  &lt;p id=&#34;caption-attachment-798&#34; class=&#34;wp-caption-text&#34;&gt;
    9. All five boxes attached!
  &lt;/p&gt;
&lt;/div&gt;
--&gt;
&lt;p&gt;Picture 9. All five boxes strapped to the pole. Jan Vonk doing the hard work. Next challenge: they need power and WIFI…&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/08/asenl-unbox-assemble-deploy-7.jpg&#34; alt=&#34;10. Connecting to power&amp;#8230;&#34;&gt;&lt;/p&gt;
&lt;!--
&lt;div id=&#34;attachment_803&#34; style=&#34;width: 1034px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img aria-describedby=&#34;caption-attachment-803&#34; loading=&#34;lazy&#34; class=&#34;wp-image-803 size-full&#34; src=&#34;uploads/2018/08/asenl-unbox-assemble-deploy-7.jpg&#34; alt=&#34;&#34; width=&#34;1024&#34; height=&#34;649&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-7.jpg 1024w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-7-300x190.jpg 300w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-7-768x487.jpg 768w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-7-150x95.jpg 150w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; /&gt;

  &lt;p id=&#34;caption-attachment-803&#34; class=&#34;wp-caption-text&#34;&gt;
    10. Connecting to power&amp;#8230;
  &lt;/p&gt;
&lt;/div&gt;
--&gt;
&lt;p&gt;Picture 10. One cannot have enough power sockets.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/08/asenl-unbox-assemble-deploy-1-1.jpg&#34; alt=&#34;11. Power supplies covered under plastic box&#34;&gt;&lt;/p&gt;
&lt;!--
&lt;div id=&#34;attachment_804&#34; style=&#34;width: 1034px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img aria-describedby=&#34;caption-attachment-804&#34; loading=&#34;lazy&#34; class=&#34;size-full wp-image-804&#34; src=&#34;uploads/2018/08/asenl-unbox-assemble-deploy-1-1.jpg&#34; alt=&#34;&#34; width=&#34;1024&#34; height=&#34;714&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-1-1.jpg 1024w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-1-1-300x209.jpg 300w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-1-1-768x536.jpg 768w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-1-1-150x105.jpg 150w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; /&gt;

  &lt;p id=&#34;caption-attachment-804&#34; class=&#34;wp-caption-text&#34;&gt;
    11. Power supplies covered under plastic box.
  &lt;/p&gt;
&lt;/div&gt;
--&gt;
&lt;p&gt;Picture 11. Covering all power supply stuff under tightened box shielded from rain.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/08/asenl-unbox-assemble-deploy-8.jpg&#34; alt=&#34;12. Moment of truth starting up and attaching to local WIFI&#34;&gt;&lt;/p&gt;
&lt;!--
&lt;div id=&#34;attachment_805&#34; style=&#34;width: 1034px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img aria-describedby=&#34;caption-attachment-805&#34; loading=&#34;lazy&#34; class=&#34;size-full wp-image-805&#34; src=&#34;uploads/2018/08/asenl-unbox-assemble-deploy-8.jpg&#34; alt=&#34;&#34; width=&#34;1024&#34; height=&#34;606&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-8.jpg 1024w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-8-300x178.jpg 300w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-8-768x455.jpg 768w, https://justobjects.nl/wp-content/uploads/2018/08/asenl-unbox-assemble-deploy-8-150x89.jpg 150w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; /&gt;

  &lt;p id=&#34;caption-attachment-805&#34; class=&#34;wp-caption-text&#34;&gt;
    12. Moment of truth starting up and attaching to local WIFI
  &lt;/p&gt;
&lt;/div&gt;
--&gt;
&lt;p&gt;Picture 12. July 30, 2018, 17:00. Last challenge: booting up the boxes and have them connecting to the local RIVM station’s WIFI. I had pre-configured WLAN settings in each box, but this is always a moment of truth: will they connect? If they do they will start sampling and push their raw data to the Smart Emission Platform…Then we can start the calibration period. And success ... they connected!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/08/grafana-all-pushing.jpg&#34; alt=&#34;13. All boxes connected and sampling and pushing data&#34;&gt;&lt;/p&gt;
&lt;!--
&lt;div id=&#34;attachment_807&#34; style=&#34;width: 1034px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img aria-describedby=&#34;caption-attachment-807&#34; loading=&#34;lazy&#34; class=&#34;size-full wp-image-807&#34; src=&#34;uploads/2018/08/grafana-all-pushing.jpg&#34; alt=&#34;&#34; width=&#34;1024&#34; height=&#34;323&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2018/08/grafana-all-pushing.jpg 1024w, https://justobjects.nl/wp-content/uploads/2018/08/grafana-all-pushing-300x95.jpg 300w, https://justobjects.nl/wp-content/uploads/2018/08/grafana-all-pushing-768x242.jpg 768w, https://justobjects.nl/wp-content/uploads/2018/08/grafana-all-pushing-150x47.jpg 150w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; /&gt;

  &lt;p id=&#34;caption-attachment-807&#34; class=&#34;wp-caption-text&#34;&gt;
    13. All boxes connected and sampling and pushing data.
  &lt;/p&gt;
&lt;/div&gt;
--&gt;
&lt;p&gt;Picture 13. Now on August 15, 2018, with minor hickups, and with great help from the JRC folks Marco Signorini and Michel Gerboles, we have all five boxes sampling and pushing data for the calibration period. The above plot shows raw NO2 data, to be calibrated.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/08/samenmeten-tweet.jpg&#34; alt=&#34;A next step for the RIVM Program &amp;#8220;Together Measuring Air Quality&amp;#8221;&#34;&gt;&lt;/p&gt;
&lt;!--
&lt;div id=&#34;attachment_810&#34; style=&#34;width: 596px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img aria-describedby=&#34;caption-attachment-810&#34; loading=&#34;lazy&#34; class=&#34;size-full wp-image-810&#34; src=&#34;uploads/2018/08/samenmeten-tweet.jpg&#34; alt=&#34;&#34; width=&#34;586&#34; height=&#34;427&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2018/08/samenmeten-tweet.jpg 586w, https://justobjects.nl/wp-content/uploads/2018/08/samenmeten-tweet-300x219.jpg 300w, https://justobjects.nl/wp-content/uploads/2018/08/samenmeten-tweet-150x109.jpg 150w&#34; sizes=&#34;(max-width: 586px) 100vw, 586px&#34; /&gt;

  &lt;p id=&#34;caption-attachment-810&#34; class=&#34;wp-caption-text&#34;&gt;
    A next step for the RIVM Program &amp;#8220;Together Measuring Air Quality&amp;#8221;.
  &lt;/p&gt;
&lt;/div&gt;
--&gt;
&lt;p&gt;So a good start! The heatwave is over, the next hard work is calibration. Why are we doing this? Well, like with meteorology, RIVM and others are stimulating Air Quality to be measured by basically anyone, from groups of civilians to individuals. For this RIVM has setup the program &lt;a href=&#34;https://www.samenmetenaanluchtkwaliteit.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;“Samen meten aan Luchtkwaliteit”&lt;/a&gt;
 (“Together measuring air quality”). Measuring Air Quality is not an easy task. We need to learn by doing, make mistakes, and spread knowledge gained. Both AirSensEUR and Smart Emission are therefore Open. Below some further links:&lt;/p&gt;
&lt;p&gt;Smart Emission: &lt;a href=&#34;https://github.com/smartemission&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GitHub&lt;/a&gt;
, &lt;a href=&#34;http://data.smartemission.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;WebSite&lt;/a&gt;
, &lt;a href=&#34;http://data.smartemission.nl/docs&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Documentation&lt;/a&gt;
, and &lt;a href=&#34;https://hub.docker.com/u/smartemission/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Docker Images&lt;/a&gt;
.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Emit #4 – Push or Pull?</title>
      <link>https://justobjects.nl/emit-4-push-or-pull/</link>
      <pubDate>Thu, 05 Apr 2018 21:17:16 +0000</pubDate>
      
      <guid>https://justobjects.nl/emit-4-push-or-pull/</guid>
      <description>
        
          &lt;p&gt;This is Emit #4, in a &lt;a href=&#34;https://justobjects.nl/categories/smartemission/&#34;&gt;series of blog-posts around the Smart Emission Platform&lt;/a&gt;
, an Open Source software component framework that facilitates the acquisition, processing and (OGC web-API) unlocking of spatiotemporal sensor-data, mainly for Air Quality and other environmental sensor-data like noise.&lt;/p&gt;
&lt;p&gt;A lot of things have happened with the project since the &lt;a href=&#34;https://justobjects.nl/emit-3/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;last Emit #3&lt;/a&gt;
 (feb 2018 already). The main news is that the SE Platform is now being migrated to the national Dutch GDI services infrastructure, &lt;a href=&#34;https://www.pdok.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;PDOK&lt;/a&gt;
. This infrastructure, entirely built with OSGeo software, is maintained by the &lt;a href=&#34;https://www.kadaster.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Dutch Kadaster&lt;/a&gt;
 and already (since 2010) provides open access to Dutch geospatial datasets and -services including the Dutch INSPIRE access point. Having the SE Platform hosted and maintained within PDOK gives a tremendous opportunity for long-term evolution and stability beyond its initial project-based funding.&lt;/p&gt;
&lt;p&gt;There’s lots of exciting new technological details related to this migration, like the move from the current ad-hoc Docker-based deployment to a full-fledged &lt;a href=&#34;https://kubernetes.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Kubernetes (K8s)&lt;/a&gt;
 Cloud roll-out. This could be the subject of an entire post by itself. For this we’re setting up a &lt;a href=&#34;https://github.com/smartemission&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;fresh GitHub organization&lt;/a&gt;
, plus &lt;a href=&#34;https://hub.docker.com/r/smartemission/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SE Docker Images via DockerHub&lt;/a&gt;
. All work-in-progress but first results are already tangible.&lt;/p&gt;
&lt;p&gt;So what’s this Push or Pull about? As announced in &lt;a href=&#34;https://justobjects.nl/emit-1/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Emit #1&lt;/a&gt;
, I’ll try to explain the SE architecture “by following the data”. So sensor data is acquired by sensor stations constantly, 24 hours a day, and lots of it. To give somewhat of a figure: within the SE project the &lt;a href=&#34;http://www.snuffle.org/doku.php?id=josene&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Intemo Sensor Station “Josene”&lt;/a&gt;
 station provides more than 100 different sensor values, “indicators”. These range from meteo-data like Temperature, Humidity, Pressure, to Air Quality values for NO2 (Nitrogen Dioxide), CO2 (Carbon Dioxide), O3 (Ozone), finedust (PM) and audio/noise indicators (sound pressure) like Decibels (A) min/max/average for about 30 frequency bands (see image below).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/04/sound-josene.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;Values for these about 100 indicators are sampled about every 20 seconds. Even with about one hundred Josene sensor stations currently one can imagine this will produce “a lot of data” to say the least. O yes, and we also like to keep all data, i.e. maintain history…Josene sensor-stations are connected via Wifi and will have to send their data to “somewhere”. Eventually, a user will need to view/consume sensor-data via an app, like the &lt;a href=&#34;http://data.smartemission.nl/smartapp/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SmartApp&lt;/a&gt;
 (see image below), or web-services without being overwhelmed.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/04/smartapp.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;So how does the SE Platform deal with this potential tsunami of data? Well, the keywords are Buffering, Harvesting and Aggregation. Back to following the data. Each Josense sensor station will constantly push its data to what is called a &lt;em&gt;&lt;strong&gt;Data Collector&lt;/strong&gt;&lt;/em&gt; within the SE architecture. A Data Collector is basically a buffer (server) that will store bulk “timeseries” data for each station. Data is stored in bulk, i.e. not every sample is stored in an individual record but as blobs. The granularity is one blob per station/per day/per hour.  This already reduces data records to 24 blobs per day per station. A lot of storage but a reasonable number of records. Also remind: this is raw, unvalidated, unaggregated data. Best is to first show a picture from the global architecture as below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/04/se-global-arch.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;Starting at the bottom of the picture above: Sensors send (push) their raw data to their attached Data Collector. Currently this even happens outside the SE Platform: the two Data Collectors from the left are maintained by our partners Intemo (Intemo Data Collector) and CityGIS (CityGIS Data Collector) within their own premises. In the course of the project we have been adding another Data Collector based on InfluxDB for the AirSensEUR. Also the RIVM SOS is viewed as a Data Collector for purposes of Calibration (for another Emit).&lt;/p&gt;
&lt;p&gt;The important notice is that the SE Platform deploys &lt;em&gt;&lt;strong&gt;Harvesters&lt;/strong&gt;&lt;/em&gt; that constantly &lt;em&gt;&lt;strong&gt;Pull&lt;/strong&gt;&lt;/em&gt; the raw data from a series of Data Collectors. So this is where the Push/Pull decoupling is realized. For this (Pull) we have developed a simple &lt;a href=&#34;https://github.com/Geonovum/smartemission/tree/master/docs/specs/rawsensor-api&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Raw Sensor REST API&lt;/a&gt;
 nicknamed the &lt;em&gt;&lt;strong&gt;Whale API&lt;/strong&gt;&lt;/em&gt;. Each Data Collector exposes its buffered bulk data (history) as JSON Blobs via this very simple API, independent from its internal storage technology. One may ask: why all this unnecessary indirection? Basically, here we have the Push/Pull decoupling realized. This gave us many advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sensors only need “one IP-address to send to”&lt;/li&gt;
&lt;li&gt;Data Collectors can be optimized for their purpose&lt;/li&gt;
&lt;li&gt;The Whale API provides a thin interface while still allowing transfer of bulk data&lt;/li&gt;
&lt;li&gt;The Whale API also provides “last/current” values, so a quick pass-through for near-realtime data&lt;/li&gt;
&lt;li&gt;Harvesters can run at their own pace/schedule&lt;/li&gt;
&lt;li&gt;The SE Platform can be deployed anywhere, in Test, Production phases and build-up its data&lt;/li&gt;
&lt;li&gt;Development and testing can be done locally, on a development laptop even&lt;/li&gt;
&lt;li&gt;Data Collectors provide bulk-data from “time zero” so when moving/migrating SE servers or re-architecting ETL or Calibration algorithms we can re-bootstrap from “time-zero”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More details can be found within the ever-evolving &lt;a href=&#34;http://smartplatform.readthedocs.io/en/latest/api.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Smart Platform Technical documentation&lt;/a&gt;
. As said, we are in the process of migration. Basically moving all software from a single &lt;a href=&#34;https://github.com/Geonovum/smartemission&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SE GitHub repo at Geonovum&lt;/a&gt;
 to our new &lt;a href=&#34;https://github.com/smartemission&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GitHub organization&lt;/a&gt;
 and &lt;a href=&#34;https://hub.docker.com/r/smartemission/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SE DockerHub&lt;/a&gt;
, so look into the latter for the current/upcoming status.&lt;/p&gt;
&lt;p&gt;So within this Emit I tried to depict how sensor-data “gets into the platform without overwhelming it”. So the Harvesters keep on Harvesting, but what next? Like Neil Young sings in Harvest: “Dream up, dream up, let me fill your cup. With the promise of a man.” That is, I promise a next Emit #5 on After The Goldrush, sorry After The Harvest.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Emit #3 – Things are Moving</title>
      <link>https://justobjects.nl/emit-3/</link>
      <pubDate>Fri, 16 Feb 2018 23:03:57 +0000</pubDate>
      
      <guid>https://justobjects.nl/emit-3/</guid>
      <description>
        
          &lt;p&gt;This is Emit #3, in a &lt;a href=&#34;https://justobjects.nl/categories/smartemission/&#34;&gt;series of blog-posts around the Smart Emission Platform&lt;/a&gt;
, an Open Source software component framework that facilitates the acquisition, processing and (OGC web-API) unlocking of spatiotemporal sensor-data, mainly for Air Quality. In &lt;a href=&#34;https://justobjects.nl/emit-1/&#34;&gt;Emit #1&lt;/a&gt;
, the big picture of the platform was sketched. Subsequent Emits will detail technical aspects of the SE Platform. “Follow the data” will be the main trail loosely adhered to.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/01/arch-big-picture.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;Three weeks ago since &lt;a href=&#34;https://justobjects.nl/emit-2/&#34;&gt;Emit #2&lt;/a&gt;
. A lot of Things have been happening since:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;went to &lt;a href=&#34;https://www.thethingsnetwork.org/conference/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;The Things Conference&lt;/a&gt;
, all about &lt;a href=&#34;https://www.thethingsnetwork.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;building a LoRaWAN network&lt;/a&gt;
 with an open global community.&lt;/li&gt;
&lt;li&gt;started at Dutch Kadaster to migrate the Smart Emission Platform  into the &lt;a href=&#34;https://www.pdok.nl/en/about-pdok&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Dutch National GDI PDOK&lt;/a&gt;
.&lt;/li&gt;
&lt;li&gt;Elaborated the &lt;a href=&#34;http://www.opengeospatial.org/standards/sensorthings&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OGC SensorThings API&lt;/a&gt;
 (STA) to see if it can replace &lt;a href=&#34;http://www.opengeospatial.org/standards/sos&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OGC Sensor Observation Service&lt;/a&gt;
 (SOS).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A lot to expand on. Will try to briefly summarize on The Things Conference, LoRA and LoRaWAN and save the other tech for later Emits.&lt;/p&gt;
&lt;p&gt;LoRA and LoRaWAN may sound like a sidestep, but are very much related to for example building a network of Air Quality and other environmental sensors. When deploying such sensors two issues always arise:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;power: need continuous electricity to keep sensors and their computing boards powered&lt;/li&gt;
&lt;li&gt;transmission: need cabled Internet, WIFI or cellular data to transmit sensor-data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In short, LoRa/LoRaWAN (LoRa=Long Range) is basically a wireless RF technology for long-&lt;wbr /&gt;range, low-power and low-throughput communications. You may find many references on the web like from the &lt;a href=&#34;https://www.lora-alliance.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;LoRa Alliance&lt;/a&gt;
 and &lt;a href=&#34;https://www.semtech.com/technology/lora&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SemTech&lt;/a&gt;
. There is lots of buzz around LoRa. But just like the, &lt;a href=&#34;https://wirelessleiden.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Wireless Leiden project&lt;/a&gt;
, who built a public WIFI network around the city, &lt;a href=&#34;https://www.thethingsnetwork.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;The ThingsNetwork&lt;/a&gt;
 has embraced LoRa technology to build a world-wide open, community-driven, “overlay network”:&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://www.thethingsnetwork.org/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2018/02/ttn-pics.jpg&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;“The Things Network is building a network for the Internet of Things by creating abundant data connectivity, so applications and businesses can flourish. The technology we use is called LoRaWAN and it allows for things to talk to the internet without 3G or WiFi. So no WiFi codes and no mobile subscriptions. It features low battery usage, long range and low bandwidth. Perfect for the internet of things.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You may want to explore the worldwide map of TTN gateways below.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://www.thethingsnetwork.org/map&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2018/02/ttn-map.jpg&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;And &lt;a href=&#34;https://www.thethingsnetwork.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;The ThingsNetwork&lt;/a&gt;
 (TTN) was established in Amsterdam, The Netherlands. As an individual you can extend The Things Network by deploying a &lt;a href=&#34;https://www.thethingsnetwork.org/docs/gateways/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Gateway&lt;/a&gt;
. Via the TTN KickStarter project, I was one of the first backers, already in 2015. The interest was overwhelming, even leading to (Gateway) delivery problems. But a LoRa Gateway to extend TTN is almost a commodity now. You can even &lt;a href=&#34;https://www.thethingsnetwork.org/docs/gateways/start/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;build one yourself&lt;/a&gt;
. TTN is very much tied to the whole “DIY makers movement”. All TTN designs and code (on &lt;a href=&#34;https://github.com/thethingsnetwork&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GitHub&lt;/a&gt;
) are open. Below a global architecture picture from their site.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/02/ttn-arch.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;So TTN organized &lt;a href=&#34;https://www.thethingsnetwork.org/conference/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;their first conference&lt;/a&gt;
, off course in Amsterdam. For three days: it was an amazing success, more than 500 enthousiasts.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://www.thethingsnetwork.org/conference/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2018/02/ttn-conf.jpg&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;The conf was very hands-on with lots of free workshops (with free takeaway hardware). Followed several workshops, which were intense (hardware+software hacking) but always rewarding (blinking green lights!). One to mention in particular (as a Python programmer) was on &lt;a href=&#34;https://pycom.io/product/lopy/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;LoPy&lt;/a&gt;
 a sort of Arduino board, very low cost (around $30), programmable with MicroPython that connects directly to TTN. Within an hour the board was happily sending meteo-data to the TTN.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://twitter.com/justb4/status/959113531449802752&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2018/02/lopy.jpg&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;All in all this conference made me eager to explore more of LoRA with TTN, in particular to explore possibilities for citizen-based sensor-networks for environmental, in particular air quality, data. I am aware that “IoT” has some bad connotations when it comes to security, especially from closed technologies. But IoT is a movement we cannot stop. With and end-to-end open technology like the TTN there is at least the possibility to avoid the “black box”-part and take things in our own hand.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Emit #2 – On Air Quality Sensors</title>
      <link>https://justobjects.nl/emit-2/</link>
      <pubDate>Fri, 26 Jan 2018 23:36:29 +0000</pubDate>
      
      <guid>https://justobjects.nl/emit-2/</guid>
      <description>
        
          &lt;p&gt;This is Emit #2, in a &lt;a href=&#34;https://justobjects.nl/categories/smartemission/&#34;&gt;series of blog-posts around the Smart Emission Platform&lt;/a&gt;
, an Open Source software component framework that facilitates the acquisition, processing and (OGC web-API) unlocking of spatiotemporal sensor-data, mainly for Air Quality. In &lt;a href=&#34;https://justobjects.nl/emit-1/&#34;&gt;Emit #1&lt;/a&gt;
, the big picture of the platform was sketched. Subsequent Emits will detail technical aspects of the SE Platform. “Follow the data” will be the main trail loosely adhered to.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/01/arch-big-picture.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;In this Emit I will talk a bit about sensors as the data flow originates there. Mind, this is not my area of expertise, but much of the SE platform, in particular data processing (ETL),  is built around challenges of dealing with (cheap) sensors for Air Quality.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/01/cheap-aq-sensors.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;Previously I posted about meteo sensors and weather stations (&lt;a href=&#34;https://justobjects.nl/into-the-weather-part-1/&#34;&gt;part 1&lt;/a&gt;
, &lt;a href=&#34;https://justobjects.nl/into-the-weather-part-2-fun-with-raspberry-pi/&#34;&gt;part 2&lt;/a&gt;
, &lt;a href=&#34;https://justobjects.nl/into-the-weather-part-3/&#34;&gt;part 3&lt;/a&gt;
): how to connect a weather station to a Raspberry Pi and publish weather data “to the cloud”.  Now this was relatively easy, due to the availability of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;affordable hardware, like meteo sensors and &lt;a href=&#34;https://www.wunderground.com/weatherstation/buyingguide.asp&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Personal Weather Stations&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Open Source software to collect, store and visualize data like &lt;a href=&#34;http://www.weewx.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;weewx&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;community cloud services like &lt;a href=&#34;https://www.wunderground.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Weather Underground&lt;/a&gt;
 and &lt;a href=&#34;https://wow.metoffice.gov.uk/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Met Office WOW&lt;/a&gt;
 to publish your data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So without any programming, you can be “in business” quite quickly with your personal weather station. In addition: meteo sensors (temperature, humidity, pressure, wind, rain) in general produce relatively “clean/interpretable data”. From a cheap  sensor like the &lt;a href=&#34;https://www.adafruit.com/product/385&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;$9,95 DH22 Temperature Humidity Sensor&lt;/a&gt;
, it is relatively straightforward to read-out temperature and humidity via an Arduino Board or Raspberry Pi. Personal Weather Stations provide even more internal software, so most meteo data comes out in well-known units (Fahrenheit/Celsius, HectoPascal, etc).&lt;/p&gt;
&lt;p&gt;Now this is a whole different story for (cheap) Air Quality sensors.  It begins with the fact that measuring Air Quality indicators like Carbon Monoxide/Dioxide (CO, CO2), Nitrogen Monoxide/Dioxide (NO, NO2), Particulate Matter (PM, i.e. fine dust), Ozone (O3) &lt;em&gt;requires many ways …, with both simple chemical and physical methods and with more sophisticated electronic techniques&lt;/em&gt; (from &lt;a href=&#34;http://www.enviropedia.org.uk/Air_Quality/Measuring.php&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;www.enviropedia.org.uk&lt;/a&gt;
). While techniques for measuring weather data have evolved for maybe hundreds of years, measuring Air Quality is relatively new and mostly within the domain of “chemistry”, and when it comes to sensors, very expensive.&lt;/p&gt;
&lt;p&gt;Recently, this has changed. Not only are governmental environmental agencies facing lowering budgets, but more importantly, a growing number of civilian initiatives want to “take things in their own hand” with respect to measuring Air Quality. As a result more and more affordable/cheap sensors and creative solutions like the &lt;a href=&#34;http://ispex.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;iSpex&lt;/a&gt;
 (measure PM on your iPhone) are entering the market. But given the (chemical) complexity, &lt;a href=&#34;https://www.sciencedirect.com/science/article/pii/S0160412016309989&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;how reliable are these sensors&lt;/a&gt;
? Is the data that they produce readily usable? Like with Celsius to Fahrenheit, is it a matter of providing some simple formula?&lt;/p&gt;
&lt;p&gt;IMHO unfortunately not, but things are getting better as time passes. It also depends on the chemical component you want to measure. For example, Nitrogen Dioxide (NO2) and Ozone (O3) appear to be much harder to measure than CO/CO2. Particulate Matter is a whole story by itself as one deals with, well, “dust” in many shapes and especially sizes (PM10, PM2.5, PM1).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/01/cheapaq.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;There is ample research for the quest of finding cheap AQ sensors: their limitations, reliabilities, particularities. Within the Smart Emission Project, I am working with RIVM, the &lt;a href=&#34;http://rivm.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Dutch National Institute for Public Health and the Environment&lt;/a&gt;
 and the &lt;a href=&#34;https://ec.europa.eu/jrc/en&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;European Union Joint Research Centre&lt;/a&gt;
 (JRC), who both did extensive research on cheap AQ sensors. I know there is much more, but forgot to mention that the main message of this Emit is that &lt;em&gt;&lt;strong&gt;“measuring AQ has far more challenges than measuring weather data”&lt;/strong&gt;&lt;/em&gt;. One of the main conclusions, again IMHO, is that, yes, it is possible (to use cheap AQ sensors), but one has to do &lt;strong&gt;&lt;em&gt;Calibration&lt;/em&gt;&lt;/strong&gt;. Below some links if you are interested in the state of RIVM and EU JRC research:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RIVM – &lt;a href=&#34;http://www.rivm.nl/dsresource?objectid=420a3851-7bae-4a1b-8c57-587422cb21b4&amp;amp;type=org&amp;amp;disposition=inline&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Luchtkwaliteit meten met sensoren&lt;/a&gt;
 (Measuring AQ with Sensors), J. Wesseling et al, sorry in Dutch.&lt;/li&gt;
&lt;li&gt;RIVM – &lt;a href=&#34;https://www.samenmetenaanluchtkwaliteit.nl/apparaten-en-kits&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;AQ Kits&lt;/a&gt;
, from the project/portal &lt;a href=&#34;https://www.samenmetenaanluchtkwaliteit.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;“Together Measuring Air Quality”&lt;/a&gt;
 (sorry Dutch)&lt;/li&gt;
&lt;li&gt;EU JRC – &lt;a href=&#34;https://www.sciencedirect.com/science/article/pii/S092540051500355X&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Field Calibration with Low Cost Sensors&lt;/a&gt;
 – L. Spinelle, M. Gerboles et al&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Though the latter EU JRC report may be a tough read, it is one of the most detailed and concise reports on the application of low-cost AQ sensors, and, I mention it again, different techniques for &lt;em&gt;&lt;strong&gt;Calibration&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;So back to the Smart Emission Platform, what sensors are we using currently? The SE Platform started with the &lt;a href=&#34;http://smartemission.ruhosting.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Smart Emission Nijmegen Project&lt;/a&gt;
, where participating citizens of the City of Nijmegen, would each have their own sensor station that publishes data to the SE Platform.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/01/intemo-sensor-josene5.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;Our partner in the project &lt;a href=&#34;http://www.intemo.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Intemo&lt;/a&gt;
, develops a sensor station, Josene nicknamed ‘Jose’, that measures not only AQ but also sound levels (Noise Pollution) and many other indicators, like light.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/01/smart-emission-citizens-measuring-air-quality-overview-6-638.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;In the course of the project I was fortunate to follow a workshop at &lt;a href=&#34;https://ec.europa.eu/jrc/en&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;EU JRC&lt;/a&gt;
 for their amazing Open Hardware/Software product &lt;a href=&#34;http://www.airsenseur.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;AirSensEUR&lt;/a&gt;
. At the spot each of us assembled a complete ASE, connecting these to standard web services like SOS. The ASE Open Hardware approach also allows it to embed a multitude of sensor types and brands. The workshop had participants from the major national environmental agencies in Europe. In fact RIVM is now &lt;a href=&#34;https://www.samenmetenaanluchtkwaliteit.nl/airsenseur&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;deploying and testing about 18 AirSensEURs&lt;/a&gt;
. Coming year I have the task to deploy five ASEs within The Netherlands. Two of them are already  humming at my desk for testing.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/01/ase-jo.jpg&#34; alt=&#34;AirSensEUR #2 at my desk&#34;&gt;&lt;/p&gt;
&lt;p&gt;Describing AirSensEUR would require a full post by itself. Quoting: &lt;em&gt;“AirSensEUR is an open framework focused on air quality monitoring using low cost sensors. The project started on 2014 from a group of passionate researchers and engineers. The framework is composed by a set of electronic boards, firmware, and several software applications.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/01/airsenseur.jpg&#34; alt=&#34;EU JRC AirSensEURs&#34;&gt;&lt;/p&gt;
&lt;p&gt;So currently (jan 2018) the SE Platform supports both the Josene/Jose and AirSensEUR sensor devices.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://twitter.com/justb4/status/734789344389701632&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2018/01/ase-ws.jpg&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;The Air Quality sensor data coming out of  these devices still requires cleanup and  Calibration. This is part of the data handling within the SE platform, subject of one of the upcoming Emits.&lt;/p&gt;
&lt;p&gt;This post was meant to give you a taste of the challenges around using (cheap) sensors for Air Quality and introduce the two sensor devices (Josene, AirSensEUR) currently used/supported by the Smart Emission Platform. Many details are still to be uncovered. These will be subjects of upcoming Emits.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Emit #1 – Into Spatiotemporal</title>
      <link>https://justobjects.nl/emit-1/</link>
      <pubDate>Sat, 20 Jan 2018 17:02:39 +0000</pubDate>
      
      <guid>https://justobjects.nl/emit-1/</guid>
      <description>
        
          &lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/01/se-google-photo.jpg&#34; alt=&#34;Smart Emission Googled for Photos&#34;&gt;&lt;/p&gt;
&lt;p&gt;One of my new year’s resolutions for 2018 was to “blog more”. Not being very active on the well-known social media: a bit tired of Twitter, never really into Facebook, bit of LinkedIn. &lt;a href=&#34;https://lists.osgeo.org/mailman/listinfo&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSGeo mailing lists&lt;/a&gt;
, &lt;a href=&#34;https://github.com/justb4&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GitHub&lt;/a&gt;
 and &lt;a href=&#34;https://gitter.im/geopython/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Gitter&lt;/a&gt;
 is where you can find me most (thanks Jody, for reminding!). And I read many blogs, especially on my &lt;a href=&#34;https://en.wikipedia.org/wiki/Nexus_10&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Nexus 10&lt;/a&gt;
 tablet and &lt;a href=&#34;https://www.fairphone.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Fairphone 2&lt;/a&gt;
 via the awesome &lt;a href=&#34;https://feedly.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Feedly&lt;/a&gt;
 App. If you have not heard of &lt;a href=&#34;https://feedly.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Feedly&lt;/a&gt;
 (or any other blog-feed collectors), stop here and check out &lt;a href=&#34;https://feedly.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Feedly&lt;/a&gt;
! Most blogs (like this one) provide an &lt;a href=&#34;https://justobjects.nl/feed/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;RSS/Atom-feed&lt;/a&gt;
. Via &lt;a href=&#34;https://feedly.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Feedly&lt;/a&gt;
 you can search/add RSS-feeds and thus create your own “reading table”. My favorite feeds are related to Open Source Geospatial, Python and IoT, like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://planet.osgeo.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;planet.osgeo.org&lt;/a&gt;
 – the OSGeo blog aggregator, must-read if you’re in Open Geospatial&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sgillies.net/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Sean Gillies blog&lt;/a&gt;
 – developer at MapBox a.o. of &lt;a href=&#34;http://toblerity.org/fiona/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Fiona&lt;/a&gt;
, GeoPython, geospatial and personal stuff&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://planetpython.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Planet Python&lt;/a&gt;
 – all Python&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://feedly.com/i/category/Geospatial&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2018/01/feedly.png&#34;
      alt=&#34;Feedly shown in web browser&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;Enough sidestepping, my goal is to share tech around the Open Source &lt;a href=&#34;http://data.smartemission.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Smart Emission Platform&lt;/a&gt;
 (SE Platform) in a series of posts, dubbed  ‘Emits’. This is Emit #1. Since 2014 I have been working on several projects, often through &lt;a href=&#34;https://www.geonovum.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Geonovum&lt;/a&gt;
, and recently via the &lt;a href=&#34;https://ec.europa.eu/jrc/en&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;European Union Joint Research Centre&lt;/a&gt;
 (JRC), that deal with the acquisition, management, web-api-unlocking and visualization of environmental sensor-data, mainly for Air Quality (AQ).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/01/se-google.jpg&#34; alt=&#34;Smart Emission Googled&#34;&gt;&lt;/p&gt;
&lt;p&gt;What made these projects exciting for me is that they brought together many aspects and technologies (read: Open Source projects and &lt;a href=&#34;https://www.osgeo.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSGeo software&lt;/a&gt;
) I had been &lt;a href=&#34;https://justobjects.nl/projects/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;working on&lt;/a&gt;
 through the years. Also, it was the first time I got back into Environmental Chemistry, for which I hold a master’s degree from the University of Amsterdam, &lt;a href=&#34;https://justobjects.nl/writings/publications/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;co-authoring some publications&lt;/a&gt;
, yes, many many years ago.&lt;/p&gt;
&lt;p&gt;So what is the &lt;a href=&#34;http://data.smartemission.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Smart Emission Platform&lt;/a&gt;
 and what makes it exciting and relevant? In a nutshell (&lt;a href=&#34;http://smartplatform.readthedocs.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;read the tech doc here&lt;/a&gt;
): The goal of the SE Platform is to facilitate the acquisition (harvesting)  of sensor-data from a multitude of sensor devices and make this data available via standardized formats and web-APIs (mainly: &lt;a href=&#34;http://www.opengeospatial.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OGC Standards&lt;/a&gt;
) and Viewers. The SE Platform originates, what is now called the &lt;a href=&#34;http://smartemission.ruhosting.nl/visitors/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;award-winning&lt;/a&gt;
, &lt;a href=&#34;http://smartemission.ruhosting.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Smart Emission Nijmegen project&lt;/a&gt;
 in 2015-2017. Quoting from the paper &lt;a href=&#34;http://www.ru.nl/publish/pages/774337/carton_etall_aesop-2015_v11_filling_thefeedback_gap_ofexternalities_insmartcities.pdf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;“Filling the feedback gap of place-related externalities in smart cities”&lt;/a&gt;
{.reference.external} :&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“…we present the set-up of the pilot experiment in project “Smart Emission”,&lt;/em&gt; &lt;em&gt;constructing an experimental citizen-sensor-network in the city of Nijmegen. This project, as part of&lt;/em&gt; &lt;em&gt;research program ‘Maps 4 Society,’ is one of the currently running Smart City projects in the&lt;/em&gt; &lt;em&gt;Netherlands. A number of social, technical and governmental innovations are put together in this&lt;/em&gt; &lt;em&gt;project: (1) innovative sensing method: new, low-cost sensors are being designed and built in the&lt;/em&gt; &lt;em&gt;project and tested in practice, using small sensing-modules that measure air quality indicators,&lt;/em&gt; &lt;em&gt;amongst others NO2, CO2, ozone, temperature and noise load. (2) big data: the measured data forms&lt;/em&gt; &lt;em&gt;a refined data-flow from sensing points at places where people live and work: thus forming a ‘big&lt;/em&gt; _picture’ to build a real-time, in-depth understanding of the local distribution of urban air quality (3)_&lt;em&gt;empowering citizens by making visible the ‘externality’ of urban air quality and feeding this into a&lt;/em&gt; &lt;em&gt;bottom-up planning process: the community in the target area get the co-decision-making control over&lt;/em&gt; &lt;em&gt;where the sensors are placed, co-interpret the mapped feedback data, discuss and collectively explore&lt;/em&gt; &lt;em&gt;possible options for improvement (supported by a Maptable instrument) to get a fair and ‘better’&lt;/em&gt; &lt;em&gt;distribution of air pollution in the city, balanced against other spatial qualities. ….”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/01/se-nijmegen.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;So from the outset the SE Platform is geared towards connecting citizen-owned sensor devices. Many similar programs and initiatives are currently evolving, often under the flag of Citizen Science and Smart Cities. Within the Netherlands, where the SE Nijmegen project originated, the &lt;a href=&#34;http://rivm.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Dutch National Institute for Public Health and the Environment&lt;/a&gt;
 (RIVM) was an active project partner, and still stimulates citizens measuring Air Quality via a project and portal: &lt;a href=&#34;https://www.samenmetenaanluchtkwaliteit.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;“Together Measuring Air Quality”&lt;/a&gt;
. In the context of discussions on Air Quality, climate change and lowering budgets for governmental environmental institutions, citizen-participation becomes more and more relevant. A whole series of blogs could be devoted to social and political aspects of Citizen Science, but I will stick to tech-stuff here.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/01/se-partners.png&#34; alt=&#34;:left&#34;&gt;&lt;/p&gt;
&lt;p&gt;What made working on the SE Nijmegen project exciting and challenging, is that I was given time and opportunity by the project partners (see pic) to not just build a one-time project-specific piece of software, but a reusable set of Open Source components: the Smart Emission Platform ([sources on GitHub][42]).&lt;/p&gt;
&lt;p&gt;Having had some earlier experience within the &lt;a href=&#34;http://sensors.geonovum.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Geonovum SOSPilot project&lt;/a&gt;
 (2014-2015), investigating among others the &lt;a href=&#34;https://en.wikipedia.org/wiki/Sensor_Observation_Service&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OGC Sensor Observation Service&lt;/a&gt;
 to unlock &lt;a href=&#34;http://www.lml.rivm.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;RIVM AQ data (LML)&lt;/a&gt;
, I was aware of the challenges dealing with what can be called &lt;em&gt;&lt;strong&gt;Spatiotemporal (Big) Data&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;The figure below shows The Big Picture of the SE Platform. Red arrows denote the flow of data: originating from sensor devices, going through Data Management (ETL), unlocked via various web-APIs, and finally “consumed” in client-apps and viewers.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/01/arch-big-picture.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;There are many aspects of the SE Platform that can be expanded. These are for upcoming Emits. For now a summary of some of the challenges and applied technologies, to be detailed later:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;raw data from sensors: requires refinement: validation/calibration/aggregation&lt;/li&gt;
&lt;li&gt;dealing with Big Data that is both spatial (location-based) and temporal (time-based)&lt;/li&gt;
&lt;li&gt;applying an &lt;a href=&#34;https://en.wikipedia.org/wiki/Artificial_neural_network&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Artificial Neural Network&lt;/a&gt;
 (ANN) for sensor-data calibration&lt;/li&gt;
&lt;li&gt;databases for Spatiotemporal data: PostGIS and &lt;a href=&#34;https://www.influxdata.com/time-series-platform/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;InfluxDB and TICK Stack&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;applying the &lt;a href=&#34;http://www.stetl.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Stetl framework&lt;/a&gt;
 for all data management (ETL)&lt;/li&gt;
&lt;li&gt;metadata for sensors and sensor networks, always a tough and often avoided subject&lt;/li&gt;
&lt;li&gt;connecting the Open Hardware &lt;a href=&#34;http://www.airsenseur.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;EU JRC AirSensEUR&lt;/a&gt;
 AQ sensor-box to the SE Platform&lt;/li&gt;
&lt;li&gt;using OGC WMS (with Dimensions for Time) and WFS for viewing and downloading sensor data&lt;/li&gt;
&lt;li&gt;is &lt;a href=&#34;http://www.opengeospatial.org/standards/sos&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OGC Sensor Observation Service&lt;/a&gt;
 (SOS) and SWE still viable?&lt;/li&gt;
&lt;li&gt;how powerful is the &lt;a href=&#34;http://www.opengeospatial.org/standards/sensorthings&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OGC SensorThings API&lt;/a&gt;
 (STA) standard?&lt;/li&gt;
&lt;li&gt;deployment with Docker and &lt;a href=&#34;https://docs.docker.com/compose/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Docker Compose&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Docker and host systems monitoring: &lt;a href=&#34;https://prometheus.io/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Prometheus&lt;/a&gt;
 + Grafana&lt;/li&gt;
&lt;li&gt;OGC Services Monitoring with &lt;a href=&#34;http://geohealthcheck.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoHealthCheck&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Visualizations: custom viewers with &lt;a href=&#34;http://heron-mc.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Heron&lt;/a&gt;
/Leaflet/OpenLayers, Grafana dashboards&lt;/li&gt;
&lt;li&gt;from development to test and production: &lt;a href=&#34;https://www.vagrantup.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Vagrant&amp;#43;VirtualBox&lt;/a&gt;
, Ubuntu, Docker&lt;/li&gt;
&lt;li&gt;using component-subsets of the platform for small deployments&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2018/01/docker-monitoring.jpg&#34; alt=&#34;Monitoring SE Docker Containers: Prometheus+cAdvisor+Grafana&#34;&gt;&lt;/p&gt;
&lt;p&gt;A lot of stuff to uncover, hopefully got your interest if you have read all the way to here. Will try to treat one aspect/technology in each subsequent Emit-blog post. And off course the entire &lt;a href=&#34;https://github.com/geonovum/smartemission/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SE platform is Open Source&lt;/a&gt;
 (GNU GPL), so you are free to download and experiment, and maybe even would like to contribute.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Dances with the GeoPython Tribe</title>
      <link>https://justobjects.nl/dances-with-the-geopython-tribe/</link>
      <pubDate>Wed, 13 Jul 2016 23:06:10 +0000</pubDate>
      
      <guid>https://justobjects.nl/dances-with-the-geopython-tribe/</guid>
      <description>
        
          &lt;p&gt;During June 21-24, 2016 I attended the very first &lt;a href=&#34;http://www.geopython.net/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoPython Conference in Basel Switzerland&lt;/a&gt;
. This event was organized by the &lt;a href=&#34;http://www.fhnw.ch/habg/ivgi/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Institute of Geomatics Engineering of the FHNW – University of Applied Sciences and Arts Northwestern Switzerland&lt;/a&gt;
 and &lt;a href=&#34;http://www.meetup.com/PyBasel-Basel-Python-Meetup/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;PyBasel&lt;/a&gt;
, the local Python User Group Northwestern Switzerland. In particular I should mention key-organizer  &lt;a href=&#34;https://www.linkedin.com/in/martinchristen&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Martin Christen&lt;/a&gt;
 from FHNW. He and his team made this into a such a great event that GeoPython 2017 is already planned. About 130 people attended, most from Europe, but also from other continents.  For a TL;DR the conference website &lt;a href=&#34;http://www.geopython.net&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;www.geopython.net&lt;/a&gt;
  provides you all the details: not just the program, but also the “post-processing”: slides, photo’s (&lt;a href=&#34;https://www.flickr.com/photos/144781014@N02/sets/72157667869241134/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;on Flickr&lt;/a&gt;
) etc.  The conference also included time and resources (room, food, beverages) for code-sprints. One of the outcomes of the conference-survey was to establish a public GeoPython mailing list at python.org. Details: to subscribe, send mail to:  &lt;u&gt;&lt;a href=&#34;mailto:GeoPython-subscribe@python.org&#34;&gt;GeoPython-subscribe@python.org&lt;/a&gt;
 &lt;/u&gt;with the keyword “subscribe” in the subject, or use the web-interface: &lt;a href=&#34;https://mail.python.org/mm3/mailman3/lists/geopython.python.org/&#34;&gt;https://mail.python.org/mm3/mailman3/lists/geopython.python.org/&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;float_right&#34;&gt;
  &lt;a href=&#34;http://www.geopython.net/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2016/07/gp1-right.jpg&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;So why a dedicated GeoPython conference? IMHO Python makes more and more  sense for Open Source geospatial development. Not just for custom geo-scripting or glueing with e.g. &lt;a href=&#34;http://gdal.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GDAL&lt;/a&gt;
, or for developing plugins for &lt;a href=&#34;http://docs.qgis.org/testing/en/docs/pyqgis_developer_cookbook/plugins.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;QGIS&lt;/a&gt;
 and &lt;a href=&#34;https://grass.osgeo.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GRASS&lt;/a&gt;
, but more and more as a mature framework language for geospatial processing and  OGC services. The projects &lt;a href=&#34;http://pywps.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;PyWPS&lt;/a&gt;
 and &lt;a href=&#34;http://pycsw.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;PyCSW&lt;/a&gt;
 are an example of the latter. To access OGC services from Python clients there is &lt;a href=&#34;http://geopython.github.io/OWSLib/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OWSLib&lt;/a&gt;
. Upcoming geospatial CMS frameworks like &lt;a href=&#34;http://geonode.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoNode&lt;/a&gt;
 and the very recent  &lt;a href=&#34;http://boundlessgeo.com/exchange/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Boundless Exchange&lt;/a&gt;
, powered by GeoNode, show that Python has the potential to become “the new Java” within the Open Source geospatial world.&lt;/p&gt;
&lt;p&gt;Did I say “Java”? Ok: did almost 20 years of Java, from the very first JDK somewhere in 95/96 (Applets!), through &lt;a href=&#34;https://en.wikipedia.org/wiki/Microsoft_Java_Virtual_Machine&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Sun vs Microsoft over Java&lt;/a&gt;
, from the heaviness of &lt;a href=&#34;https://en.wikipedia.org/wiki/Enterprise_JavaBeans&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;J2EE/EJB&lt;/a&gt;
s, to the lighter weighings of &lt;a href=&#34;https://en.wikipedia.org/wiki/Spring_Framework&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Spring&lt;/a&gt;
, the settling of Java as a backend/server technology. Sidestep: “Java” seems to be a central keyword in my family’s ancestry: &lt;a href=&#34;https://en.wikipedia.org/wiki/Pieter_van_den_Broecke&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;my great-great grandfather was one of the first people in the world to drink a cup of Java&lt;/a&gt;
 and also was one of the first to set foot on the Indonesian island of Java, being on the same ship with &lt;a href=&#34;https://nl.wikipedia.org/wiki/Jan_Pieterszoon_Coen&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Jan Pieterszoon Coen&lt;/a&gt;
. My grandfather lived for 20 years in &lt;a href=&#34;https://en.wikipedia.org/wiki/Malang&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Malang&lt;/a&gt;
 (East Java), working as a civil (Delft) engineer. But I am diverting. The colonial period was by times a violent (by the Dutch) episode in Dutch history, not to be proud of.&lt;/p&gt;

&lt;div class=&#34;float_left&#34;&gt;
  &lt;a href=&#34;http://www.geopython.net/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2016/07/gp2-left.jpg&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;But times they are a-changing, technologies are evolving. I am happy these days to develop in Python (and JavaScript for the web-frontend). Like moving from C/C++ to Java back then, and now from Java to Python, what appeals to me: shortened development times, lesser lines of code  to debug and maintain, ease of deployment, a central repository (&lt;a href=&#34;https://pypi.python.org/pypi&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;PyPi&lt;/a&gt;
) , an independent, vibrant community and possibly more.  But again I am diverting, there are great and stable geo-products in Java like &lt;a href=&#34;http://geoserver.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoServer&lt;/a&gt;
 I use daily. Diversity in programming languages is good. Someone (&lt;a href=&#34;https://www.linkedin.com/in/jodygarnett&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Jody Garnett&lt;/a&gt;
?) posted somewhere about the C-tribe and Java-tribe within the Open Source geospatial world, but can’t find the reference. Back to the subject of this post!&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Like said, the organizing team has done a great job postprocessing the event, to be found via &lt;a href=&#34;http://www.geopython.net/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;www.geopython.net&lt;/a&gt;
 so listing all talks/workshops will not add value here. My overall feeling was that this conference, like the very first &lt;a href=&#34;http://2006.foss4g.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FOSS4G in Lausanne&lt;/a&gt;
 I attended in 2006, was the beginning of a global community. Above all this was also an event where folks with a shared interest met and conversed. Often at conferences one learns and shares the most during breaks and social gatherings. In short: I learned a lot, being a relative newcomer in the geospatial Python community: GeoNode, GeoDjango, Python with Grass, and much more. For example I learned about some general Python technologies like the  &lt;a href=&#34;http://jupyter.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Jupyter Notebook&lt;/a&gt;
 that many presenters used. I found that many (like me) are using &lt;a href=&#34;http://flask.pocoo.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Flask&lt;/a&gt;
 for simple Python webapps/REST APIs. Flask expresses one of features I like about Python: minimalism.&lt;/p&gt;
&lt;p&gt;I am grateful to the organizing team that I could &lt;a href=&#34;http://www.slideshare.net/justb4/geospatial-etl-with-stetl-geopython-2016&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;present Stetl&lt;/a&gt;
 in the last session on the last day, since I submitted past the deadline. Luckily the room was still filled, though the cold beer was tempting just ahead. Mind: during the conference there was a heatwave, above 30 degrees C each day, yes in Switzerland. But all in all this was a very cool conference! Hope to see you at GeoPython 2017!&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Deploying Open Source Geospatial Software – Part 1: Challenges</title>
      <link>https://justobjects.nl/deploying-open-source-geospatial-1/</link>
      <pubDate>Fri, 10 Jun 2016 01:03:36 +0000</pubDate>
      
      <guid>https://justobjects.nl/deploying-open-source-geospatial-1/</guid>
      <description>
        
          &lt;p&gt;My blog has been quiet for some time. As many of us I’ve been busy doing projects, all involving Open Source Geo (OSGeo) software. Partly development, writing software, I love it, but also more and more in “what comes next”: deploying and maintaining “the application” with all of its dependencies. For this I have been using several “deployment strategies” I would like to share.  To be specific and for a TL;DR : over the years I went through custom compiles/installs, Debian/Ubuntu(GIS) package installation, writing Debian/RPM packages, using Puppet (not yet Chef), and now sitting on the &lt;a href=&#34;http://docker.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Docker&lt;/a&gt;
 of the Bay. For many this last sentence may be gibberish, so I will try to sketch some context first. Calling this blog &lt;em&gt;Part 1&lt;/em&gt; also hopefully keeps me attached to the subject and writing as I have very good news. But today, ‘helas’, the bad and the ugly.&lt;/p&gt;
&lt;p&gt;In terms of architecture I always prefer a “best-of-breed” selection of Open Source Geospatial (OSGeo) software components, rather than select a single platform/”Suite”. Nothing against Suites, this is a domain where  Open Source Geo providers, are, literally, “stacking up” against proprietary GIS providers. &lt;a href=&#34;http://boundlessgeo.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Boundless&lt;/a&gt;
, &lt;a href=&#34;http://www.geo-solutions.it/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoSolutions&lt;/a&gt;
, &lt;a href=&#34;http://www.geomajas.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Geomajas&lt;/a&gt;
, to name a few, have great platforms you should check out.  Because I like to dive deep into open source geospatial technology, trying to contribute where possible, even &lt;a href=&#34;https://github.com/justb4&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;writing some myself&lt;/a&gt;
, and having experienced the pros and cons of each individual component, I tend to go for a best fit in a project. For example, for WMS/WFS I may apply &lt;a href=&#34;http://mapserver.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;MapServer&lt;/a&gt;
 or &lt;a href=&#34;http://geoserver.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoServer&lt;/a&gt;
 or &lt;a href=&#34;http://deegree.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;deegree&lt;/a&gt;
, for web clients &lt;a href=&#34;http://openlayers.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenLayers&lt;/a&gt;
 or &lt;a href=&#34;http://leaflet.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Leaflet.&lt;/a&gt;
 As for tiling, well, to be honest, nothing beats &lt;a href=&#34;http://MapProxy.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;MapProxy&lt;/a&gt;
. &lt;a href=&#34;http://gdal.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GDAL&lt;/a&gt;
 , &lt;a href=&#34;http://qgis.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;QGIS&lt;/a&gt;
, &lt;a href=&#34;http://grass.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GRASS&lt;/a&gt;
, &lt;a href=&#34;http://geonetwork-opensource.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoNetwork&lt;/a&gt;
 or &lt;a href=&#34;http://pycsw.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;pycsw&lt;/a&gt;
, I could go on. I am a huge fan of each of these projects, standing on the shoulders of giants when using their products.  It depends on the project’s requirements what I choose.&lt;/p&gt;
&lt;p&gt;But going for a “best-of-breed” architecture, where a selection of Open Source Geospatial components is made, usually extended with custom software and configurations, creates challenges in deployment and maintenance. With the latter I mean: going into production (live) and maintaining the system for an N number of years through modifications and updates. “Getting it working” on a single system will often succeed, possibly after a great number of Google searches,  mailing list threads, then finally getting all components and dependencies installed, often by hand. In some cases even recompiling components, moving libraries, setting PATHs etc. At some point “it all works” but at the same time we enter the “don’t touch it”  phase. We have an “upgrading issue”, but doable on a single system/server.&lt;/p&gt;
&lt;p&gt;To worsen this situation: most professional IT-departments employ a multi-step deployment-strategy. There is not just a single system where the application runs, but several systems, each dedicated to, and named after their phase in deployment. For example, governmental projects within The Netherlands often deploy “OTAP”. &lt;a href=&#34;https://nl.wikipedia.org/wiki/OTAP&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OTAP&lt;/a&gt;
 (in English &lt;a href=&#34;https://en.wikipedia.org/wiki/Development,_testing,_acceptance_and_production&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;DTAP&lt;/a&gt;
) stands for Development, Test, Acceptance, Production. These are, often rigorously, separated computing infrastructures (servers, clients). An application with all its dependencies has to be deployed sequentially on/through each of these phases, sometimes called “pillars” (Dutch: zuilen). In many cases a direct connection between these systems is blocked by the IT-department.  In the simplest case, we have a Test and Production system. Hence, our carefully handcrafted system will have a major challenge getting from one pillar to the next.  But I am not finished yet, we have the “tribal thing” going on in Open Source Geospatial software. Let me expand.&lt;/p&gt;
&lt;p&gt;Diversity is good. Also in software. Over the years Open Source Geospatial software has been developed using a plethora of programming languages. Each came with a variety of deployment systems. I am talking about Java, Python, JavaScript/NodeJS, C/C++, and recently Go. These languages usually have some kind of library and deployment technology. Take Java: for server side components we need to have an “J2EE Container”, in most cases Tomcat, and deploy &lt;em&gt;.war&lt;/em&gt; files (e.g. GeoServer or GeoNetwork). For Python and “CGI-able” components like MapServer, we may just need a CGI-server like Apache or Nginx.  Each of these products deploys in its own way, has its own method for maintaining its configuration and managing updates. In Dutch we call this a “Lappendeken”. The closest translation I found is a “patchwork”, that is to say a diverse deployment and maintenance system. Individual products may provide a “GUI” to manage configurations, stored in diverse ways, from single XML/YAML files to even databases. No way to manage these products in a uniform way. For an outsider, or a cynical proprietary GIS-provider, this all could be labeled, as “Open Source Geospatial (deployment) is a big mess”.&lt;/p&gt;
&lt;p&gt;So dear readers,  sketching this bag of problems, in a positive sense: challenges, how we go from here? As I indicated, there is good news. The answer, my friend, lies in _abstraction. _Abstraction is the way that software technology has always progressed: from machine instructions to assembly and programming languages, through data structures, objects and classes. To components and packages. Coupling and cohesion is another progressing force: maximizing cohesion (do one thing good) and minimizing coupling (reduce dependencies). All in all I have been finding solutions to the above problems using very accessible technologies. In the next two parts I hope to expand on these further as I am picking just two (Deployment Strategies) for now. The first is &lt;a href=&#34;https://wiki.debian.org/Packaging&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Debian Packaging&lt;/a&gt;
 (with some &lt;a href=&#34;https://puppet.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Puppet&lt;/a&gt;
), the second is &lt;a href=&#34;https://www.docker.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Docker&lt;/a&gt;
. In short: what to expect in my next two blogs (Part 2 and Part 3):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Debian Packaging:&lt;/strong&gt;&lt;/em&gt; writing Debian packages to maintain software and configuration in a multi-step deployment environment&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Docker:&lt;/strong&gt;&lt;/em&gt; building/maintaining Docker images but keep control (on host) over their configuration, state and functionality&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also with some telling images, as these are lacking in this post!&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Unlocking Sensor Data – I’ll send an SOS to the world</title>
      <link>https://justobjects.nl/unlocking-sensor-data-sos/</link>
      <pubDate>Thu, 01 Oct 2015 00:42:56 +0000</pubDate>
      
      <guid>https://justobjects.nl/unlocking-sensor-data-sos/</guid>
      <description>
        
          &lt;p&gt;Revealing: the title refers, for the younger readers, to a great 1979-hit by The Police as expanded below. To be played at the loudest possible volume. If you don’t see anything here below try the YouTube link directly:&lt;/p&gt;

&lt;div class=&#34;video&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/MbXWrmQW-OE?controls=1&amp;rel=0&#34; loading=&#34;lazy&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;One of the main aspects that glues the OSGeo-world together are OGC-standards: WMS, WFS, WMTS, WCS and WPS are, at least for most insiders, not hollow acronyms. But who knows about and uses SOS? SOS stands for &lt;em&gt;“Sensor Observation Service”&lt;/em&gt;, &lt;a href=&#34;http://www.opengeospatial.org/standards/sos&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;an OGC standard&lt;/a&gt;
 within the elaborate framework of the &lt;a href=&#34;http://www.opengeospatial.org/projects/groups/sensorwebdwg&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OGC SensorWeb Enablement&lt;/a&gt;
.  SOS provides a standard to publish (SOS-T) and request time-based (meta-) data, mostly from “Sensors”. Its convention is similar to WMS/WFS (GetCapabilities, DescribeSensor, GetObservation etc). Think of weather or air quality measurements over time.&lt;/p&gt;
&lt;p&gt;The Internet of &lt;a href=&#34;https://en.wikipedia.org/wiki/Internet_of_Things&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Things (IoT)&lt;/a&gt;
  is now gaining a strong momentum: &lt;em&gt;“The Internet of Things (IoT) is the network of physical objects or “things” embedded&lt;/em&gt; &lt;em&gt;with electronics, software, sensors, and network connectivity, which enables these  objects to collect and exchange data. The Internet of Things allows objects to be sensed and controlled remotely across existing network infrastructure, creating opportunities for more direct integration between the physical world and computer-based systems, and resulting in improved efficiency, accuracy and economic benefit Each thing is uniquely identifiable through its embedded computing system but is able to interoperate within the existing Internet infrastructure. Experts estimate that the IoT will consist of almost 50 billion  objects by 2020.” (&lt;a href=&#34;https://en.wikipedia.org/wiki/Internet_of_Things&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;from Wikipedia&lt;/a&gt;
).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;So how will SOS and the generic &lt;a href=&#34;http://www.opengeospatial.org/projects/groups/sensorwebdwg&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OGC SensorWeb Enablement&lt;/a&gt;
 will fit into this force? I really don’t know. For many of the OGC-standards like WMS, there are multiple implementations. For SOS  I know about just two: the &lt;a href=&#34;http://52north.org/communities/sensorweb/sos/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;52 North SOS&lt;/a&gt;
, and the &lt;a href=&#34;http://istsos.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;IstSOS&lt;/a&gt;
.  Both of these are powerful with their own strengths and limitations.&lt;/p&gt;
&lt;p&gt;I have worked successfully with the &lt;a href=&#34;http://52north.org/communities/sensorweb/sos/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;52 North SOS&lt;/a&gt;
 within a &lt;a href=&#34;http://sensors.geonovum.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Dutch project on Air Quality&lt;/a&gt;
. All details are in &lt;a href=&#34;http://sospilot.readthedocs.org/en/latest/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;this online document.&lt;/a&gt;
 In essence we are (still) publishing and emitting Dutch National Air Quality data via a SOS server. At the same time, via GeoServer, using WMS-Time &lt;a href=&#34;http://sensors.geonovum.nl/heronviewer/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;via this web-client&lt;/a&gt;
. On the way I found that the OGC-SOS Standard is complex and quite cumbersome in its usage. 52 North has provided &lt;a href=&#34;http://sensorweb.demo.52north.org/sensorwebclient-webapp-stable/api-doc/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;a custom REST interface&lt;/a&gt;
 that appeals to be more usable. But SOS with its inner talk of “Procedures” and “Offerings” remains a Hot Potato.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;http://sensors.geonovum.nl/heronviewer/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2015/10/heron-viewer-o3-ts.jpg&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;So the broader question is more about the OGC SOS standard and the related &lt;a href=&#34;http://www.opengeospatial.org/projects/groups/sensorwebdwg&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OGC SensorWeb Enablement&lt;/a&gt;
  : how we as an OSGeo-community think it should evolve within the expanding world of the IoT? My opinion is that we need to strive for more ease-of-use. SOS-as-standard is an academic challenge. A window to the future may be the OGC-effort initiated by Steve Liang: the SensorThings API not only provides a simplification from the original  &lt;a href=&#34;http://www.opengeospatial.org/projects/groups/sensorwebdwg&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OGC SensorWeb Enablement&lt;/a&gt;
 but also a modern way of community-based cooperation of standards making via GtiHub: &lt;a href=&#34;http://ogc-iot.github.io/ogc-iot-api/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;http://ogc-iot.github.io/ogc-iot-api&lt;/a&gt;
. Time will tell, a message in a bottle will also eventually arrive.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>JPEG is Dead, Long Live JPEG!</title>
      <link>https://justobjects.nl/jpeg-is-dead-long-live-jpeg/</link>
      <pubDate>Thu, 21 May 2015 23:31:46 +0000</pubDate>
      
      <guid>https://justobjects.nl/jpeg-is-dead-long-live-jpeg/</guid>
      <description>
        
          &lt;p&gt;TL;DR: see &lt;a href=&#34;https://github.com/map5nl/map5/issues/10&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;this GitHub issue&lt;/a&gt;
 for summary (Dutch but the pictures there and Figure 1 tell the story).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2015/05/opentopo-png-vs-jpeg.png&#34; alt=&#34;Figure 1. Image encoding-comparison for MapProxy-tiles&#34;&gt;&lt;/p&gt;
&lt;p&gt;Somewhere around 1995, building my first website, it was already quite a feat to embed images. Non-aware of image-formats I played with (animated!) GIF and JPEG. Naively image-editing I noticed that my JPEGs became worse and worse after each save…I learned quickly about lossless and lossy encodings back then.  Later on came PNG. When I entered the geospatial domain there appeared to be a common convention that JPEG was to be used for arial/satellite images and PNG for rasterized vector renderings. So the years went by and all geo-folks, including me, followed that rule.&lt;/p&gt;
&lt;p&gt;Recently I developed and launched &lt;a href=&#34;https://map5.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Map5.nl&lt;/a&gt;
: a cloud service for topographic maps mostly made with Dutch Open Geo-data. See my previous post &lt;a href=&#34;https://justobjects.nl/tales-from-topographic-lowlands/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Tales from the Topographic Lowlands&lt;/a&gt;
 how this service evolved.  After quite some research I finally settled on an Open Source geo-stack with &lt;a href=&#34;http://gdal.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GDAL&lt;/a&gt;
, &lt;a href=&#34;http://mapserver.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;MapServer&lt;/a&gt;
 and &lt;a href=&#34;http://mapproxy.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;MapProxy&lt;/a&gt;
 on &lt;a href=&#34;http://www.ubuntu.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ubuntu&lt;/a&gt;
. For raster-map serving this appeared to be a golden combination.  The full stack, including pre-processing of TIFF-files (and some PNGs) is depicted below. The arrows denote the flow of data.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2015/05/geostack11.png&#34; alt=&#34;Figure 2. Map5.nl dataflow for Raster data serving&#34;&gt;&lt;/p&gt;
&lt;p&gt;In a later post I will dive more into the details of this architecture. For now I should explicitly mention the work of &lt;a href=&#34;https://www.linkedin.com/in/janwillemvanaalst&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Jan-Willem van Aalst&lt;/a&gt;
, who designed the &lt;a href=&#34;http://opentopo.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenTopo-related maps&lt;/a&gt;
 provided on &lt;a href=&#34;https://map5.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Map5.nl&lt;/a&gt;
 using &lt;a href=&#34;http://qgis.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;QGIS&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;But this post is about JPEG and how/why I found it needs revival in the context of raster-data preparation and serving. I explicitly mention ‘preparation’ as JPEG was applied at two steps within the stack shown in Figure 2.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JPEG Step 1 – Encoding in GeoTIFF&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Within the &lt;a href=&#34;http://www.nlextract.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;NLExtract project&lt;/a&gt;
 I was already preprocessing historical maps from PNG (with world files) to GeoTIFF. At some point I found out that GeoTIFF, as a container-image format, supports multiple  image-encodings. Using JPEG encoding it appeared that the resulting GeoTIFF files were much smaller (about 50%)  without hardly any loss in image quality. For the OpenTopo layers, I devised &lt;a href=&#34;https://github.com/opengeogroep/NLExtract/blob/master/opentopo/bin/topotrans.sh&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;this shell-script&lt;/a&gt;
 to create GeoTIFFs ready to be served by any WMS-server. Without going into details of the script, this line, using &lt;a href=&#34;http://www.gdal.org/gdal_translate.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;gdal_translate&lt;/a&gt;
, does the actual JPEG-encoding:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gdal_translate -b 1 -b 2 -b 3 -of GTiff  
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt; -co TILED=YES  
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt; -co PROFILE=Geotiff -co COMPRESS=JPEG  
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt; -co JPEG_QUALITY=95  
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt; -co PHOTOMETRIC=YCBCR -co BLOCKXSIZE=512 -co BLOCKYSIZE=512  
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt; -a\_srs EPSG:28992 $src\_tif $dst_tif
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Later on, I happily noticed, that others, like the great &lt;a href=&#34;http://blog.cleverelephant.ca/2015/02/geotiff-compression-for-dummies.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Paul Ramsey also advertised JPEG encoding in GeoTIFF&lt;/a&gt;
. So JPEG lived up here.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JPEG Step 2 – Encoding in WMS and Tiles&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Still within the rest of the geo-stack used for actual map serving with the MapServer/MapProxy combo I was still obeying the old rule to use PNG for serving non-arial/satellite images. I struggled and tested endless variations in configuration settings for PNG. My goal was to serve small tiles with just enough quality blazingly fast.  Now PNG has many options, but broadly put one has to make a choice between PNG24 (24 bits) or PNG8 (8 bits, 256 colors). The latter uses a colormap encoding which for the rich color variations of the OpenTopo and coloured hillshading layers had quite noticeable degraded image quality. PNG24 on the other hand rendered great tiled images but with the penalty of significant tile-sizes. A &lt;a href=&#34;http://en.wikipedia.org/wiki/Catch-22_%28logic%29&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Catch-22 situation&lt;/a&gt;
 … Enter JPEG. Configuring MapProxy to serve JPEG-tiles gave much better results but needed some tweaking:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;use at least faktor 90 JPEG-compression (also in MapServer)&lt;/li&gt;
&lt;li&gt;disable meta-tiling and buffering, i.e. request 256×256 JPEG maps from the MapServer source&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So some excerpts from the MapProxy config:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;opentopo_file_cache:
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;  grids: [geonovum_grid, opentopo_extent_grid]
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;  sources: [opentopo_wms]
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;  format: image/jpeg
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;  meta_buffer: 0
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;  meta_size: [1,1]
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt; opentopo_wms:
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;  type: wms
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;  req:
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;    url: http://ms.HOST_URL/go?
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;    layers: opentopo
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;    format: image/jpeg
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;    transparent: false
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;  coverage:
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;    bbox: [10000.000,299995.559,279997.956,625000.000]
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;    srs: &amp;#39;EPSG:28992&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This gave optimal results. JPEG tiles were around 4.5 times as small as PNG24. See the results in Figure 1 above. For the &lt;a href=&#34;http://app.map5.nl/nltopo/?base_layer=relief_struct&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Hillshading layer&lt;/a&gt;
 the differences were striking especially when zoomed-in. See Figure 3 below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2015/05/relief_struct-png-vs-jpeg.png&#34; alt=&#34;Figure 3. Tiles and filesizes for different image encodings. Click image for full picture.&#34;&gt;&lt;/p&gt;
&lt;p&gt;So my choice was to settle for JPEG for the topographic and hillshading maps. You can browse all Map5.nl layers in the &lt;a href=&#34;http://app.map5.nl/nltopo/&#34; target=&#34;_blank&#34;&gt;NLTopo App&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So yes, JPEG seems the most optimal for these type of map-layers, but am I missing something? Some proponed:  &lt;em&gt;“Yes, but JPEG has no transparency nor alpha-channel”&lt;/em&gt;. Hmm, true, but does this matter in most modern web-clients like &lt;a href=&#34;http://openlayers.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenLayers&lt;/a&gt;
 or &lt;a href=&#34;http://leaflet.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Leaflet&lt;/a&gt;
? From what I observed, JPEG-layers will happily obey opacity-settings in these web-clients. For example, Figure 4 below shows the national Dutch Topographic map overlayed with the Map5.nl hillshading layer.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2015/05/kadaster-top25-relief-struct.jpg&#34; alt=&#34;Figure 4 &amp;#8211; Dutch 1:25000 raster map transparently overlayed with Map5.nl JPEG hillshading layer&#34;&gt;&lt;/p&gt;
&lt;p&gt;So what to conclude? Basically the title of this post should say it. Further I would again like to acknowledge Jan-Willem van Aalst for his outstanding work on OpenTopo maps and Frank Steggink for making the basic hillshading map from the free Dutch Lidar- pointcloud-data (&lt;a href=&#34;http://www.ahn.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;AHN2&lt;/a&gt;
). And further the developers of MapServer and MapProxy, what an awesome combo. Even without pre-tiling maps are served blazingly fast! I am really fond of the Hillshading map. The Netherlands, known to be “flatland”, can now reveal also its past. See for example figure 5 below, a &lt;a href=&#34;http://app.map5.nl/nltopo/#rd/relief_struct/12/175799.7/477431.2&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Roman Fort&lt;/a&gt;
 from about 2000 years ago!&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;http://app.map5.nl/nltopo/#rd/relief_struct/12/175799.7/477431.2&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2015/05/relief_struct_speuld_romfort.png&#34;
      alt=&#34;Figure 5 &amp;#8211; Contours from a Roman Fort near Speuld&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;


        
      </description>
    </item>
    
    <item>
      <title>3D Geospatial – Open Standards – v0</title>
      <link>https://justobjects.nl/3d-geospatial-open-standards-v0/</link>
      <pubDate>Thu, 29 Jan 2015 14:06:51 +0000</pubDate>
      
      <guid>https://justobjects.nl/3d-geospatial-open-standards-v0/</guid>
      <description>
        
          &lt;p&gt;This is my evolving overview of 3D Geospatial Open Standards with a focus on web technology: services, HTML5, WebGL. These are notes I keep within &lt;a href=&#34;http://evernote.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Evernote&lt;/a&gt;
 as part of the 3D Geospatial Notebook whose public link is: &lt;a href=&#34;https://www.evernote.com/pub/justb4ever/3d-geospatial&#34;&gt;https://www.evernote.com/pub/justb4ever/3d-geospatial&lt;/a&gt;. For sure, resources are missing, let me know. These notes are synced from Evernote using &lt;a href=&#34;http://zapier.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Zapier&lt;/a&gt;
, so formatting is a bit messy, sorry for that, though I completely revised this blog on Jan 30, 2015.&lt;/p&gt;
&lt;p&gt;The presentations by &lt;a href=&#34;https://twitter.com/emmanuel_belo&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Emanuel Belo&lt;/a&gt;
 (&lt;a href=&#34;http://www.camptocamp.com/en/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Camp2Camp&lt;/a&gt;
, links below) are an excellent start to get a global overview. He mentions the following categories of 3D standards and their organizations:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Geo: OGC&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3D Portrayal Services (Proposals: WVS WMS-Like &amp;amp; W3DS WFS-Like) (Just: Now 3DPS)&lt;/li&gt;
&lt;li&gt;KML – XML/COLLADA&lt;/li&gt;
&lt;li&gt;CityGML – representation, storage, and exchange&lt;/li&gt;
&lt;li&gt;CZML (AGI/Cesium) ?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Geo: OSGeo&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TMS (Cesium Terrain Server z.B)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Web: Web3d&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;X3D – Extensible 3D Graphics&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Graphics: Khronos Group&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;COLLADA – eXchange / interoperability&lt;/li&gt;
&lt;li&gt;glTF – graphic language Transmission Format&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Other&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TopoJSON&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the short time I am spending within the 3D domain I think another categorization could be 3D Web Services Standards and 3D Content/Format Standards. A lot of focus is usually on the latter. Within 3D Content/Format Standards my view is that there are the sub-categories based on stages within a 3D rendering pipeline, i.e. from raw source data like CityGML up to 3D-scene encodings like COLLADA and glTF. I see “Terrain” as a separate content category with encodings like height maps and TINs.&lt;/p&gt;
&lt;p&gt;I think/hope that 3D Web Services will gain importance: services to request Content in various encodings plus Terrain data. Techniques like tiling (TMS/WMTS) are already very common within the geospatial world. With the latest developments in vector-tiling I see much potential, especially for terrain and textures (raster) draped on a terrain. Streaming as in video streaming, is not common within the geospatial world but may become of use especially in HTML5 apps (via web sockets?).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;General&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The following presentations by Emanuel Belo from Camp2Camp hit the nail on the head. The content lives up to the title.&lt;/p&gt;
&lt;p&gt;Two versions available, video and slides from FOSS4G 2013, Nottingham (missed that unfortunately) and a later 2014 version.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=9CgU0zs8DlU&#34;&gt;https://www.youtube.com/watch?v=9CgU0zs8DlU&lt;/a&gt; 3D Web Services And Models For The Web: Where Do We Stand? Belo FOSS4G13&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.slideshare.net/camptocamp/3-d-web-services-and-models-for-the-web&#34;&gt;http://www.slideshare.net/camptocamp/3-d-web-services-and-models-for-the-web&lt;/a&gt; Belo – ditto slides [1]&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.geospatialworldforum.org/2014/presentation/geo3d/Emmanuel%20Belo%20M.pdf&#34;&gt;http://www.geospatialworldforum.org/2014/presentation/geo3d/Emmanuel%20Belo%20M.pdf&lt;/a&gt; Belo – ditto 2014 version slides&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Open Geospatial Consortium – OGC&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For open geospatial standards the Open Geospatial Consortium, OGC, is the first standards body to look at. Their standards&lt;br&gt;
are often aligned with corresponding ISO standards and more recently OGC started collaborating more closely with W3C.&lt;/p&gt;
&lt;p&gt;At least two Standards Working Groups (WSGs) are dedicated to 3D. The more established 3D Information Management (3DIM, CityGML!)) and the probably lesser known 3D Portrayal SWG.&lt;/p&gt;
&lt;p&gt;It should be noted and credited that most of the OGC 3D standards came out of the German &lt;a href=&#34;http://www.gdi-3d.de&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GDI-DE&lt;/a&gt;
 project.&lt;br&gt;
At this moment (Jan 2015) two main OGC standards are of importance for 3D: CityGML and the draft standard for 3D Portrayal web services: 3DPS.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;OGC – 3D Information Modeling – CityGML&lt;/strong&gt;&lt;/em&gt;&lt;br&gt;
&lt;em&gt;“CityGML is a common information model and XML-based encoding for the representation, storage, and exchange of virtual 3D city and landscape models. CityGML provides a standard model and mechanism for describing 3D objects with respect to their geometry, topology, semantics and appearance, and defines five different levels of detail. Included are also generalization hierarchies between thematic classes, aggregations, relations between objects, and spatial properties. CityGML is highly scalable and datasets can include different urban entities supporting the general trend toward modeling not only individual buildings but also whole sites, districts, cities, regions, and countries.”&lt;/em&gt;&lt;br&gt;
&lt;a href=&#34;http://www.citygml.org&#34;&gt;http://www.citygml.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SWG: &lt;a href=&#34;http://www.opengeospatial.org/projects/groups/3dimwg&#34;&gt;http://www.opengeospatial.org/projects/groups/3dimwg&lt;/a&gt; – 3D Information Management (3DIM) Domain Working Group&lt;br&gt;
CityGML: &lt;a href=&#34;http://www.opengeospatial.org/standards/citygml&#34;&gt;http://www.opengeospatial.org/standards/citygml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OGC candidate 3D Standards | GeoConnexion&lt;br&gt;
&lt;a href=&#34;http://www.geoconnexion.com/articles/ogc-candidate-3d-standards&#34;&gt;http://www.geoconnexion.com/articles/ogc-candidate-3d-standards&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;http://www.w3ds.org/doku.php&#34;&gt;http://www.w3ds.org/doku.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;OGC – 3D Web Services – 3D Portrayal&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;SWG: &lt;a href=&#34;http://www.opengeospatial.org/projects/groups/3dpswg&#34;&gt;http://www.opengeospatial.org/projects/groups/3dpswg&lt;/a&gt; – 3D Portrayal SWG.&lt;br&gt;
Note the W3DS, WVS, WTS and WPVS are now all obsolete since they have been merged into a single web service standard: the 3D Portrayal Service (3DPS).&lt;/p&gt;
&lt;p&gt;A draft version 1.0.0 is now (January 2015) out for public comment within OGC:&lt;br&gt;
&lt;a href=&#34;http://www.opengeospatial.org/standards/requests/130&#34;&gt;http://www.opengeospatial.org/standards/requests/130&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“The 3D portrayal standard (3DPS) is an OGC service implementation specification targeting the delivery of 3D portrayals in an interoperable fashion. … When client and server(s) involved share a common set of capabilities, it becomes possible to view and analyze 3D geoinformation from diverse sources in a combined manner. …. The 3DPS combines the essential parts of the suggested W3DS and WVS into one common interface.”&lt;/em&gt; and&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“ The Open Geospatial Consortium (OGC) and the Web3D Consortium have both been working to address the need for interoperability, as well as the content challenges of volume, access speed, and diversity of devices. The Web3D Consortium has focused on open standards for real-time 3D visualization, including streaming, and their members developed a Geospatial Component extension for X3D. The OGC has focused on developing a service interface to provide interoperable access to 3D geospatial data servers. In 2012, a group of OGC members, building on work done in both organizations, completed the 3D Portrayal Interoperability Experiment (3DPIE) to develop and evaluate best practices for 3D portrayal services.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“The candidate OGC 3D Portrayal Service Standard is designed to support both client and server side rendering. For client-side rendering, the client requests a 3D model from the server. The server extracts the requested model from the 3D geodata server and generates a 3D scene graph including geometry and textures. Depending on the server’s capabilities, data formats such as X3D, KML and COLLADA can be used to retrieve the scene graph. The rendering of the scene is done on the client side. In a web client, X3DOM and/or XML3D can be used to integrate the scene into an immersive HTML5 experience. However, there are no fixed format requirements, opening the service for other technologies such as JSON-based glTF. For server side rendering, the client passes the requested content and view parameters to the server. The server then generates layered image depictions of the 3D environment for display on the client. In either scenario, the client’s user can query and navigate through the 3D content.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Link to 3DPS v1.0.0 for public review on jan 29, 2015:&lt;/p&gt;
&lt;p&gt;Public comment request: &lt;a href=&#34;http://www.opengeospatial.org/standards/requests/130&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.opengeospatial.org/standards/requests/130&#34;&gt;http://www.opengeospatial.org/standards/requests/130&lt;/a&gt;&lt;/a&gt;&lt;br&gt;
Direct download 3DPS 1.0.0 draft: &lt;a href=&#34;https://portal.opengeospatial.org/files/61884&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://portal.opengeospatial.org/files/61884&#34;&gt;https://portal.opengeospatial.org/files/61884&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For history reasons some notes kept on W3DS and WVS below.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A &lt;strong&gt;Web 3D Service (W3DS)&lt;/strong&gt; is a portrayal service for three-dimensional geodata such as landscape models, city models, textured building models, vegetation objects, and streetfurniture. Geodata is delivered as scenes that are comprised of display elements, optimized for efficient real time rendering at high frame rates. 3D Scenes can be interactively displayed and explored by internet browsers with 3D plug-ins, or loaded into virtual globe applications.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The &lt;strong&gt;Web View Service (WVS)&lt;/strong&gt; is a portrayal service for three-dimensional geodata suchas landscape models, city models, vegetation models, or transportation infrastructure models. A WVS server mainly provides 2D image representing a 3D view on a scene constructed from 3D geodata that is integrated and visualized by the WVS server. In addition to these color images of a 3D scene, a WVS server can advertise and deliver complementary image layers that include geometrical or thematic information: e.g., depth layers, surface normal data, or object id information.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;OGC – 3D Portrayal Interoperability Experiment (3DPIE)&lt;/strong&gt;&lt;/em&gt;&lt;br&gt;
The OGC …. &lt;em&gt;“3D Portrayal Interoperability Experiment (IE) successfully tested and demonstrated different mechanisms for the portrayal, delivery, and exploitation of 3D geodata based on open standards-based formats and services. …approaches for service-based 3D portrayal based on thedrafts for the candidate standards for 3D portrayal, Web 3D Service (W3DS) and WebView Service (WVS).”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Page: &lt;a href=&#34;http://www.opengeospatial.org/projects/initiatives/3dpie&#34;&gt;http://www.opengeospatial.org/projects/initiatives/3dpie&lt;/a&gt;&lt;br&gt;
Report: &lt;a href=&#34;https://portal.opengeospatial.org/files/?artifact_id=49068&#34;&gt;https://portal.opengeospatial.org/files/?artifact_id=49068&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NB this ultimately lead to the development of the 3D Portrayal Standard which merged W3DS and WVS.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Open Source Geospatial Foundation – OSGeo&lt;/strong&gt;&lt;br&gt;
Although &lt;a href=&#34;https://osgeo.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSGeo.org&lt;/a&gt;
 is not a standards body, for years the Tiled Map Service TMS spec is intensively used, probably more than its OGC-counterpart WMTS…&lt;br&gt;
&lt;a href=&#34;http://wiki.osgeo.org/wiki/Tile_Map_Service_Specification&#34;&gt;http://wiki.osgeo.org/wiki/Tile_Map_Service_Specification&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;TMS is finding its use in the 3D landscape not just for tiles containing 2D raster maps to be draped over a terrain, but also more and more as a container for height and (compressed) vector tiles. This is an important development, see e.g. Cesium Terrain Server and its two format-encodings for terrain-tiles:&lt;br&gt;
&lt;a href=&#34;https://github.com/AnalyticalGraphicsInc/cesium/wiki/Cesium-Terrain-Server&#34;&gt;https://github.com/AnalyticalGraphicsInc/cesium/wiki/Cesium-Terrain-Server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;X3D – Web3D&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;“Extensible 3D (X3D) Graphics and Humanoid Animation (H-Anim) include a coordinated set of steadily evolving ISO standards. “&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.web3d.org/standards&#34;&gt;http://www.web3d.org/standards&lt;/a&gt; (mostly X3D, equiv with ISO/IEC 19775 (architecture and abstract capabilities), 19776 (encodings), and 19777 (API)))&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;X3DOM&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;“X3DOM is an adaption of the X3D standard to (X)HTML, ensuring declarative 3D can&lt;/em&gt;&lt;br&gt;
&lt;em&gt;be used inside standards-compliant browser. It aims to support a large browser base and&lt;/em&gt;&lt;br&gt;
&lt;em&gt;decent X3D feature coverage, while working towards a common declarative 3D standard&lt;/em&gt;&lt;br&gt;
&lt;em&gt;in the Declarative 3D community WG at the W3C. The reference implementation is&lt;/em&gt;&lt;br&gt;
&lt;em&gt;maintained by Fraunhofer IGD and available under the open-source license MIT.”&lt;/em&gt;&lt;br&gt;
&lt;a href=&#34;http://www.x3dom.org/&#34;&gt;http://www.x3dom.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WebGL&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://www.khronos.org/webgl/&#34;&gt;https://www.khronos.org/webgl/&lt;/a&gt;&lt;br&gt;
&lt;em&gt;“WebGL is a standard for programming in 3D with the browser as platform. The final&lt;/em&gt;&lt;br&gt;
&lt;em&gt;specification of the standard was published in 2010 and is defined by the Khronos Group,&lt;/em&gt;&lt;br&gt;
&lt;em&gt;a consortium which is also in charge of Open GL, Open CL and OpenGL ES (embedded&lt;/em&gt;&lt;br&gt;
&lt;em&gt;systems). WebGL provide a context into HTML5 canvas that is 3D Computer Graphics&lt;/em&gt;&lt;br&gt;
&lt;em&gt;capable without plug-in.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cesium&lt;/strong&gt;&lt;br&gt;
Although &lt;a href=&#34;http://cesiumjs.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;CesiumJS&lt;/a&gt;
 is mainly a client JavaScript framework based on WebGL and Dojo,  some very useful standards are originating from the project.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cesiumjs.org/data-and-assets/terrain/formats/quantized-mesh-1.0.html&#34;&gt;http://cesiumjs.org/data-and-assets/terrain/formats/quantized-mesh-1.0.html&lt;/a&gt; quantized mesh via TMS – for terrain services based on TINs.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/AnalyticalGraphicsInc/cesium/wiki/CZML-Guide&#34;&gt;https://github.com/AnalyticalGraphicsInc/cesium/wiki/CZML-Guide&lt;/a&gt; – CZML is a JSON schema for describing a time-dynamic graphical scene&lt;/p&gt;
&lt;p&gt;NEW (august 2015) &lt;em&gt;&lt;strong&gt;“3D Tiles”&lt;/strong&gt;&lt;/em&gt; : &lt;a href=&#34;https://cesiumjs.org/2015/08/10/Introducing-3D-Tiles&#34;&gt;https://cesiumjs.org/2015/08/10/Introducing-3D-Tiles&lt;/a&gt;. &lt;em&gt;“3D Tiles are an &lt;a href=&#34;https://github.com/AnalyticalGraphicsInc/3d-tiles&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;open specification&lt;/a&gt;
 for streaming massive heterogeneous 3D geospatial datasets….3D Tiles define a spatial data structure and a set of tile formats designed for 3D and optimized for streaming and rendering. Tiles for 3D models use &lt;a href=&#34;https://www.khronos.org/gltf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;glTF&lt;/a&gt;
, the WebGL runtime asset format developed by Khronos, which the Cesium team heavily contributes to….”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Collada&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;“COLLADA™ defines an XML-based schema to make it easy to transport 3D assets between applications – enabling diverse 3D authoring and content processing tools to be combined into a production pipeline. The intermediate language provides comprehensive encoding of visual scenes including: geometry, shaders and effects, physics, animation, kinematics, and even multiple version representations of the same asset.COLLADA FX enables leading 3D authoring tools to work effectively together to create shader and effects applications and assets to be authored and packaged using OpenGL® Shading Language, Cg, CgFX, and DirectX® FX.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.khronos.org/collada/&#34;&gt;https://www.khronos.org/collada/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;KML&lt;/strong&gt;&lt;br&gt;
Originally from Keyhole/Google, but since years an OGC Standard. May embed Collada.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“Keyhole Markup Language (KML) is an XML notation for expressing geographic annotation and visualization within Internet-based, two-dimensional maps and three-dimensional Earth browsers. KML was developed for use with Google Earth, which was originally named Keyhole Earth Viewer. It was created by Keyhole, Inc, which was acquired by Google in 2004. KML became an international standard of the Open Geospatial Consortium in 2008.[1][2] Google Earth was the first program able to view and graphically edit KML files. “&lt;/em&gt;&lt;br&gt;
Source: &lt;a href=&#34;http://en.wikipedia.org/wiki/Keyhole_Markup_Language&#34;&gt;http://en.wikipedia.org/wiki/Keyhole_Markup_Language&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OGC Standard: &lt;a href=&#34;http://www.opengeospatial.org/standards/kml&#34;&gt;http://www.opengeospatial.org/standards/kml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;3D in KML:&lt;/strong&gt;&lt;/em&gt;&lt;br&gt;
&lt;a href=&#34;https://developers.google.com/kml/documentation/models&#34;&gt;https://developers.google.com/kml/documentation/models&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;http://blog.thematicmapping.org/2008/04/proportional-3d-collada-objects-in-kml.html&#34;&gt;http://blog.thematicmapping.org/2008/04/proportional-3d-collada-objects-in-kml.html&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;http://blog.thematicmapping.org/2008/04/drawing-3d-bars-in-kml.html&#34;&gt;http://blog.thematicmapping.org/2008/04/drawing-3d-bars-in-kml.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;glTF&lt;/strong&gt;&lt;br&gt;
Final stage OpenGL Transmission Format to enable rapid delivery and loading of 3D content by WebGL, OpenGL, and OpenGL ES APIs.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“The “glTF” project aims to define a final stage OpenGL Transmission Format to enable rapid delivery and loading of 3D content by WebGL, OpenGL, and OpenGL ES APIs. glTF together with COLLADA comprise a standards-based content pipeline for rich 3D web and mobile applications. glTF Specification is a work-in-progress from the COLLADA Working Group; it is not an official Khronos-ratified specification yet. It is incomplete and subject to change. The draft specification and related converters and loaders are available on github.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.khronos.org/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://www.khronos.org/&#34;&gt;https://www.khronos.org/&lt;/a&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://www.khronos.org/gltf/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://www.khronos.org/gltf/&#34;&gt;https://www.khronos.org/gltf/&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TopoJSON&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“TopoJSON is an extension of GeoJSON that encodes topology. Rather than representing geometries discretely, geometries in TopoJSON files are stitched together from shared line segments called arcs. TopoJSON eliminates redundancy, offering much more compact representations of geometry than with GeoJSON; typical TopoJSON files are 80% smaller than their GeoJSON equivalents. In addition, TopoJSON facilitates applications that use topology, such as topology-preserving shape simplification, automatic map coloring, and cartograms.”&lt;/em&gt; (i.e. compact TIN-representations!).&lt;br&gt;
&lt;a href=&#34;https://github.com/mbostock/topojson&#34;&gt;https://github.com/mbostock/topojson&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Germany: SIG 3D&lt;/strong&gt;&lt;br&gt;
Germany-based 3D interest group. Started already very early (2002) with 3D geospatial and has a long history. Many useful resources for both standards and implementations can be found via their websites.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“Three-dimensional models of cities and regions play an important role in major applications of architecture, urban planning, surveying, mobile telecommunication or facility management. In the environmental sector 3D city models enable the simulation of noise and exhaust emissions as well as predictions on city climate change affecting a city. Concerning disaster situations like floods, 3D landscape models can help to analyse the affected areas and buildings.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“Since the beginning of 2010 SIG 3D is part of the German Spatial Data Infrastructure (GDI-DE) and coordinates this context the national and international network of 3D activities.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.sig3d.org/&#34;&gt;http://www.sig3d.org/&lt;/a&gt;&lt;br&gt;
Several standards like OGC CityGML W3DS, later 3DPS had their origins here.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The Netherlands: Doorbraak 3D (Breakthrough 3D)&lt;/strong&gt;&lt;br&gt;
3D initiative within The Netherlands as a follow-up on earlier successful 3D projects like the 3D-Pilot: &lt;a href=&#34;http://www.geonovum.nl/documenten/rapport-eindrapportages-3d-pilot-nl-eerste-fase&#34;&gt;http://www.geonovum.nl/documenten/rapport-eindrapportages-3d-pilot-nl-eerste-fase&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As a follow-up (2011) of the 3D-Pilot the public standard CityGML-IMGeo was developed. Basically this standardizes detailed smallscale/detailed topography using and extending CityGML: &lt;a href=&#34;http://www.geonovum.nl/wegwijzer/standaarden/gegevenscatalogus-imgeo-versie-211&#34;&gt;http://www.geonovum.nl/wegwijzer/standaarden/gegevenscatalogus-imgeo-versie-211&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;History of 3D geo in The Netherlands: &lt;a href=&#34;http://www.geonovum.nl/onderwerpen/3d-geo-informatie/historie-3d-geo-informatie-nl&#34;&gt;http://www.geonovum.nl/onderwerpen/3d-geo-informatie/historie-3d-geo-informatie-nl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now (Jan 2015) starting up a next phase called “3D Doorbraak”, with a recent working conference for establishing the 3D roadmap for The Netherlands: &lt;a href=&#34;http://www.geonovum.nl/nieuws/werkconferentie-voor-opstellen-roadmap-3d-doorbraak&#34;&gt;http://www.geonovum.nl/nieuws/werkconferentie-voor-opstellen-roadmap-3d-doorbraak&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The choice of standards plays an important part.&lt;/p&gt;
&lt;p&gt;See also news items via Twitter (#doorbraak3D): &lt;a href=&#34;https://twitter.com/search?q=%23doorbraak3D&amp;amp;src=typd&#34;&gt;https://twitter.com/search?q=%23doorbraak3D&amp;amp;src=typd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;BIM – IFC&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now that geospatial information is obtaining more detail and moving into 3D, integration with standards within the Building and infrastructure industry is one of the most obvious use-cases. Building Information Modelling or BIM is a huge standardization effort within the Building and infrastructure domain.&lt;/p&gt;
&lt;p&gt;Geoff ,”Between The Poles”, Zeiss blogs regularly on BIM and Geospatial: &lt;a href=&#34;http://geospatial.blogs.com/geospatial/bim/&#34;&gt;http://geospatial.blogs.com/geospatial/bim/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;“Building information modeling&lt;/strong&gt; (&lt;strong&gt;BIM&lt;/strong&gt;) is a process involving the generation and management of digital representations of physical and functional characteristics of places. &lt;strong&gt;Building information models&lt;/strong&gt; (&lt;strong&gt;BIMs&lt;/strong&gt;) are files (often but not always in proprietary formats and containing proprietary data) which can be exchanged or networked to support decision-making about a place. Current BIM software is used by individuals, businesses and government agencies who plan, design, construct, operate and maintain diverse physical infrastructures, such as water, wastewater, electricity, gas, refuse and communication utilities, roads, bridges and ports, houses, apartments, schools and shops, offices, factories, warehouses and prisons.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Source: &lt;a href=&#34;http://en.wikipedia.org/wiki/Building_information_modeling&#34;&gt;http://en.wikipedia.org/wiki/Building_information_modeling&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For information exchange the Industry Foundation Classes are put forward.&lt;/p&gt;
&lt;p&gt;“The &lt;em&gt;Industry Foundation Classes (IFC) data model is intended to describe building and construction industry data.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;It is a platform neutral, open file format specification that is not controlled by a single vendor or group of vendors. It is an object-based file format with a data model developed bybuildingSMART (formerly the International Alliance for Interoperability, IAI) to facilitate interoperability in the architecture, engineering and construction (AEC) industry, and is a commonly used collaboration format in Building information modeling (BIM) based projects. The IFC model specification is open and available.[1] It is registered by ISO and is an official International Standard ISO 16739:2013.”&lt;/em&gt;&lt;br&gt;
Source: &lt;a href=&#34;http://en.wikipedia.org/wiki/Industry_Foundation_Classes&#34;&gt;http://en.wikipedia.org/wiki/Industry_Foundation_Classes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More: &lt;a href=&#34;http://www.ifcwiki.org/index.php/Main_Page&#34;&gt;http://www.ifcwiki.org/index.php/Main_Page&lt;/a&gt;&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>3D Geospatial – Free and Open Source Software v0</title>
      <link>https://justobjects.nl/3d-geospatial-foss-v0/</link>
      <pubDate>Wed, 28 Jan 2015 11:52:34 +0000</pubDate>
      
      <guid>https://justobjects.nl/3d-geospatial-foss-v0/</guid>
      <description>
        
          &lt;p&gt;This is my list of FOSS products for 3D Geospatial with a focus on web technology/WebGL and Open Standards. These are notes I keep within Evernote as part of the 3D Geospatial Notebook whose public link is: &lt;a href=&#34;https://www.evernote.com/pub/justb4ever/3d-geospatial&#34;&gt;https://www.evernote.com/pub/justb4ever/3d-geospatial&lt;/a&gt;. This is also the first experiment to auto sync Evernote to WordPress using Zapier, so beware of any glitches in formatting! I am sure I have missed many other great products. Let me know!&lt;/p&gt;
&lt;h3 id=&#34;oslandia&#34;&gt;OSLandia&lt;/h3&gt;
&lt;p&gt;OSLandia from Paris, France  is one of the most active companies contributing to 3D Geospatial FOSS.
&lt;a href=&#34;http://www.oslandia.com/&#34;&gt;http://www.oslandia.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.oslandia.com/postgis-3d-foss4g-video-and-workshop-en.html&#34;&gt;http://www.oslandia.com/postgis-3d-foss4g-video-and-workshop-en.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;– The latest PostGIS and QGIS 3D enhancements presented at &lt;a href=&#34;http://2013.foss4g.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FOSS4G&lt;/a&gt;
 by Oslandia – GIS goes 3D : an OpenSource stack – Olivier Courtin – FOSS4G 2014&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://vimeo.com/106846660&#34;&gt;http://vimeo.com/106846660&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;cesium&#34;&gt;Cesium&lt;/h3&gt;
&lt;p&gt;– General&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“Cesium is a JavaScript library for creating 3D globes and 2D maps in a web browser without a plugin. It uses WebGL for hardware-accelerated graphics, and is cross-platform, cross-browser, and tuned for dynamic-data visualization. Cesium is open source under the Apache 2.0 license. It is free for commercial and non-commercial use.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2015/01/cesium.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cesiumjs.org/&#34;&gt;http://cesiumjs.org/&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;http://cesiumjs.org/presentations/Rendering%20the%20Whole%20Wide%20World%20on%20the%20World%20Wide%20Web.pdf&#34;&gt;http://cesiumjs.org/presentations/Rendering%20the%20Whole%20Wide%20World%20on%20the%20World%20Wide%20Web.pdf&lt;/a&gt; great presentation&lt;/p&gt;
&lt;p&gt;– Cesium Terrain Service Preparation&lt;br&gt;
&lt;a href=&#34;https://github.com/giohappy/gdal2cesium&#34;&gt;https://github.com/giohappy/gdal2cesium&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://github.com/kaktus40/Cesium-GeoserverTerrainProvider&#34;&gt;https://github.com/kaktus40/Cesium-GeoserverTerrainProvider&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;– Creating 3D terrains with Cesium – Bjørn Sandvik&lt;br&gt;
&lt;a href=&#34;http://blog.thematicmapping.org/2014/10/3d-terrains-with-cesium.html&#34;&gt;http://blog.thematicmapping.org/2014/10/3d-terrains-with-cesium.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;– Migrating from Google Earth to Cesium&lt;br&gt;
&lt;em&gt;This is a guest post by Greg Angevine, Founder of &lt;a href=&#34;http://cubecities.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Cube Cities Inc&lt;/a&gt;
. His company has used the Google Earth plugin for years and has recently built impressive work with Cesium (like &lt;a href=&#34;https://twitter.com/CesiumJS/status/552845347484364800&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;this&lt;/a&gt;
)&lt;/em&gt;&lt;br&gt;
&lt;a href=&#34;http://cesiumjs.org/2015/01/27/Migrating-from-Earth-to-Cesium/&#34;&gt;http://cesiumjs.org/2015/01/27/Migrating-from-Earth-to-Cesium/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;– Cesium and OpenLayers3&lt;br&gt;
Cesium has a real focus on (OGC) standards and integrating with software implementing OGC standards. I heard that the Cesium-folks are even proposing additions to OGC 3D standards (CZML? or the very compact terrain tiling using quantized mesh?). That would be great in concert with/as payload for the upcoming 3DPS (3D Portrayal Service) standard.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2015/01/cesium-ol3.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://openlayers.org/ol3-cesium/&#34;&gt;http://openlayers.org/ol3-cesium/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;– My Cesium experiments with Dutch OpenTopo tiles and Top10NL-3D Vector&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2015/01/cesium-just.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://app.nlextract.nl/3d/&#34;&gt;http://app.nlextract.nl/3d/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;– My Cesium experiments with Cesium-OpenLayers3 Integration using Dutch Topo Top10NL-3D Vector&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2015/01/cesium-ol3-just.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://app.nlextract.nl/3d/&#34;&gt;http://app.nlextract.nl/3d/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;tangram&#34;&gt;Tangram&lt;/h3&gt;
&lt;p&gt;From the folks from &lt;a href=&#34;http://mapzen.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;MapZen&lt;/a&gt;
 who make much more cool stuff: &lt;em&gt;“Tangram is a library for rendering 2D &amp;amp; 3D maps with WebGL, using GeoJSON/TopoJSON or binary vector tiles.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2015/01/tangram.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/tangrams/tangram&#34;&gt;https://github.com/tangrams/tangram&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://mapzen.com/tangram&#34;&gt;https://mapzen.com/tangram&lt;/a&gt; (demo)&lt;/p&gt;
&lt;h3 id=&#34;d3js&#34;&gt;D3JS&lt;/h3&gt;
&lt;p&gt;– General&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2015/01/d3js.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“ &lt;strong&gt;D3.js&lt;/strong&gt; is a JavaScript library for manipulating documents based on data. &lt;strong&gt;D3&lt;/strong&gt; helps you bring data to life using HTML, SVG and CSS. D3’s emphasis on web standards gives you the full capabilities of modern browsers without tying yourself to a proprietary framework, combining powerful visualization components and a data-driven approach to DOM manipulation.”&lt;/em&gt;&lt;br&gt;
&lt;a href=&#34;http://d3js.org/&#34;&gt;http://d3js.org/&lt;/a&gt; –&lt;/p&gt;
&lt;p&gt;– Kind of 3D with D3 – Maps for the Web&lt;br&gt;
&lt;a href=&#34;http://www.web-maps.com/gisblog/?p=1370&#34;&gt;http://www.web-maps.com/gisblog/?p=1370&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;– Creating Charts and Legends for 3D Atlas Maps – A Mashup of D3.js, osgEarth, and the Chromium Embedded Framework — Raimu&lt;br&gt;
&lt;a href=&#34;http://vimeo.com/106234276&#34;&gt;http://vimeo.com/106234276&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;postgis&#34;&gt;PostGIS&lt;/h3&gt;
&lt;p&gt;PostGIS has many 3D facilities. Check these out.&lt;/p&gt;
&lt;p&gt;– Lidar/Pointclouds in PostGIS:
&lt;a href=&#34;https://github.com/pgpointcloud/pointcloud&#34;&gt;https://github.com/pgpointcloud/pointcloud&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;http://workshops.boundlessgeo.com/tutorial-lidar/&#34;&gt;http://workshops.boundlessgeo.com/tutorial-lidar/&lt;/a&gt; (tutorial)&lt;br&gt;
&lt;a href=&#34;http://s3.cleverelephant.ca/foss4gna2013-pointcloud.pdf&#34;&gt;http://s3.cleverelephant.ca/foss4gna2013-pointcloud.pdf&lt;/a&gt; (paul ramsey slides)&lt;br&gt;
&lt;a href=&#34;http://boundlessgeo.com/2013/11/manage-lidar-postgis/&#34;&gt;http://boundlessgeo.com/2013/11/manage-lidar-postgis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;– TIN Support&lt;br&gt;
&lt;a href=&#34;https://smathermather.wordpress.com/2013/12/18/2-5d-tins-in-postgis/&#34;&gt;https://smathermather.wordpress.com/2013/12/18/2-5d-tins-in-postgis/&lt;/a&gt; and&lt;br&gt;
&lt;a href=&#34;https://github.com/smathermather/postgis-etc/blob/master/3D/AsTin.sql&#34;&gt;https://github.com/smathermather/postgis-etc/blob/master/3D/AsTin.sql&lt;/a&gt; – create TINs with &lt;a href=&#34;http://postgis.net/docs/ST_DelaunayTriangles.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;ST_DelaunayTriangles&lt;/a&gt;
&lt;br&gt;
&lt;a href=&#34;http://www.oslandia.com/full-spatial-database-power-in-2-lines-en.html&#34;&gt;http://www.oslandia.com/full-spatial-database-power-in-2-lines-en.html&lt;/a&gt;&lt;br&gt;
also check: GRASS: &lt;a href=&#34;http://grass.osgeo.org/grass70/manuals/addons/v.delaunay3d.html&#34;&gt;http://grass.osgeo.org/grass70/manuals/addons/v.delaunay3d.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;– X3D Generation&lt;br&gt;
&lt;a href=&#34;http://postgis.net/docs/ST_AsX3D.html&#34;&gt;http://postgis.net/docs/ST_AsX3D.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;– 3ddb for PostGIS (CityGML)&lt;br&gt;
&lt;a href=&#34;http://www.3dcitydb.org/&#34;&gt;http://www.3dcitydb.org/&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://github.com/3dcitydb&#34;&gt;https://github.com/3dcitydb&lt;/a&gt; GitHub&lt;br&gt;
&lt;a href=&#34;http://www.3dcitydb.org/3dcitydb/fileadmin/downloaddata/3dcitydb-v2_0_6-postgis-tutorial.pdf&#34;&gt;http://www.3dcitydb.org/3dcitydb/fileadmin/downloaddata/3dcitydb-v2_0_6-postgis-tutorial.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;– A New Dimension To PostGIS : 3D – &lt;a href=&#34;http://2013.foss4g.org/conf/programme/people/250/index.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Olivier Courtin&lt;/a&gt;
 (Oslandia) with &lt;a href=&#34;http://2013.foss4g.org/conf/programme/people/139/index.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Hugo Mercier&lt;/a&gt;
 (Oslandia)&lt;br&gt;
&lt;a href=&#34;http://2013.foss4g.org/conf/programme/presentations/7/index.html&#34;&gt;http://2013.foss4g.org/conf/programme/presentations/7/index.html&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;http://www.slideshare.net/SimeonNedkov/postgis-3d-implementation&#34;&gt;http://www.slideshare.net/SimeonNedkov/postgis-3d-implementation&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://www.youtube.com/watch?v=tQbE6B8JaHI&#34;&gt;https://www.youtube.com/watch?v=tQbE6B8JaHI&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;– PostGIS and CGAL
CGAL &lt;a href=&#34;https://www.cgal.org/&#34;&gt;https://www.cgal.org/&lt;/a&gt; and &lt;a href=&#34;https://smathermather.wordpress.com/2013/12/05/postgis-with-sfcgal-videos-how-did-i-miss-these-videos/&#34;&gt;https://smathermather.wordpress.com/2013/12/05/postgis-with-sfcgal-videos-how-did-i-miss-these-videos/&lt;/a&gt;&lt;br&gt;
SFCGAL &lt;a href=&#34;http://www.sfcgal.org/&#34;&gt;http://www.sfcgal.org/&lt;/a&gt; “ &lt;em&gt;SFCGAL&lt;/em&gt; is a C++ wrapper library around &lt;em&gt;&lt;a href=&#34;http://www.cgal.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;CGAL&lt;/a&gt;
 with the aim of supporting ISO 19107:2013 and &lt;a href=&#34;http://www.opengeospatial.org/standards/sfa&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OGC Simple Features Access 1.2&lt;/a&gt;
 for 3D operations.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;– Other PostGIS 3D Stuff&lt;br&gt;
&lt;em&gt;“This post explains how to setup a powerful spatial data store (PostGIS) with a wide range of features (SFCGAL, PgRouting, PostgreSQL PointCloud, PDAL)“&lt;/em&gt;&lt;br&gt;
&lt;a href=&#34;http://www.oslandia.com/full-spatial-database-power-in-2-lines-en.html&#34;&gt;http://www.oslandia.com/full-spatial-database-power-in-2-lines-en.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://postgis3d.blogspot.nl/&#34;&gt;http://postgis3d.blogspot.nl/&lt;/a&gt; (Camp2Camp – 2007 – by Mathieu ..?)&lt;/p&gt;
&lt;h3 id=&#34;xnavigator&#34;&gt;XNavigator&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;“XNavigator is an interactive 3D viewer and integrated client for exploring virtual city and landscape models. Instead of defining its own proprietary communication protocols, open OGC standards are used. The Open Geospatial Consortium (OGC) defines standards for accessing spatial information over the internet.  The main 3D content is downloaded from a Web 3D Service (W3DS).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Additional OGC services which can be accessed include:&lt;/em&gt;&lt;br&gt;
&lt;em&gt;- Web Map Service (WMS)&lt;/em&gt;&lt;br&gt;
&lt;em&gt;- Open Location Services (OpenLS) including Route Service, Directory Service, and Geocoder&lt;/em&gt;&lt;br&gt;
&lt;em&gt;- Catalog Service for Web (CSW) ebRIM profile&lt;/em&gt;&lt;br&gt;
&lt;em&gt;- Web Feature Service (WFS) serving GML3 and CityGML content “&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://xnavigator.sourceforge.net/doku.php&#34;&gt;http://xnavigator.sourceforge.net/doku.php&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;threejs&#34;&gt;ThreeJS&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;“The aim of the project is to create a lightweight 3D library with a very low level of complexity — in other words, for dummies. The library provides &amp;lt;canvas&amp;gt;, &amp;lt;svg&amp;gt;, CSS3D and WebGL renderers.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2015/01/threejs.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://threejs.org&#34;&gt;http://threejs.org&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;w3ds&#34;&gt;W3DS&lt;/h3&gt;
&lt;p&gt;W3DS (Web 3D Service) is a portrayal service for 3D scenes. Early OGC discussion documents. Now superseded by the 3DPS, the 3D Portrayal Service, now (jan 2015) out for public comment in OGC. This is an early W3DS implementation in GeoServer that started from the dissertation work by Nuno Miguel Carvalho Oliveira (professor: Jorge Gustavo Rocha) at the University of Minho (Portugal).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mei.di.uminho.pt/sites/default/files/dissertacoes//eeum_di_dissertacao_pg18391.pdf&#34;&gt;http://mei.di.uminho.pt/sites/default/files/dissertacoes//eeum_di_dissertacao_pg18391.pdf&lt;/a&gt; – Dissertation&lt;br&gt;
&lt;a href=&#34;https://github.com/geoserver/geoserver/tree/master/src/community/w3ds&#34;&gt;https://github.com/geoserver/geoserver/tree/master/src/community/w3ds&lt;/a&gt; – GeoServer community module&lt;br&gt;
&lt;a href=&#34;http://osgeo-org.1560.x6.nabble.com/W3DS-Implementation-up-and-running-td4665127.html&#34;&gt;http://osgeo-org.1560.x6.nabble.com/W3DS-Implementation-up-and-running-td4665127.html&lt;/a&gt; – email on GeoServer list&lt;/p&gt;
&lt;h3 id=&#34;qgishorao&#34;&gt;QGIS/Horao&lt;/h3&gt;
&lt;p&gt;By OSLandia&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“A simple viewer built around OpenSceneGraph … designed to listen to commands on its standard input. … The other piece is a Python plugin that is used to connect QGIS signals to the viewer (in another process) to allow loading of QGIS layers with 3D geometries.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2015/01/horao.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Oslandia/horao&#34;&gt;https://github.com/Oslandia/horao&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;http://www.openscenegraph.org/&#34;&gt;http://www.openscenegraph.org/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;cuardo&#34;&gt;Cuardo&lt;/h3&gt;
&lt;p&gt;Again By OSLandia, watch these guys!&lt;br&gt;
&lt;em&gt;“ Cuardo is an OpenSource WebGL 3D data viewer, focusing on urban data analysis and visualization … a 3D GIS web framework based on Three.js and WebGL, oriented toward urban visualization.“&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2015/01/cuardo.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Oslandia/cuardo&#34;&gt;https://github.com/Oslandia/cuardo&lt;/a&gt;
&lt;a href=&#34;http://www.oslandia.com/oslandia-releases-cuardo-3d-gis-viewer-en.html&#34;&gt;http://www.oslandia.com/oslandia-releases-cuardo-3d-gis-viewer-en.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;suggestions-from-readers&#34;&gt;Suggestions from Readers&lt;/h3&gt;
&lt;p&gt;After the first version I got quite some suggestions. Thanks!&lt;/p&gt;
&lt;p&gt;– Glob3Mobile – &lt;a href=&#34;https://twitter.com/DiegoGomezDeck&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;@DiegoGomezDeck&lt;/a&gt;
&lt;br&gt;
&lt;em&gt;“ G3M is a framework developed and designed to:&lt;/em&gt;&lt;br&gt;
&lt;em&gt;- Develop mobile maps apps in 2D, 2,5D and 3D&lt;/em&gt;&lt;br&gt;
&lt;em&gt;- Work with real time data&lt;/em&gt;&lt;br&gt;
&lt;em&gt;- Integrate any kind of data (format,size)&lt;/em&gt;&lt;br&gt;
&lt;em&gt;- Be integrated on any legacy system&lt;/em&gt;&lt;br&gt;
&lt;em&gt;- High performance mobile native development&lt;/em&gt;&lt;br&gt;
&lt;em&gt;- Multi Touch screens&lt;/em&gt;&lt;br&gt;
&lt;em&gt;- Face the problem of the mobile performance as an integrated problem between server &amp;amp; client&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Works on iOS, Android devices and HTML5 environments. “&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.glob3mobile.com/&#34;&gt;http://www.glob3mobile.com/&lt;/a&gt;&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Into the Weather – Part 3 – Publishing Data to the Cloud – 1</title>
      <link>https://justobjects.nl/into-the-weather-part-3/</link>
      <pubDate>Mon, 15 Dec 2014 23:19:17 +0000</pubDate>
      
      <guid>https://justobjects.nl/into-the-weather-part-3/</guid>
      <description>
        
          &lt;p&gt;In my last post, &lt;a href=&#34;https://justobjects.nl/into-the-weather-part-2-fun-with-raspberry-pi/&#34;&gt;Into the Weather – Part 2&lt;/a&gt;
, I outlined a global architecture of a &lt;a href=&#34;http://www.davisnet.com/weather/products/vantage-pro-professional-weather-stations.asp&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Davis Vantage Pro2&lt;/a&gt;
 weather station connected to a &lt;a href=&#34;http://www.raspberrypi.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Raspberry Pi&lt;/a&gt;
 (RPi) running &lt;a href=&#34;http://www.weewx.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;weewx&lt;/a&gt;
 weather software to capture raw weather data. Here I will try to depict how to bring this weather data “from the &lt;a href=&#34;http://en.wikipedia.org/wiki/Little_Fluffy_Clouds&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;fluffy clouds&lt;/a&gt;
 into the digital cloud”. Finally, at the end, also some geospatial content. The image below shows the weather station sensors at the Geonovum building rooftop (was quite hazardous replacing a faulty temperature sensor there!) and the Davis console connected to the Raspberry Pi (transparent enclosure). All documentation and code can be found via: &lt;a href=&#34;http://sospilot.readthedocs.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;sospilot.readthedocs.org&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2014/12/davis-pws-geonovum-pics1.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;To recap: the &lt;a href=&#34;http://www.davisnet.com/weather/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Davis Weather Station&lt;/a&gt;
 continuously captures raw weather data through its sensors: temperature (out/in), pressure, wind (speed, direction), rainfall and even UV-radiation. This data is initially gathered within the local console display. This is fine for personal/local usage, but for capturing history, deriving trends and in particular for external sharing this is quite limited. The real fun starts with getting access to the raw data and go from there.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2014/11/weather-hw-setup.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;This is where the Raspberry Pi with weewx and later &lt;a href=&#34;http://www.stetl.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Stetl&lt;/a&gt;
, PostGIS, GeoServer and the 52North SOS come in, but I’ll go step-by-step. Let’s first see how we can publish weather data with just weewx.&lt;/p&gt;
&lt;p&gt;My first post &lt;a href=&#34;https://justobjects.nl/into-the-weather-part-1/&#34;&gt;Into the Weather – Part 1&lt;/a&gt;
 in this series introduced weewx, a Python framework for capturing, storing and publishing weather data. The Davis weather station is connected via USB to the RPi. The RPi runs &lt;a href=&#34;http://www.weewx.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;weewx&lt;/a&gt;
 to gather and store weather data (in a SQLite DB) from the weather station. But weewx can do more than this: it can also publish weather data to a variety of services. As any well-designed framework, weewx is basically a kernel, the &lt;em&gt;weewx engine&lt;/em&gt; with configurable plugins, all specified and parameterized from a single configuration file &lt;em&gt;weewx.conf&lt;/em&gt;, like in &lt;a href=&#34;https://github.com/Geonovum/sospilot/blob/master/src/weewx/davis/weewx.conf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;this example&lt;/a&gt;
. The &lt;em&gt;weewx daemon&lt;/em&gt; process runs forever in a main loop continuously calling on all plugins.&lt;/p&gt;
&lt;p&gt;First there are &lt;em&gt;weewx station-drivers&lt;/em&gt; that continuously capture raw data from most common weather stations. Although there are many brands of weather stations, many will share common hardware and protocols. The second class of plugins are &lt;em&gt;archiving drivers&lt;/em&gt;, where/how to store raw weather data. Two standard archiving drivers are available: SQLite and MySQL. My choice: SQLite. For publication from archived data, a &lt;em&gt;standard reporting driver&lt;/em&gt; generates a plain HTML website using an extensible &lt;em&gt;skin containing (HTML) templates&lt;/em&gt;. By configuring an FTP or &lt;em&gt;rsync&lt;/em&gt; destination, the generated HTML can be published to a remote webserver. This is the first connection to the digital cloud. Off course the skin and templates are highly configurable &lt;a href=&#34;https://github.com/Geonovum/sospilot/tree/master/src/weewx/davis/byteweather&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;as in this example&lt;/a&gt;
. Many examples can be found on the web. I found the nice &lt;a href=&#34;http://davies-barnard.co.uk/2014/01/weewx-byteweather-template&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;byteweather-template by Chris Davies-Barnard&lt;/a&gt;
. Below is the result as can be found at: &lt;a href=&#34;http://sensors.geonovum.nl/weewx&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;sensors.geonovum.nl/weewx&lt;/a&gt;
.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;http://sensors.geonovum.nl/weewx/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2014/12/weewx-geonovum-screen1.png&#34;
      alt=&#34;Weewx Standard Report&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;In addition, I’ve added even a more dynamic weather display like the &lt;a href=&#34;http://wiki.sandaysoft.com/a/SteelSeries_Gauges&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Steelseries Gauges&lt;/a&gt;
, as seen below and via the link &lt;a href=&#34;http://sensors.geonovum.nl/weewx/gauges/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;sensors.geonovum.nl/weewx/gauges&lt;/a&gt;
.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;http://sensors.geonovum.nl/weewx/gauges/index.html&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2014/12/weewx-geonovum-gauges-screen1.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;Just like other crowd-sourced projects like OpenStreetMap and WikiPedia there are various weather  communities where you can join and publish your weather data via RESTful APIs. weewx provides drivers for most common communities like &lt;a href=&#34;http://www.wunderground.com/wundermap?lat=52.152&amp;amp;lon=5.372&amp;amp;zoom=13&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Weather Underground&lt;/a&gt;
 and &lt;a href=&#34;http://pwsweather.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;PWSWeather&lt;/a&gt;
. For example, I registered the Geonovum weather station as  &lt;a href=&#34;http://www.wunderground.com/personal-weather-station/dashboard?ID=IUTRECHT96&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Geonovum IUTRECHT96&lt;/a&gt;
 as below.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;http://www.wunderground.com/personal-weather-station/dashboard?ID=IUTRECHT96&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2014/12/wu-geonovum-pws1.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;Weather Underground also provides various apps and a map, the &lt;a href=&#34;http://www.wunderground.com/wundermap?lat=52.152&amp;amp;lon=5.372&amp;amp;zoom=13&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;WunderMap&lt;/a&gt;
. Here you can view your station, together with all others that jointly provide weather data. As can be seen there is already quite some coverage within The Netherlands.&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;http://www.wunderground.com/wundermap?lat=52.152&amp;amp;lon=5.372&amp;amp;zoom=13&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2014/12/wundermap-nl1.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;All in all, there is a fascinating world to explore once you get into the weather domain and its many communities.&lt;/p&gt;
&lt;p&gt;So why am I doing all of this? Apart from having the opportunity to develop this as part of the &lt;a href=&#34;http://sospilot.readthedocs.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SOSPilot Project at Geonovum&lt;/a&gt;
, I think that “geospatial” is moving from 2D to “N-dimensional”: not only more and more “3D”  is hitting the shores (just see the recent 2014 blogs at &lt;a href=&#34;http://planet.osgeo.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;planet.osgeo.org&lt;/a&gt;
), but also location-based sensor data (like Air Quality and weather data) and the &lt;a href=&#34;http://en.wikipedia.org/wiki/Internet_of_Things&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Internet of Things&lt;/a&gt;
 drives a need to deal with time-series data: management, storage, services and visualization. Within the Open Source geospatial world I happily see that many frameworks and tools are extended to deal with 3D, like &lt;a href=&#34;http://openlayers.org/ol3-cesium/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenLayers/Cesium&lt;/a&gt;
 (one of my next posts) and &lt;a href=&#34;http://boundlessgeo.com/2013/11/manage-lidar-postgis/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;PostGIS/PDAL&lt;/a&gt;
 and with Time like in &lt;a href=&#34;http://docs.geoserver.org/latest/en/user/services/wms/time.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoServer Dimension&lt;/a&gt;
 support. Also the &lt;a href=&#34;http://www.opengeospatial.org/ogc/markets-technologies/swe&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OGC Sensor Web Enablement&lt;/a&gt;
 and its lighter-weight version &lt;a href=&#34;http://ogc-iot.github.io/ogc-iot-api/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OGC SensorThings&lt;/a&gt;
 is gaining more attention.&lt;/p&gt;
&lt;p&gt;Not yet done with the weather. Next post I will dive into further unlocking weather data via OGC services like WMS and SOS. That would be “Publishing Data to Cloud 9” ;-)&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Open Source and The Theory on Brontosauruses by Anne Elk (Miss)</title>
      <link>https://justobjects.nl/open-source-and-the-theory-on-brontosauruses-by-anne-elk-miss/</link>
      <pubDate>Thu, 20 Nov 2014 01:55:41 +0000</pubDate>
      
      <guid>https://justobjects.nl/open-source-and-the-theory-on-brontosauruses-by-anne-elk-miss/</guid>
      <description>
        
          &lt;p&gt;Preparing for a talk on our &lt;a href=&#34;https://osgeo.nl/osgeo-nl-dag-2014/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSGeo.nl Day&lt;/a&gt;
 at the Dutch &lt;a href=&#34;http://geobuzz.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoBuzz&lt;/a&gt;
 Conference, I am trying to put in some slides on Free and Open Source Software (FOSS) for geospatial: why “FOSS is good” and why I live by it. The usual arguments on licensing, (not) price, feature comparison, collaboration contrasted with proprietary source are to me a, to be honest, a past, boring station.&lt;/p&gt;
&lt;p&gt;Interlude: some younger readers (and non Python-programmers), may be puzzled: who the !&amp;amp;$# is &lt;a href=&#34;http://en.wikipedia.org/wiki/Anne_Elk%27s_Theory_on_Brontosauruses&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Anne Elk&lt;/a&gt;
? Ok watch this Monty Python video first:&lt;/p&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;a href=&#34;https://www.youtube.com/watch?v=cAYDiPizDIs&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2014/11/anne-elk-300x179.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;From my humble developer’s point of view software is always built on assembled and shared human knowledge codified in programming language lines, ultimately compiled into zeroes and ones running on a machine. Sharing knowledge has been always been key to human evolution. Someone invented building a fire long ago. I am always wondering how &lt;em&gt;that&lt;/em&gt; knowledge was shared. Was it “licensed” with other tribes. How? Per fire? For the duration of the fire, or N fires per month? Was the original inventor awarded?&lt;/p&gt;
&lt;p&gt;No well-established software developer team will start from a real “scratch”, i.e. first designing and “baking” all hardware, developing CPU-instructions, boot-loaders, operating systems, programming languages, libraries, frameworks etc, in order to develop their application. In general they use available knowledge, i.e. software, from the “giants” that developed those components before. The obvious metaphor is the pyramid: would placing the last stone at the top make the entire structure “yours”, as would be the proprietary software case? From the 1980’s on, for many a marketing manager, still the entire pyramid is sold a piece, as software became a valuable asset.&lt;/p&gt;
&lt;p&gt;So in real-life, any smart developer team will Google for, and use any freely (FOSS) software available “out there”, usually being aware of any licensing constraints.  Developing “from scratch” is something we did in the dark ages, or even further back, at the time of the brontosauruses.&lt;/p&gt;
&lt;p&gt;Well, not that long ago. My career started in the 1985 working for &lt;a href=&#34;htCtp://en.wikipedia.org/wiki/AT%26T&#34;&gt;AT&amp;amp;amp;T&lt;/a&gt;
, later called &lt;a href=&#34;http://en.wikipedia.org/wiki/Lucent&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Lucent&lt;/a&gt;
, for 11 years, working on software for the &lt;a href=&#34;ttp://en.wikipedia.org/wiki/5ESS_switch&#34;&gt;5ESS public telephone exchange&lt;/a&gt;
. I am still grateful for that opportunity. From what I gathered at the time, both software and hardware were all developed “in-house”: the chips, the Unix operating system, the C, later C++ language, its compilers, the whole lot. Well, &lt;em&gt;that&lt;/em&gt; is really “from scratch”. Luckily all these goods were later shared with the world. That is why we have Linux and Mac OSX (via BSD, NEXT, but that is another story) today.&lt;/p&gt;
&lt;p&gt;But still, who is Anne Elk and what does The Theory on Brontosauruses have to do with all of this? My point is that, although in practice software is developed on the shoulders of “the pyramid builders”, i.e. “the giants”, proprietary software is often still traded in the high spirits of Anne Elk. Although some may be uttering: “we love Open Source, we use it all the time”, as to sell a fire… Only if you are like AT&amp;amp;T and many others at the time, “from scratch” comes close to the truth and may not itch…But for the true humans among us, sharing is us and where we came from.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Into the Weather – Part 2 – Fun with Raspberry Pi</title>
      <link>https://justobjects.nl/into-the-weather-part-2-fun-with-raspberry-pi/</link>
      <pubDate>Thu, 06 Nov 2014 01:35:30 +0000</pubDate>
      
      <guid>https://justobjects.nl/into-the-weather-part-2-fun-with-raspberry-pi/</guid>
      <description>
        
          &lt;p&gt;This is a follow-up to &lt;a href=&#34;https://justobjects.nl/into-the-weather-part-1/&#34;&gt;“Into the Weather – Part 1 – Exploring weewx”&lt;/a&gt;
. Sorry, still almost no geospatial content for now. To recap: I am trying to setup an infrastructure where measurements from a &lt;a href=&#34;http://www.davisnet.com/weather/products/vantage-pro-professional-weather-stations.asp&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Davis Vantage Pro2 Weather Station&lt;/a&gt;
 are collected and exposed to web services, most notably OGC Services like &lt;a href=&#34;http://docs.geoserver.org/latest/en/user/services/wms/time.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;WMS-Time&lt;/a&gt;
 and SOS, the &lt;a href=&#34;http://www.opengeospatial.org/standards/sos&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Sensor Observation Service&lt;/a&gt;
. The TLDR; /impatient can view results at &lt;a href=&#34;http://sensors.geonovum.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;sensors.geonovum.nl&lt;/a&gt;
, sources in the &lt;a href=&#34;https://github.com/Geonovum/sospilot/tree/master/src&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GitHub project&lt;/a&gt;
 and in general &lt;a href=&#34;http://sospilot.readthedocs.org/en/latest/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;the documentation&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;As this setup needs to be run from within my client’s local intranet with available servers “in the Cloud” there is a need for a “relaying middleman”.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;http://www.raspberrypi.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Raspberry Pi&lt;/a&gt;
 (RPi) was my first choice. The RPi is a credit-card sized computer that can run Linux-es like &lt;a href=&#34;http://www.raspbian.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Raspbian&lt;/a&gt;
, a Linux OS based on &lt;a href=&#34;https://www.debian.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Debian&lt;/a&gt;
. As the Davis weather station console has a USB-interface and &lt;a href=&#34;http://www.weewx.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;weewx&lt;/a&gt;
 supports read-outs from Davis weather stations, choosing the RPi was obvious. The combination RPi, Raspbian, weewx (try &lt;a href=&#34;https://www.google.nl/search?q=RPi%2C&amp;#43;Raspbian%2C&amp;#43;weewx&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;this Google search&lt;/a&gt;
) is becoming more and more popular for setting up public and community-based weather stations.&lt;/p&gt;
&lt;p&gt;By now it is time to depict the overall architecture as in the image below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2014/11/weather-hw-setup1.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;The Davis weather station will connect via USB to the RPi. The RPi will run &lt;a href=&#34;http://www.weewx.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;weewx&lt;/a&gt;
 to gather and store weather data (in a SQLite DB) from the weather station. In addition the RPi will run ETL software based on &lt;a href=&#34;http://www.stetl.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Stetl&lt;/a&gt;
 to publish weather data to a PostgreSQL/PostGIS database in a cloud server. Using &lt;a href=&#34;http://geoserver.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Geoserver&lt;/a&gt;
 and the &lt;a href=&#34;http://52north.org/communities/sensorweb/sos/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;52North SOS&lt;/a&gt;
 the cloud server will expose the weather data via web services like WMS (Time), WFS and SOS and plain HTML using custom weather web templates like the fabulous &lt;a href=&#34;http://wiki.sandaysoft.com/a/SteelSeries_Gauges&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;steelseries gauges&lt;/a&gt;
. I will expand on the software setup in the next post.&lt;/p&gt;
&lt;p&gt;For now I will focus on acquiring and setting up the RPi, as this was a fun-exercise by itself. I ordered a kit with a Raspberry Pi Model B+ with power unit, casing, micro SD and WIFI USB adapter (&lt;a href=&#34;http://www.kiwi-electronics.nl/raspberry-pi/raspberry-pi-accessoires/wi-pi-draadloze-usb-adapter-voor-raspberry-pi&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;WiPi&lt;/a&gt;
) at &lt;a href=&#34;http://www.kiwi-electronics.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Kiwi Electronics&lt;/a&gt;
. The whole package arrived the next day.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2014/11/rasp-pi-all1.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;From unboxing to having everything installed with the &lt;a href=&#34;https://justobjects.nl/into-the-weather-part-1/&#34;&gt;weewx Simulator (see Part 1)&lt;/a&gt;
 went smooth. It would take too far to describe all the install steps and gotcha’s. I’ve summarized these here in the &lt;a href=&#34;http://sospilot.readthedocs.org/en/latest/raspberrypi-install.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;RPi installation doc&lt;/a&gt;
. Apart from a standard Raspbian install, I paid in particular attention to two aspects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;running unattended as a headless server, i.e. monitoring and self-healing&lt;/li&gt;
&lt;li&gt;having SSH access outside the LAN via reverse SSH-tunneling&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Monitoring and self-healing are non-neglectable aspects, in particular the weewx server may go down for some reason, as well as the WIFI network and any of the SSH-tunnels. These aspects are described &lt;a href=&#34;http://sospilot.readthedocs.org/en/latest/raspberrypi-install.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;in the documentation&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;All in all this step was to get weewx running, still in simulator mode, storing raw weather data in a SQLite database and publishing HTML reports.&lt;/p&gt;
&lt;p&gt;So the final result is an RPi humming silently, weewx reporting regularly. In general having a stable system for the next steps: gathering and publishing the weather data to the OGC services like WMS, WFS and SOS. The &lt;a href=&#34;http://www.stetl.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Python-based Stetl framework&lt;/a&gt;
, again proved to be instrumental to this effort, both on the RPi and on the Linux server in the Cloud.  This will be a subject for my next post. See the architecture below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2014/11/weather-sw-setup.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;Summarizing: A Stetl process (&lt;a href=&#34;https://github.com/Geonovum/sospilot/tree/master/src/weather/weewx2pg&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Stetl sync&lt;/a&gt;
) continuously gathers and publishes weather data to a remote PostgreSQL/PostGIS server. Through PostgreSQL-VIEWs refined weather data is immediately available to GeoServer as WMS(Time) and WFS sources, and via another Stetl process (&lt;a href=&#34;https://github.com/Geonovum/sospilot/tree/master/src/weather/pg2sos&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Stetl SOS&lt;/a&gt;
) published via SOS-T (ala WFS-T) to the SOS. The weewx engine has a plugin to publish a flat HTML website via &lt;em&gt;rsync&lt;/em&gt; using configurable templates.&lt;/p&gt;
&lt;p&gt;There is much to expand still. I’m excited to see this whole infrastructure work in such a short time &lt;em&gt;&lt;strong&gt;thanks to&lt;/strong&gt; &lt;strong&gt;all these developers that produce all of the Open Source software involved here&lt;/strong&gt;&lt;/em&gt;: from the core Debian/Raspbian OSs, the weewx weather software, PostgreSQL/PostGIS, GeoServer and the 52North SOS. The proverbial sentence is: &lt;em&gt;&lt;strong&gt;I am just standing on the shoulders of you giants&lt;/strong&gt;&lt;/em&gt;. This is the way humanity should evolve regarding soft/hardware-technology. Thanks again, and if you have read this far, I hope to see you in my next post !&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Into the Weather – Part 1 – Exploring weewx</title>
      <link>https://justobjects.nl/into-the-weather-part-1/</link>
      <pubDate>Fri, 17 Oct 2014 01:21:02 +0000</pubDate>
      
      <guid>https://justobjects.nl/into-the-weather-part-1/</guid>
      <description>
        
          
&lt;div class=&#34;float_right&#34;&gt;
  &lt;a href=&#34;http://lib.heron-mc.org/heron/latest/examples/simpletimeslider/&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2014/10/wms-time-heron-knmi-300x181.png&#34;
      alt=&#34;WMS Time Example with GeoServer in Heron&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;Tagging this post as “Part 1”  is ambitious. Beware: there is hardly any “geo” for now. In the coming time I hope to share some technical experiences with weather stations, weather software and ultimately exposing weather data via some open geospatial standards like &lt;a href=&#34;http://mapserver.org/ogc/wms_time.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OGC WMS(-Time)&lt;/a&gt;
 as in &lt;a href=&#34;http://lib.heron-mc.org/heron/latest/examples/simpletimeslider/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;example image right&lt;/a&gt;
, WFS and in particular &lt;a href=&#34;http://en.wikipedia.org/wiki/Sensor_Observation_Service&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SOS (Sensor Observation Service)&lt;/a&gt;
. The context is an exciting project with &lt;a href=&#34;http://www.geonovum.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Geonovum&lt;/a&gt;
 in the Netherlands: to transform and expose (via web services and reporting) open/raw Air Quality data from &lt;a href=&#34;http://www.rivm.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;RIVM&lt;/a&gt;
, the Dutch National Institute for Public Health and the Environment. The main link to this project is &lt;a href=&#34;http://sensors.geonovum.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;sensors.geonovum.nl&lt;/a&gt;
. All software is developed as FOSS &lt;a href=&#34;https://github.com/Geonovum/sospilot&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;via a GitHub project&lt;/a&gt;
. There are already some results there. I may post on these later.&lt;/p&gt;

&lt;div class=&#34;float_left&#34;&gt;
  &lt;a href=&#34;#ZgotmplZ&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2014/10/sospilot-screenshot-300x206.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;Within a sub-project the aim is to expose measurements from a physical weather station via standardized OGC web services like WMS, WFS and SOS.  As a first step I dived into the world of weather hardware and software, in particular their vivid open source/open data communities. A whole new world expanded to me. To no surprise: Location and The Weather are part of everyday life since the beginnings of humanity. &lt;a href=&#34;http://openweathermap.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenWeatherMap&lt;/a&gt;
 and &lt;a href=&#34;http://www.wunderground.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Weather Underground&lt;/a&gt;
 are just two of the many communities around open weather data. In addition there’s an abundance of FOSS weather software. Personal weather stations are measuring not just temperature but also pressure, humidity, rainfall, wind, up to UV radiation and are built &lt;a href=&#34;http://www.zipfelmaus.com/blog/arduino-weather-shield-schematics-layout-code-everything-you-need/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;homebrew&lt;/a&gt;
 or &lt;a href=&#34;http://www.weathershop.co.uk/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;bought for as cheap as $50,-. &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2014/10/weather-hacking.png&#34; alt=&#34;Weather Hacking&#34;&gt;&lt;/p&gt;
&lt;p&gt;Being a noob in weather soft/hardware technology I had to start somewhere and then go step-by-step. The overall “architecture” can be even depicted in text:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;weather station --&amp;gt; soft/middleware --&amp;gt; web services + reporting
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;float_right&#34;&gt;
  &lt;a href=&#34;http://www.davisnet.com/weather/products/vantage-pro-professional-weather-stations.asp&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2014/10/davis-vantage-pro2-300x188.jpg&#34;
      alt=&#34;Davis Vantage Pro2 Weather Station&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;Being more of a software person, I decided to start with the weather soft/middleware. Also, since Geonovum already owns a &lt;a href=&#34;http://www.davisnet.com/weather/products/vantage-pro-professional-weather-stations.asp&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Davis Vantage Pro2 Weather Station&lt;/a&gt;
 and the &lt;a href=&#34;http://www.raspberrypi.org/products/model-b-plus/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Raspberry Pi B&amp;#43;&lt;/a&gt;
 I plan to use is still underway…&lt;/p&gt;
&lt;p&gt;From what I gathered, &lt;a href=&#34;http://www.weewx.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;weewx&lt;/a&gt;
 is the most widely used engine/framework within the weather FOSS community. Also the fact that it is written in Python with a very extensible architecture immediately settled my choice. Explaining &lt;a href=&#34;http://www.weewx.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;weewx&lt;/a&gt;
 is a subject by itself but &lt;a href=&#34;http://www.weewx.com/docs.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;very well documented&lt;/a&gt;
. I’ll try in a few sentences what &lt;a href=&#34;http://www.weewx.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;weewx&lt;/a&gt;
 does:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;collect current and archive weather station measurement data (drivers)&lt;/li&gt;
&lt;li&gt;storing weather data (archive and statistics) in a database (&lt;a href=&#34;http://www.sqlite.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SQLite&lt;/a&gt;
 or MySQL)&lt;/li&gt;
&lt;li&gt;submitting data to weather community services like &lt;a href=&#34;http://www.wunderground.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Weather Underground&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;creating formatted/templated reports for your local or remote website&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Any of these functionalities is highly extensible through a configurable plugin architecture. The drivers support most common weather stations. Installing is a breeze, either in a local directory or via Linux package managers. Also note that weather data  have quite some different local units (Fahrenheit/Celsius, knots/meters etc). &lt;a href=&#34;http://www.weewx.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;weewx&lt;/a&gt;
 will all take care of this.&lt;/p&gt;
&lt;p&gt;So, not yet having access to a weather station, what could I do? One of the weather station drivers is the &lt;a href=&#34;http://www.weewx.com/docs/usersguide.htm#[Simulator]&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Simulator&lt;/a&gt;
 which intelligently generates weather data for testing.&lt;/p&gt;

&lt;div class=&#34;float_right&#34;&gt;
  &lt;a href=&#34;http://openweathermap.org/maps&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2014/10/openweathermap-300x196.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;Trying to have some real-world data I set out on what appeared to be a two-hour hack: create a weather station driver that obtains its data from an open weather API. There are many off course. I choose the &lt;a href=&#34;http://openweathermap.org/api&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenWeatherMap API&lt;/a&gt;
 to get data in the area of our cabin in the woods near the place of &lt;a href=&#34;http://en.wikipedia.org/wiki/Otterlo&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Otterlo in the Netherlands&lt;/a&gt;
. Writing this hard-coded driver took just a few line of Python. The &lt;a href=&#34;https://github.com/Geonovum/sospilot/blob/master/src/weewx/test/weatherapidriver.py&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;source code can be found here&lt;/a&gt;
. To not overask the API, I’ve set the time interval to 2 minutes within the &lt;a href=&#34;https://github.com/Geonovum/sospilot/blob/master/src/weewx/test/weewx.conf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;weewx configuration file&lt;/a&gt;
. Also it would not be fair to report these values to any of the weather communities. If the weewx community is interested I can donate this software, with some generalization (e.g. URLvia config).&lt;/p&gt;
&lt;p&gt;But all in all my first driver is still running fine in weewx. The main challenge was converting all the values between different metric systems. weewx allows and even encourages you to store all data in US metrics. All the reporting and conversion utilities will always allow you to show your local metric units.&lt;/p&gt;

&lt;div class=&#34;float_left&#34;&gt;
  &lt;a href=&#34;#ZgotmplZ&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2014/10/otterlo-weewx-report-300x275.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt;As a Linux daemon now runs fine in our test system. It is time to show some results. weewx reporting is basically a website generated via &lt;a href=&#34;http://www.cheetahtemplate.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Cheetah templates&lt;/a&gt;
. The default template is basic white on black. I found a nice template called &lt;a href=&#34;http://davies-barnard.co.uk/2014/01/weewx-byteweather-template&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Byteweather&lt;/a&gt;
. You can find my continuous weather report  here at &lt;a href=&#34;http://sensors.geonovum.nl/weather/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;sensors.geonovum.nl/weather&lt;/a&gt;
. Measurements are now building up thanks to the weewx archive database. Values are mostly matching Dutch weather station data. Expect for the rainfall…Surely we have lots of rain but not that much…&lt;/p&gt;
&lt;p&gt;Next posting I hope to tell more about deploying the Raspberry Pi and connecting to the Geonovum Davis Weather station. Then there will be also more “geo” in the post, I promise!&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Moving PostGIS tables from the public schema to a new schema</title>
      <link>https://justobjects.nl/moving-postgis-tables-from-the-public-schema-to-a-new-schema/</link>
      <pubDate>Fri, 01 Feb 2013 16:40:38 +0000</pubDate>
      
      <guid>https://justobjects.nl/moving-postgis-tables-from-the-public-schema-to-a-new-schema/</guid>
      <description>
        
          &lt;p&gt;Update 30 nov 2013: &lt;a href=&#34;https://gist.github.com/justb4/7719180&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;code is now as a GIST on GitHub&lt;/a&gt;
, also with function to move single table.&lt;/p&gt;
&lt;p&gt;Update 19 feb 2014: &lt;strong&gt;&lt;em&gt;not yet tested with PostGIS v2.0 and up, so beware (or let me know if that works)!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Update 4 june 2015: &lt;strong&gt;_tested with PostgreSQL 9.3.4 and PostGIS v2.1: all ok!! _&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Using &lt;a href=&#34;http://www.postgresql.org/docs/9.2/static/ddl-schemas.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;PostgreSQL Schema’s&lt;/a&gt;
 when using &lt;a href=&#34;http://postgis.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;PostGIS&lt;/a&gt;
 is very useful. Instead of the default &lt;em&gt;public&lt;/em&gt; schema where PostGIS and its meta-tables (&lt;em&gt;geometry_columns&lt;/em&gt; and &lt;em&gt;spatial_ref_sys&lt;/em&gt;) are installed one can use an explicit schema. One main reason, at least for me, is that PostgreSQL Schema’s allow me to make data dumps of the Schema (via &lt;a href=&#34;http://www.postgresql.org/docs/9.2/static/app-pgdump.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;pg_dump&lt;/a&gt;
)  and restore these dumps in another database, even on another system. When using the default _public _schema a dump would also include PostGIS functions and metatables. This is problematic to restore on another system or higher PostgreSQL/PostGIS version. So I recommend always to use Schema’s.&lt;/p&gt;
&lt;p&gt;But what if your tables are already in the &lt;em&gt;public&lt;/em&gt; schema? This was the case in some of my older projects like &lt;a href=&#34;http://geoskating.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoSkating&lt;/a&gt;
 which has tables in PostgreSQL 8.2 in the &lt;em&gt;public&lt;/em&gt; schema. With some hacking and &lt;a href=&#34;http://blog.coreycoogan.com/2010/12/22/how-to-move-postgresql-tables-to-a-different-schema/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;surfing&lt;/a&gt;
 on the web, I constructed an SQL function that would move my tables from the _public S_chema to any other Schema and update the PostGIS metatables (and leave these in the _public _Schema). See the function &lt;em&gt;postgis_schema_move&lt;/em&gt;() below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;-- Function to move tables to schema
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;CREATE OR REPLACE FUNCTION
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;       public.postgis_schema_move(old_schema varchar(32),
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;         new_schema varchar(32)) RETURNS void AS $$
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;DECLARE
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;    row record;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;BEGIN
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;    FOR row IN SELECT tablename FROM pg_tables
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;            WHERE schemaname = old_schema and tablename != &amp;#39;spatial_ref_sys&amp;#39;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;              AND tablename != &amp;#39;geometry_columns&amp;#39;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;    LOOP
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;        EXECUTE &amp;#39;ALTER TABLE &amp;#39; || quote_ident(old_schema) || &amp;#39;.&amp;#39;
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;                 || quote_ident(row.tablename) ||
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;                    &amp;#39; SET SCHEMA &amp;#39; || new_schema || &amp;#39;;&amp;#39;;
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;        EXECUTE &amp;#39;UPDATE public.geometry_columns
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;                 SET f_table_schema = &amp;#39; || quote_literal(new_schema) ||
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;                  &amp;#39; WHERE f_table_schema = &amp;#39; || quote_literal(old_schema) ||&amp;#39;
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;                    AND f_table_name = &amp;#39; || quote_literal(row.tablename) || &amp;#39;;&amp;#39;;
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;    END LOOP;
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;END;
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;$$ LANGUAGE plpgsql;
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;-- Example: Move from public to schema app
&lt;span class=&#34;ln&#34;&gt;24&lt;/span&gt;SELECT public.postgis_schema_move(&amp;#39;public&amp;#39;, &amp;#39;app&amp;#39;);&amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The SQL function &lt;em&gt;postgis_schema_move()&lt;/em&gt; takes two string arguments: the &lt;em&gt;old_schema&lt;/em&gt; and &lt;em&gt;new_schema&lt;/em&gt;, the old (usually &lt;em&gt;‘public’&lt;/em&gt;) and  new schema names. The new schema needs to be created first. Also moving back from a new schema to the &lt;em&gt;public&lt;/em&gt; schema works.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>SOTM and FOSS4G Conferences 2011 Denver</title>
      <link>https://justobjects.nl/sotm-and-foss4g-conferences-2011-denver/</link>
      <pubDate>Tue, 20 Sep 2011 13:07:19 +0000</pubDate>
      
      <guid>https://justobjects.nl/sotm-and-foss4g-conferences-2011-denver/</guid>
      <description>
        
          &lt;p&gt;What a great time it was in Denver, Colorado, USA ! Attended both the  &lt;a href=&#34;http://stateofthemap.org/&#34; title=&#34;stateofthemap.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenStreetMap State Of The Map (OSM SOTM)&lt;/a&gt;
 and the &lt;a href=&#34;https://osgeo.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSGeo&lt;/a&gt;
 &lt;a href=&#34;http://2011.foss4g.org/&#34; title=&#34;2011.foss4g.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Free and Open Source for Geo (FOSS4G)&lt;/a&gt;
 conferences between september 9 and 16, 2011. Went hiking in between  in the Rocky Mountains (&lt;a href=&#34;http://www.nps.gov/romo/index.htm&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;State Park&lt;/a&gt;
 and &lt;a href=&#34;http://www.coloradowilderness.com/wildpages/indian.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Indian Peaks Wilderness&lt;/a&gt;
) where I saw a live bear the first time of my life.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2011/09/nederland-colorado-chipmunketc.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;At my first SOTM I was impressed how strong and vibrant the &lt;a href=&#34;http://openstreetmap.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSM community&lt;/a&gt;
 is, how an ecosystem of tools, data, people and businesses is continuously expanding and how far “The Map” has progressed.  The FOSS4G at the Sheraton Hotel in downtown Denver was very well-organized with high technical/social value. FOSS4G is a must-go conference if you are into FOSS Geo.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2011/09/denver-just-shots.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;Denver is a real city but with a country-like, mellow atmosphere. Socializing among the participants went smoothly, also since all major pubs were all directly near the Sheraton. The opening social night on tuesday at the &lt;a href=&#34;http://www.wynkoop.com/&#34; title=&#34;www.wynkoop.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;“Wynkoop Brewery”&lt;/a&gt;
 was an immediate hit. Many also went there on friday to close off. At FOSS4G I gave a talk on &lt;a href=&#34;http://2011.foss4g.org/sessions/openstreetmap-and-inspire-can-twain-meet&#34; title=&#34;2011.foss4g.org/sessions/openstreetmap-and-inspire-can-twain-meet&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;“OpenStreetMap and INSPIRE, Can the Twain Meet?”&lt;/a&gt;
.  You can find my slides in &lt;a href=&#34;https://files.justobjects.nl/presentation/foss4g-2011/html/img0.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;HTML&lt;/a&gt;
 or &lt;a href=&#34;https://files.justobjects.nl/presentation/foss4g-2011/osm-inspire-foss4g2011-broecke.pdf&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;PDF&lt;/a&gt;
. I prefer staying in Bed &amp;amp; Breakfasts these days: they are in general cheaper, cleaner and cozy compared to regular Hotels/Motels. I had a real pleasant stay at the &lt;a href=&#34;http://www.denver-bed-breakfast.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Holiday Chalet&lt;/a&gt;
 on East Colfax, run by fashion designer &lt;a href=&#34;http://signaturecrystalsharp.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Crystal Sharp&lt;/a&gt;
 with her &lt;a href=&#34;http://www.denver-bed-breakfast.com/images/clementine.jpg&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Labrador Clementine&lt;/a&gt;
. Getting around in Denver was easy and healthy using the &lt;a href=&#34;http://denver.bcycle.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Denver B-Cycle public bicycle sharing&lt;/a&gt;
. As I had no dataplan on my Android phone, I hacked out the B-Cycle station locations from the B-Cycle website and loaded them into my &lt;a href=&#34;http://gpstracklog.com/2007/07/garmin-etrex-le.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Garmin eTrex Legend HCx&lt;/a&gt;
 handheld GPS. The bicycle station locations are also &lt;a href=&#34;http://geocommons.com/overlays/154716&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;available on GeoCommons&lt;/a&gt;
 another great geo-sharing site (from a.o. &lt;a href=&#34;http://highearthorbit.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Andrew Turner&lt;/a&gt;
) I knew about but never had used before. In the Rocky Mountains I stayed in a &lt;a href=&#34;http://www.airbnb.com/rooms/59868&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;lovely studio treehouse&lt;/a&gt;
 found through &lt;a href=&#34;http://www.airbnb.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;AirBnB&lt;/a&gt;
 in the tiny place &lt;a href=&#34;http://nederlandco.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Nederland, Colorado&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2011/09/nederland-colorado.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;Stay tuned to the &lt;a href=&#34;https://wiki.openstreetmap.org/wiki/State_Of_The_Map_2011&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;SOTM&lt;/a&gt;
, &lt;a href=&#34;http://2011.foss4g.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FOSS4G&lt;/a&gt;
 and &lt;a href=&#34;http://www.fosslc.org/drupal/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;FOSSLC&lt;/a&gt;
 websites, since all sessions were recorded and will be made available there. Below some photo’s I made. Hikes with photo’s, video’s and GPX will become available on my &lt;a href=&#34;http://georambling.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoRambling website&lt;/a&gt;
. I should talk more on SOTM and FOSS4G session content but you can find also lots on the mentioned sites and tweets tagged with &lt;a href=&#34;http://twitter.com/#!/search/%23foss4g&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;#foss4g&lt;/a&gt;
 and &lt;a href=&#34;http://twitter.com/#!/search/%23sotm&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;#sotm&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2011/09/colorado-hiking.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;Next year FOSS4G will be in Beijing, China ! Will SOTM also be held there ?&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>OSGeo Code Sprint Bolsena 2010</title>
      <link>https://justobjects.nl/osgeo-code-sprint-bolsena-2010/</link>
      <pubDate>Fri, 23 Jul 2010 13:24:11 +0000</pubDate>
      
      <guid>https://justobjects.nl/osgeo-code-sprint-bolsena-2010/</guid>
      <description>
        
          &lt;p&gt; &lt;br&gt;

&lt;div class=&#34;float_left&#34;&gt;
  &lt;a href=&#34;#ZgotmplZ&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2010/07/bolsena-2010-thumb.jpg&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;Like in &lt;a href=&#34;http://www.justobjects.org/blog/?p=29&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;2009&lt;/a&gt;
, I attended the &lt;a href=&#34;http://wiki.osgeo.org/wiki/Bolsena_Code_Sprint_2010&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSGeo Code Sprint (and Hacking Event)&lt;/a&gt;
 in &lt;a href=&#34;http://en.wikipedia.org/wiki/Bolsena&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Bolsena, Italy&lt;/a&gt;
 during June 6-12, 2010. For one week developers from various Free and Open Source for Geospatial (often abbreviated as FOSS4G) projects get together in a &lt;a href=&#34;http://www.conventobolsena.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;monastery near Bolsena&lt;/a&gt;
 for code sprints, cross-project collaborations, presentations and geo-hacking in general. This all takes place in a relaxed atmosphere mostly outside. Thanks to the cook Enzo we enjoyed the Italian kitchen. This year I did some work on &lt;a href=&#34;http://geonetwork-opensource.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoNetwork&lt;/a&gt;
 and more in depth on &lt;a href=&#34;http://code.google.com/p/inspire-foss/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;INSPIRE FOSS&lt;/a&gt;
, a new FOSS project I initiated to support the development of &lt;a href=&#34;http://inspire.jrc.ec.europa.eu/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;INSPIRE&lt;/a&gt;
 using FOSS. In Bolsena I worked closely together with the &lt;a href=&#34;http://deegree.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;deegree&lt;/a&gt;
 lead developers Markus Schneider and Andreas Schmitz from &lt;a href=&#34;http://www.latlon.de/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;lat/lon&lt;/a&gt;
. At the spot we were able to construct a &lt;a href=&#34;http://inspire.kademo.nl/deegree-inspire-demo/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;demo&lt;/a&gt;
 that showcased the power of the upcoming &lt;a href=&#34;http://deegree.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;deegree version 3 WFS/WMS&lt;/a&gt;
 in supporting &lt;a href=&#34;http://inspire.jrc.ec.europa.eu/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;INSPIRE&lt;/a&gt;
 Data Themes. Meeting project leads and developers and following presentations from other projects like &lt;a href=&#34;http://www.geoserver.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoServer&lt;/a&gt;
, &lt;a href=&#34;http://deegree.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;deegree&lt;/a&gt;
 and &lt;a href=&#34;http://mapbender.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;MapBender&lt;/a&gt;
 was really worthwhile. Like last year I have made a video impression you can see below or on &lt;a href=&#34;http://www.youtube.com/watch?v=8Vjx06Rlols&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;YouTube&lt;/a&gt;
.&lt;/p&gt;

&lt;div class=&#34;video&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/8Vjx06Rlols?controls=1&amp;rel=0&#34; loading=&#34;lazy&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;


        
      </description>
    </item>
    
    <item>
      <title>OpenStreetMap Tiles for Dutch Projection EPSG:28992</title>
      <link>https://justobjects.nl/openstreetmap-tiles-for-dutch-projection-epsg28992/</link>
      <pubDate>Wed, 17 Mar 2010 11:11:25 +0000</pubDate>
      
      <guid>https://justobjects.nl/openstreetmap-tiles-for-dutch-projection-epsg28992/</guid>
      <description>
        
          &lt;!--
&lt;img loading=&#34;lazy&#34; class=&#34;alignleft wp-image-262 size-thumbnail&#34; src=&#34;uploads/2010/03/osm-rdtiles-150x150.jpg&#34; alt=&#34;osm-rdtiles&#34; width=&#34;150&#34; height=&#34;150&#34; /&gt;][1]
--&gt;
&lt;p&gt; &lt;br&gt;

&lt;div class=&#34;float_left&#34;&gt;
  &lt;a href=&#34;#ZgotmplZ&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2010/03/osm-rdtiles-150x150.jpg&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

This article documents how to generate &lt;a href=&#34;http://www.openstreetmap.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenStreetMap (OSM)&lt;/a&gt;
 tiles for the &lt;a href=&#34;http://www.rdnap.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Dutch RD (“Rijksdriehoeksmeting”) projection&lt;/a&gt;
 also known as &lt;a href=&#34;http://spatialreference.org/ref/epsg/28992&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;EPSG:28992&lt;/a&gt;
. The steps described below can be used for other projections as well. I assume you are familiar with the OpenStreetMap (OSM) project. If not, there is ample information on the web, for example the &lt;a href=&#34;http://wiki.openstreetmap.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSM Wiki&lt;/a&gt;
. What makes OSM very attractive is not just &lt;a href=&#34;http://wiki.openstreetmap.org/wiki/Map_Making_Overview&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;the shared mapmaking&lt;/a&gt;
 and an &lt;a href=&#34;http://wiki.openstreetmap.org/wiki/OpenStreetMap_License&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;unrestrictive license&lt;/a&gt;
 on the resulting map(data), but a toolchain, that allows you to &lt;a href=&#34;http://wiki.openstreetmap.org/wiki/Renderers&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;generate/render your own maps !&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;In addition, &lt;a href=&#34;http://www.openstreetmap.nl&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSM within The Netherlands&lt;/a&gt;
 is very detailed since &lt;a href=&#34;http://www.and.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Automotive Navigation Data (AND)&lt;/a&gt;
 has donated a complete road dataset for The Netherlands in 2007 to the OSM project. OSM maps are usually rendered as 256×256 tiles in a &lt;a href=&#34;http://docs.openlayers.org/library/spherical_mercator.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Spherical Mercator projection&lt;/a&gt;
 with the (unofficial) code EPSG:900913, a.k.a. the “Google Projection”. Spherical Mercator has an official designation of &lt;a href=&#34;http://spatialreference.org/ref/epsg/3785&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;EPSG:3785&lt;/a&gt;
 but you will mostly find EPSG:900913. Most countries however use local map-projections, mainly for better accuracy and calculations. Most Dutch mapping applications use the aforementioned &lt;a href=&#34;http://www.rdnap.nl/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Dutch RD projection, EPSG:28992&lt;/a&gt;
. Generating OSM tiles for EPSG:28992 requires some extra steps and has some gotchas you need to be aware of.&lt;/p&gt;
&lt;p&gt;Below, I will not describe the setup of the entire toolchain needed to &lt;a href=&#34;http://wiki.openstreetmap.org/wiki/Mapnik&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;generate OSM map tiles with Mapnik&lt;/a&gt;
, but just the steps that are specific to our goal: generate OSM map tiles for extent of The Netherlands with the projection EPSG:28992. These steps were done on &lt;a href=&#34;http://www.ubuntu.com/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ubuntu Linux&lt;/a&gt;
 9.04 (Jaunty). So let’s take the seven steps!&lt;/p&gt;
&lt;h3 id=&#34;step-1-download-osm-data&#34;&gt;Step 1: download OSM data&lt;/h3&gt;
&lt;p&gt;Since we only plan to generate tiles for The Netherlands, plus the fact that the projection EPSG:28992 will not even work around the world, we need only an extract for The Netherlands. I have downloaded this extract from &lt;code&gt;http://hypercube.telascience.org/planet/planet-nl-latest.osm.gz&lt;/code&gt;, but at the time of this writing this file was not present. Best is to go to &lt;a href=&#34;http://wiki.openstreetmap.org/wiki/Planet.osm&#34;&gt;http://wiki.openstreetmap.org/wiki/Planet.osm&lt;/a&gt; to find a suitable download server. Unpack &lt;code&gt;planet-nl-latest.osm.gz&lt;/code&gt;. The resulting XML file &lt;code&gt;planet-nl-latest.osm&lt;/code&gt; is around 4.5 GB.&lt;/p&gt;
&lt;h3 id=&#34;step-2-import-osm-data-in-postgis&#34;&gt;Step 2: import OSM data in PostGIS&lt;/h3&gt;
&lt;p&gt;Use &lt;a href=&#34;http://wiki.openstreetmap.org/wiki/Osm2pgsql&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;osm2pgsql&lt;/a&gt;
 to import the Planet XML file into the PostgreSQL/PostGIS database. Since the standard version from the Ubuntu repository gave errors I have built a custom version of &lt;code&gt;osm2pgsql&lt;/code&gt; from SVN (rev. 20274) using these steps:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;sudo apt-get install build-essential libxml2-dev libgeos-dev libpq-dev libbz2-dev proj
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;mkdir /opt/osm/osm2pgsql
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /opt/osm/osm2pgsql
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;svn &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; http://svn.openstreetmap.org/applications/utils/export/osm2pgsql svn-20274
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;sed -i &lt;span class=&#34;s1&#34;&gt;&amp;#39;s/-g -O2/-O2 -march=native -fomit-frame-pointer/&amp;#39;&lt;/span&gt; Makefile
&lt;span class=&#34;ln&#34;&gt;8&lt;/span&gt;make
&lt;span class=&#34;ln&#34;&gt;9&lt;/span&gt;make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Import the OSM file with this command line:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;osm2pgsql --slim -c -E EPSG:4326 -d georzlab -U postgres -W -H localhost S /opt/osm/osm2pgsql/svn-20274/default.style /path/to/planet-nl-latest.osm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note the use of EPSG:4326 (standard lon/lat projection) to store data in the DB. Maybe I could have used the default EPSG:900913. The &lt;code&gt;--slim&lt;/code&gt; option was needed to prevent errors.&lt;/p&gt;
&lt;h3 id=&#34;step-3-install-mapnik&#34;&gt;Step 3: install Mapnik&lt;/h3&gt;
&lt;p&gt;An install of &lt;a href=&#34;http://mapnik.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Mapnik&lt;/a&gt;
, the map tile renderer, version 0.7.0 from &lt;a href=&#34;http://svn.mapnik.org/tags/release-0.7.0&#34;&gt;http://svn.mapnik.org/tags/release-0.7.0&lt;/a&gt; was done. Installing Mapnik itself involves many steps. These are described in many places, such as &lt;a href=&#34;http://wiki.openstreetmap.org/wiki/Mapnik/Installation&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;here&lt;/a&gt;
 and for Ubuntu at &lt;a href=&#34;http://trac.mapnik.org/wiki/UbuntuInstallation&#34;&gt;http://trac.mapnik.org/wiki/UbuntuInstallation&lt;/a&gt;. Best is to have a Mapnik version as recent as possible.&lt;/p&gt;
&lt;h3 id=&#34;step-4-download-and-extract-world-boundary-files&#34;&gt;Step 4: download and extract World Boundary files&lt;/h3&gt;
&lt;p&gt;This is a standard step in the Mapnik rendering process for OSM. Specific in our case is that we will extract only the area of The Netherlands from the World Boundary shape files. This is not just for efficiency purposes but required, &lt;em&gt;&lt;strong&gt;otherwise rendering boundaries/geonames will silently fail (see below)&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Two steps are required here:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;extract/clip the Netherlands’ bounding box and&lt;/li&gt;
&lt;li&gt;reproject extracted data to EPSG:28992.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Thanks to the wonderful geo-library &lt;a href=&#34;http://gdal.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GDAL/OGR&lt;/a&gt;
 and the command &lt;code&gt;ogr2ogr&lt;/code&gt; for vector data manipulations, this can be done in a script as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# location of shape files&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /var/kademo/data/osm/world_boundaries
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Extract NL area to Dutch RD (EPSG:28992)&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# get extent in EPSG:900913 from PostGIS:&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#    select ST_Extent(ST_Transform(way,900913)) from planet_osm_line;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;extent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;311523.765594493 6555476.44574815 822461.515529216 7160903.43417988&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;srs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;28992&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Extract NL for EPSG:&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;srs&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;/bin/rm &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;/bin/ls *&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;srs&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;*&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;ogr2ogr -f &lt;span class=&#34;s2&#34;&gt;&amp;#34;ESRI Shapefile&amp;#34;&lt;/span&gt; -s_srs EPSG:900913 -t_srs EPSG:&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;srs&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;               -spat &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;extent&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;  builtup_area_&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;srs&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;.shp builtup_area.shp
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;ogr2ogr -f &lt;span class=&#34;s2&#34;&gt;&amp;#34;ESRI Shapefile&amp;#34;&lt;/span&gt; -s_srs EPSG:900913 -t_srs EPSG:&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;srs&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;               -spat &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;extent&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;  processed_p_&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;srs&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;.shp processed_p.shp
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;ogr2ogr -f &lt;span class=&#34;s2&#34;&gt;&amp;#34;ESRI Shapefile&amp;#34;&lt;/span&gt; -s_srs EPSG:900913 -t_srs EPSG:&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;srs&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;  
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;               -spat &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;extent&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;  shoreline_300_&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;srs&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;.shp shoreline_300.shp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The extent in EPSG:900913 can be obtained from the data in PostGIS with the &lt;a href=&#34;http://www.postgresql.org/docs/8.4/static/app-psql.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;psql&lt;/a&gt;
 command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;select ST_Extent(ST_Transform(way,900913)) from planet_osm_line;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This extra step came about after great help from the very active &lt;a href=&#34;http://www.mail-archive.com/talk-nl@openstreetmap.org/info.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Dutch OSM mailing list&lt;/a&gt;
. You can read the relevant thread &lt;a href=&#34;http://www.mail-archive.com/talk-nl@openstreetmap.org/msg09240.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;here&lt;/a&gt;
. It became clear that the clip/reproject step was necessary. The reason is most probably the Mapnik bug &lt;a href=&#34;http://trac.mapnik.org/ticket/308&#34;&gt;http://trac.mapnik.org/ticket/308&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also make sure that you have the proper settings for EPSG:28992 in PROJ’s EPSG file, usually located in &lt;code&gt;/usr/share/proj/epsg&lt;/code&gt; and make sure that this setting is actually used by &lt;code&gt;ogr2ogr&lt;/code&gt;. Older versions of GDAL may use their own PROJ settings in their .csv files. The &lt;a href=&#34;http://bit.ly/9G5fAq&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;PROJ/PostGIS/GDAL issues around EPSG:28992&lt;/a&gt;
 deserve a blog-post by themselves. At this moment even &lt;a href=&#34;http://spatialreference.org/ref/epsg/28992/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;http://spatialreference.org/ref/epsg/28992&lt;/a&gt;
 publishes wrong PROJ values. The issue mainly deals with the &lt;code&gt;+towgs84&lt;/code&gt; parameter, needed for reprojections, not being present.&lt;/p&gt;
&lt;h3 id=&#34;step-5-install-and-configure-osm-mapnik-tools&#34;&gt;Step 5: install and configure OSM Mapnik tools&lt;/h3&gt;
&lt;p&gt;This step involves changing the OSM-specific Python-scripts and the Mapnik XML configuration (“The Mapnik Map File”) for invoking Mapnik.&lt;/p&gt;
&lt;p&gt;I installed SVN rev. 20274 with the command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;svn export http://svn.openstreetmap.org/applications/rendering/mapnik
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and ran:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;generate_xml.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;to generate a basic configuration.&lt;/p&gt;
&lt;p&gt;The main step is making changes to the Mapnik map file &lt;code&gt;osm.xml&lt;/code&gt; and its included files in &lt;code&gt;inc/*.xml.inc&lt;/code&gt;. Below is relevant info.&lt;/p&gt;
&lt;p&gt;We need to determine the extent for our tiling scheme. This is in general different from the extent of the dataset. It is the same extent that you will need in your tiling server like &lt;a href=&#34;http://tilecache.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;TileCache&lt;/a&gt;
 and your web client like &lt;a href=&#34;http://openlayers.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OpenLayers&lt;/a&gt;
. There is unfortunately no Dutch standard for this extent. I have used the following values&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;EPSG:28992 (RD)       -65200.96,    242799.04  375200.96,   683200.96
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt; EPSG:4326 (WGS84)     2.307,	       50.134         8.752,	       54.087
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Change extent in &lt;code&gt;datasource-settings.xml.inc&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;2.307,50.134,8.752,54.087
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Since our PostGIS data is in EPSG:4326 change &lt;code&gt;inc/settings.xml.inc&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&amp;lt;!ENTITY osm2pgsql_projection &amp;#34;&amp;amp;srs4326;&amp;#34; &amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Edit &lt;code&gt;inc/entities.xml.inc&lt;/code&gt; and add new XML entity for the &lt;a href=&#34;http://trac.osgeo.org/proj&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Proj&lt;/a&gt;
 definition for EPSG:28992.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&amp;lt;!ENTITY srs28992 &amp;#34;+proj=sterea
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;          +lat_0=52.15616055555555 +lon_0=5.38763888888889
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;          +k=0.9999079 +x_0=155000 +y_0=463000
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;          +ellps=bessel
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;          +towgs84=565.237,50.0087,465.658,-0.406857,0.350733,-1.87035,4.0812
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;          +units=m +no_defs&amp;#34; &amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;See also &lt;a href=&#34;http://spatialreference.org/ref/sr-org/6781/mapnik&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;here&lt;/a&gt;
 for the right “Proj” definition. The only change required in &lt;code&gt;osm.xml&lt;/code&gt; is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&amp;lt;Map bgcolor=&amp;#34;#b5d0d0&amp;#34; srs=&amp;#34;&amp;amp;srs28992;&amp;#34; minimum_version=&amp;#34;0.6.1&amp;#34;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There is no need to change Layer elements in &lt;code&gt;osm.xml&lt;/code&gt; since they keep the projection from the entity &lt;code&gt;osm2pgsql_projection&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In &lt;code&gt;inc/layer-shapefiles.xml.inc&lt;/code&gt; change the names/projections to those of the extracted/reprojected shape files in Step 4. I have used XML entities as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&amp;lt;layer name=&amp;#34;world&amp;#34; status=&amp;#34;on&amp;#34; srs=&amp;#34;&amp;amp;srs;&amp;#34;&amp;gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;     &amp;lt;stylename&amp;gt;world&amp;lt;/stylename&amp;gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;    &amp;lt;datasource&amp;gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;       &amp;lt;parameter name=&amp;#34;type&amp;#34;&amp;gt;shape&amp;lt;/parameter&amp;gt;
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;       &amp;lt;parameter name=&amp;#34;file&amp;#34;&amp;gt;&amp;amp;world_boundaries;/shoreline_300_&amp;amp;projection;&amp;lt;/parameter&amp;gt;
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;    &amp;lt;/datasource&amp;gt;
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;&amp;lt;/layer&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With &lt;code&gt;&amp;amp;srs;&lt;/code&gt; being EPSG:28992 and &lt;code&gt;&amp;amp;projection;&lt;/code&gt; 28992.&lt;/p&gt;
&lt;h3 id=&#34;step-6-generate-test-tile&#34;&gt;Step 6: Generate Test Tile&lt;/h3&gt;
&lt;p&gt;The moment of truth ! We are going to generate a single map image to test all of our settings.&lt;br&gt;
I made a copy of the Python file &lt;code&gt;generate_image.py&lt;/code&gt; and modifed this file as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;if __name__ == &amp;#34;__main__&amp;#34;:
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;    try:
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;        mapfile = os.environ[&amp;#39;MAPNIK_MAP_FILE&amp;#39;]
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;    except KeyError:
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;        mapfile = &amp;#34;osm.xml&amp;#34;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;    map_uri = &amp;#34;/path/to/output/file.png&amp;#34;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;    # Map image bbox
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;    ll = (4, 52.3, 5, 52.5)
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;    # zoomlevel
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;    z = 10
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;    imgx = 50 * z
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;    imgy = 50 * z
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;    m = mapnik.Map(imgx,imgy)
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;    mapnik.load_map(m,mapfile)
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;    prj = mapnik.Projection(&amp;#34;
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;     +proj=sterea +lat_0=52.15616055555555
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;     +lon_0=5.38763888888889
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;     +k=0.9999079 +x_0=155000 +y_0=463000  
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;     +ellps=bessel
&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;     +towgs84=565.237,50.0087,465.658,-0.406857,0.350733,-1.87035,4.0812
&lt;span class=&#34;ln&#34;&gt;24&lt;/span&gt;     +units=m +no_defs&amp;#34;)
&lt;span class=&#34;ln&#34;&gt;25&lt;/span&gt;    c0 = prj.forward(mapnik.Coord(ll[0],ll[1]))
&lt;span class=&#34;ln&#34;&gt;26&lt;/span&gt;    c1 = prj.forward(mapnik.Coord(ll[2],ll[3]))
&lt;span class=&#34;ln&#34;&gt;27&lt;/span&gt;    if hasattr(mapnik,&amp;#39;mapnik_version&amp;#39;) and mapnik.mapnik_version() &amp;amp;gt;= 800:
&lt;span class=&#34;ln&#34;&gt;28&lt;/span&gt;        bbox = mapnik.Box2d(c0.x,c0.y,c1.x,c1.y)
&lt;span class=&#34;ln&#34;&gt;29&lt;/span&gt;    else:
&lt;span class=&#34;ln&#34;&gt;30&lt;/span&gt;        bbox = mapnik.Envelope(c0.x,c0.y,c1.x,c1.y)
&lt;span class=&#34;ln&#34;&gt;31&lt;/span&gt;    m.zoom_to_box(bbox)
&lt;span class=&#34;ln&#34;&gt;32&lt;/span&gt;    im = mapnik.Image(imgx,imgy)
&lt;span class=&#34;ln&#34;&gt;33&lt;/span&gt;    mapnik.render(m, im)
&lt;span class=&#34;ln&#34;&gt;34&lt;/span&gt;    view = im.view(0,0,imgx,imgy) # x,y,width,height
&lt;span class=&#34;ln&#34;&gt;35&lt;/span&gt;    view.save(map_uri,&amp;#39;png&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It was here that many of the issues solved above emerged. Below is the image of the first attempt with a silent failure resulting in the World boundary shapefiles being ignored.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://www.justobjects.org/assets/media/osm-28992-no-shapes.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;After using extract/clip (Step 4) the resulting image became as follows.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://www.justobjects.org/assets/media/osm-28992-ok.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;This looked much better. Now the final step is generating all tiles for The Netherlands. Normally this can be done with the OSM script &lt;code&gt;generate_tiles.py&lt;/code&gt;, but this script is specific for the Google projection and should be rewritten for EPSG:28992 and the extent used above. For the time being I have used &lt;a href=&#34;http://tilecache.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;TileCache&lt;/a&gt;
 to render and serve the tiles. This is the final step.&lt;/p&gt;
&lt;h3 id=&#34;step-7-render-tiles-with-tilecache&#34;&gt;Step 7: render tiles with TileCache&lt;/h3&gt;
&lt;p&gt;Here I used a standard &lt;a href=&#34;http://tilecache.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;TileCache&lt;/a&gt;
 installation with the following configuration.&lt;/p&gt;
&lt;pre&gt;[osm_28992]
type=Mapnik
mapfile=/path/to/osm.xml
spherical_mercator=false
resolutions=860.160,430.080,215.040,107.520,53.760,26.880,13.440,6.720,3.360,
                     1.680,0.840,0.420,0.210,0.105,0.0525
metatile=yes
bbox=-65200.96, 242799.04, 375200.96, 683200.96
srs=EPSG:28992
&lt;/pre&gt;
&lt;p&gt;Note that the bbox is the same as the extent in the Mapnik mapfile. Together with these specific resolutions the resulting zoom-levels will approach natural map scales used in The Netherlands like 1:25000. Tiles will be generated during requests. One can also explicitly generate tiles using the standard TileCache script &lt;code&gt;tilecache_seed.py&lt;/code&gt;. I used:&lt;/p&gt;
&lt;pre&gt;su -s /bin/bash -c &#34;tilecache_seed.py osm_28992 0 12&#34; www-data
&lt;/pre&gt;
&lt;p&gt;This will take quite some time also dependent on your TileCache installation (CGI/FastCGI). IMO it will be better to rewrite OSM &lt;code&gt;generate_tiles.py&lt;/code&gt;. Below is a resulting excerpt from generated tiles.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://www.justobjects.org/assets/media/osm-28992-detail.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Somehow the map looks somewhat more busy than the standard OSM “Slippy Map”. This may be due to settings in &lt;code&gt;osm.xml&lt;/code&gt; with respect to scales and showing/hiding layers.&lt;/p&gt;
&lt;h3 id=&#34;finally&#34;&gt;Finally&lt;/h3&gt;
&lt;p&gt;I hope the above info is useful not just for those that need to generate tiles in Dutch projection but also for other projections. For example for an &lt;a href=&#34;http://inspire.jrc.ec.europa.eu/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;INSPIRE&lt;/a&gt;
 project I have generated tiles in ETRS89 (EPSG:4258) with some slight modifications to the Mapnik config and TileCache config. Some further work could include more automation within the OSM Mapnik scripts/config in particular &lt;code&gt;generate_tiles.py&lt;/code&gt;. Also, being able to use these tiles in &lt;a href=&#34;http://geowebcache.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoWebCache&lt;/a&gt;
 would be very useful.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>OSGeo Hacking Event Bolsena 2009</title>
      <link>https://justobjects.nl/osgeo-hacking-event-bolsena/</link>
      <pubDate>Mon, 29 Jun 2009 15:42:08 +0000</pubDate>
      
      <guid>https://justobjects.nl/osgeo-hacking-event-bolsena/</guid>
      <description>
        
          &lt;!-- &lt;img loading=&#34;lazy&#34; class=&#34;alignleft wp-image-267 size-medium&#34; src=&#34;uploads/2009/06/bolsena-2009-thumb-300x225.jpg&#34; alt=&#34;bolsena-2009-thumb&#34; width=&#34;300&#34; height=&#34;225&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2009/06/bolsena-2009-thumb-300x225.jpg 300w, https://justobjects.nl/wp-content/uploads/2009/06/bolsena-2009-thumb-200x150.jpg 200w, https://justobjects.nl/wp-content/uploads/2009/06/bolsena-2009-thumb-150x112.jpg 150w, https://justobjects.nl/wp-content/uploads/2009/06/bolsena-2009-thumb.jpg 400w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt; --&gt;
&lt;p&gt; &lt;br&gt;

&lt;div class=&#34;float_left&#34;&gt;
  &lt;a href=&#34;#ZgotmplZ&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2009/06/bolsena-2009-thumb-300x225.jpg&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

Last week I attended the &lt;a href=&#34;http://wiki.osgeo.org/wiki/OSGeo_Hacking_Event_2009&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSGeo Hacking event in Bolsena, Italy&lt;/a&gt;
. For a week developers from various Free/Open Source Geo-projects (mostly  &lt;a href=&#34;http://www.osgeo.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;OSGeo&lt;/a&gt;
 projects) get together in a monastry near Bolsena for code sprints, cross-project discussions, presentations, enjoying italian food and more fun. I have been working on the  &lt;a href=&#34;http://geonetwork-opensource.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoNetwork&lt;/a&gt;
 project some time, so it was good to meet and work with the GN team. Meeting project leads and developers and following presentations from other projects like &lt;a href=&#34;http://geoserver.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoServer&lt;/a&gt;
, &lt;a href=&#34;http://deegree.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Deegree&lt;/a&gt;
 and &lt;a href=&#34;http://mapbender.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;MapBender&lt;/a&gt;
 was really worthwhile. To get an impression you can watch the media mix I made from various photo’s/videos made by me and other participants.&lt;/p&gt;

&lt;div class=&#34;video&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Mxox3AsjH6Q?controls=1&amp;rel=0&#34; loading=&#34;lazy&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;


        
      </description>
    </item>
    
    <item>
      <title>Making a Mobile Game at Picnic 2007</title>
      <link>https://justobjects.nl/making-a-mobile-game-at-picnic-07/</link>
      <pubDate>Wed, 03 Oct 2007 14:15:08 +0000</pubDate>
      
      <guid>https://justobjects.nl/making-a-mobile-game-at-picnic-07/</guid>
      <description>
        
          &lt;!--
&lt;img loading=&#34;lazy&#34; class=&#34;alignleft wp-image-279 size-medium&#34; src=&#34;uploads/2007/10/walkandplay-thumb-300x242.jpg&#34; alt=&#34;walkandplay-thumb&#34; width=&#34;300&#34; height=&#34;242&#34; srcset=&#34;https://justobjects.nl/wp-content/uploads/2007/10/walkandplay-thumb-300x242.jpg 300w, https://justobjects.nl/wp-content/uploads/2007/10/walkandplay-thumb-185x150.jpg 185w, https://justobjects.nl/wp-content/uploads/2007/10/walkandplay-thumb-150x121.jpg 150w, https://justobjects.nl/wp-content/uploads/2007/10/walkandplay-thumb.jpg 428w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;
--&gt;
&lt;p&gt; &lt;/p&gt;

&lt;div class=&#34;float_left&#34;&gt;
  &lt;a href=&#34;#ZgotmplZ&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2007/10/walkandplay-thumb-300x242.jpg&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;
&lt;p&gt;At &lt;a href=&#34;http://www.picnicnetwork.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Picnic 07&lt;/a&gt;
 we held 2 workshops using our &lt;a href=&#34;http://walkandplay.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;WalkAndPlay mobile gamekit&lt;/a&gt;
 (based on &lt;a href=&#34;http://www.geotracing.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoTracing&lt;/a&gt;
). Here participants can Create, Play and View a GPS-based locative mobile game.&lt;/p&gt;
&lt;p&gt;Below is one of the results from the &lt;a href=&#34;http://www.picnicnetwork.org/article-7287-en.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Picnic Junior Workshop for highschools&lt;/a&gt;
. You may also want to view the &lt;a href=&#34;http://extern.waag.org/just/7scenes/walknplay-picnicjr.mov&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;high resolution movie&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;

&lt;div class=&#34;video&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/4-_HOk_83s4?controls=1&amp;rel=0&#34; loading=&#34;lazy&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;This work will be continued at &lt;a href=&#34;http://7scenes.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;7scenes&lt;/a&gt;
 (more info soon).&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Google Maps Hacking is Fun</title>
      <link>https://justobjects.nl/?p=15/</link>
      <pubDate>Fri, 16 Sep 2005 15:59:58 +0000</pubDate>
      
      <guid>https://justobjects.nl/?p=15/</guid>
      <description>
        
          &lt;p&gt;(The quick link for my experiments is &lt;a href=&#34;http://www.geoskating.com/gmap&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;www.geoskating.com/gmap&lt;/a&gt;
.)&lt;/p&gt;
&lt;p&gt;Just a week ago I learned about the &lt;a href=&#34;http://www.google.com/apis/maps&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Google Maps JavaScript API&lt;/a&gt;
. Surprising how easy it was to use and build upon. Especially for my &lt;a href=&#34;http://www.geoskating.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoSkating project&lt;/a&gt;
 I needed a more flexible way to display routes and media on a map. So I started experimenting with the Google Maps API. In less then 5 minutes I was able to create a basic map. But I needed more. Based on a &lt;a href=&#34;http://www.topografix.com/gpx.asp&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GPX (GPS track format)&lt;/a&gt;
 player from &lt;a href=&#34;http://jibbering.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Jim Ley&lt;/a&gt;
 I built a &lt;a href=&#34;http://www.geoskating.com/gs/player/trackplayer.jsp&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;TrackPlayer to play back skate routes&lt;/a&gt;
. In addition the &lt;a href=&#34;http://gmaps.tommangan.us/tlabel.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;TLabel lib&lt;/a&gt;
 allows you to overlay any HTML on a Google Map.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Adding layers from any WMS server&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Many map servers use a standard URL-pattern based on the &lt;a href=&#34;http://www.opengeospatial.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Web Map Server (WMS)&lt;/a&gt;
 standard.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.geoskating.com/gmap/gmap-wms-1.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;&amp;lt;img src=&amp;#34;/assets/media/gmap-overlay.jpg&amp;#34; border=&amp;#34;0&amp;#34; /&amp;gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;So I wanted more: adding my own layers integrated in the map preferably with transparency. Well, this is possible thanks to work by &lt;a href=&#34;http://www.spatialdatalogic.com/cs/blogs/brian_flood/archive/2005/07/11/39.aspx&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Brian Flood&lt;/a&gt;
 and&lt;br&gt;
&lt;a href=&#34;http://blog.kylemulka.com/?p=287&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Kyle Mulka&lt;/a&gt;
. I have created a &lt;a href=&#34;http://www.geoskating.com/gmap/gmap-wms.js&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;simple JavaScript&amp;lt;br&amp;gt;
library, gmap-wms.js&lt;/a&gt;
 through which you can add your own WMS layers to a Google Map. The example below&lt;br&gt;
is trivial using a single transparent GIF image&lt;img src=&#34;http://www.geoskating.com/gmap/route-wms.jsp&#34; border=&#34;0&#34; /&gt;&lt;br&gt;
by faking a WMS server.&lt;/p&gt;
&lt;p&gt;See all experiments at &lt;a href=&#34;http://www.geoskating.com/gmap&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;www.geoskating.com/gmap&lt;/a&gt;
&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Google Maps Hacking is Fun</title>
      <link>https://justobjects.nl/google-maps-hacking-is-fun-2/</link>
      <pubDate>Fri, 16 Sep 2005 15:54:37 +0000</pubDate>
      
      <guid>https://justobjects.nl/google-maps-hacking-is-fun-2/</guid>
      <description>
        
          &lt;p&gt;(The quick link for my experiments is &lt;a href=&#34;http://www.geoskating.com/gmap&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;www.geoskating.com/gmap&lt;/a&gt;
)&lt;/p&gt;
&lt;p&gt;Just a week ago I learned about the &lt;a href=&#34;http://www.google.com/apis/maps&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Google Maps JavaScript API&lt;/a&gt;
. Surprising how easy it was to use and build upon. Especially for my &lt;a href=&#34;http://www.geoskating.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GeoSkating project&lt;/a&gt;
 I needed a more flexible way to display routes and media on a map. So I started experimenting with the Google Maps API. In less then 5 minutes I was able to &lt;a href=&#34;http://www.geoskating.com/gmap/gmap.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;create a basic map&lt;/a&gt;
. But I needed more. Based on a &lt;a href=&#34;http://www.topografix.com/gpx.asp&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;GPX (GPS track format)&lt;/a&gt;
 player from &lt;a href=&#34;http://jibbering.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Jim Ley&lt;/a&gt;
 I built a &lt;a href=&#34;http://www.geoskating.com/gs/player/trackplayer.jsp&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;TrackPlayer to play back skate routes&lt;/a&gt;
. In addition the &lt;a href=&#34;http://gmaps.tommangan.us/tlabel.html&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;TLabel lib&lt;/a&gt;
 allows you to overlay any HTML on a Google Map. Note: also check out &lt;a href=&#34;http://ka-map.maptools.org/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;ka-Map&lt;/a&gt;
. With ka-Map you can do similar things plus it is open source.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Adding layers from any WMS server&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Many map servers use a standard URL-pattern based on the &lt;a href=&#34;http://www.opengeospatial.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Web Map Server (WMS)&lt;/a&gt;
 standard.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://justobjects.nl/uploads/2005/09/gmap-overlay.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;So I wanted more: adding my own layers integrated in the map preferably with transparency. Well, this is possible thanks to work by &lt;a href=&#34;http://www.spatialdatalogic.com/cs/blogs/brian_flood/archive/2005/07/11/39.aspx&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Brian Flood&lt;/a&gt;
 and &lt;a href=&#34;http://blog.kylemulka.com/?p=287&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Kyle Mulka&lt;/a&gt;
. I have created a &lt;a href=&#34;http://www.geoskating.com/gmap/gmap-wms.js&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;simple JavaScript library, gmap-wms.js&lt;/a&gt;
 through which you can add your own WMS layers to a Google Map. The example above is trivial using a single transparent GIF image by faking a WMS server. All Google Maps does is requesting tiles from your WMS server (a lot of them!). In reality you will be running your own WMS server like &lt;a href=&#34;http://mapserver.gis.umn.edu/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;MapServer&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;See all experiments at &lt;a href=&#34;http://www.geoskating.com/gmap&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;www.geoskating.com/gmap&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://www.geoskating.com/gmap/route-wms.jsp&#34; alt=&#34; &#34;&gt;&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>MIDP 2  on Mac OS X is here !</title>
      <link>https://justobjects.nl/midp-2-on-mac-os-x-is-here/</link>
      <pubDate>Fri, 11 Mar 2005 21:21:08 +0000</pubDate>
      
      <guid>https://justobjects.nl/midp-2-on-mac-os-x-is-here/</guid>
      <description>
        
          &lt;p&gt;
&lt;div class=&#34;float_left&#34;&gt;
  &lt;a href=&#34;#ZgotmplZ&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2005/03/bluetooth.gif&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

Since Mac OS X is already my preferred platform for Java development, I was very pleased to experience that J2ME development for MIDP 2.0 has finally become reality. I can now develop, compile, verify, package, run, debug and deploy MIDP 2.0 MIDlets from within my Java IDE (&lt;a href=&#34;http://www.jetbrains.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;IntelliJ IDEA&lt;/a&gt;
). All thanks to &lt;a href=&#34;http://www.mpowerplayer.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Michael Powers mpowerplayer&lt;/a&gt;
. Best way to start is to go to &lt;a href=&#34;http://developer.mpowerplayer.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;developer.mpowerplayer.com&lt;/a&gt;
 and download the SDK. But there is more.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;http://www.mpowerplayer.com&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Mpowerplayer&lt;/a&gt;
 offers the tools familiar to J2ME developers: MIDP2.0 jars, the preverify tool and a MIDP2.0 emulator. Additionally, if your Mac has &lt;a href=&#34;http://www.bluetooth.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Bluetooth&lt;/a&gt;
 support, you can quickly deploy your MIDLet using the OS X &lt;a href=&#34;http://www.apple.com/bluetooth/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Bluetooth File Exchange&lt;/a&gt;
. To automate deployment I wrote a one-line script &lt;code&gt;btsend.sh&lt;/code&gt; that is called directly from within &lt;a href=&#34;http://ant.apache.org&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Ant&lt;/a&gt;
:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/sh
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;/usr/bin/open -a &lt;span class=&#34;s2&#34;&gt;&amp;#34;/Applications/Utilities/Bluetooth File Exchange.app&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and then from within Ant&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&amp;lt;target name=&amp;#34;deploy&amp;#34;&amp;gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;  &amp;lt;exec executable=&amp;#34;${basedir}/btsend.sh&amp;#34;&amp;gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;    &amp;lt;arg line=&amp;#34;${myproject.jar}&amp;#34;/&amp;gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;  &amp;lt;/exec&amp;gt;
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&amp;lt;/target&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The only manual action is to select your mobile device from the Bluetooth File Exchange list of devices. On my Nokia 6600 phone I receive an incoming message and the installer is run.&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;float_left&#34;&gt;
  &lt;a href=&#34;#ZgotmplZ&#34;&gt;
    &lt;img class=&#34;lazy&#34;
      src=&#34;https://justobjects.nl/uploads/2005/03/gps-earthmate.png&#34;
      alt=&#34;&#34; /&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

If you are developing Bluetooth-based MIDlets using &lt;a href=&#34;http://www.jcp.org/en/jsr/detail?id=82&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;the JSR-82 Bluetooth API&lt;/a&gt;
 you can additionally download, evaluate and acquire the &lt;a href=&#34;http://www.avetana-gmbh.de/avetana-gmbh/produkte/jsr82.eng.xml&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Avetana JSR-82 implementation for OS X&lt;/a&gt;
. This allows you to fully test Bluetooth-based J2ME apps from within your IDE on Mac OS X. For example, I was able to connect and test to the &lt;a href=&#34;http://www.delorme.com/bluelogger&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Delorme Blue Logger GPS&lt;/a&gt;
&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Vertical centering with CSS</title>
      <link>https://justobjects.nl/vertical-centering-with-css/</link>
      <pubDate>Wed, 19 Jan 2005 09:37:56 +0000</pubDate>
      
      <guid>https://justobjects.nl/vertical-centering-with-css/</guid>
      <description>
        
          &lt;p&gt;After years of tweaking with HTML tables I finally found how to &lt;a href=&#34;http://www.wpdfd.com/editorial/wpd0103.htm#toptip&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;vertical Centring with CSS&lt;/a&gt;
. Found this through &lt;a href=&#34;http://www.hicksdesign.co.uk/journal/30/vertical-centering-with-css&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;www.hicksdesign.co.uk&lt;/a&gt;
.&lt;/p&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
